//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace VIS.CloudService {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CloudService.ServiceSoap")]
    public interface ServiceSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetVUnBilledInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetVUnBilledInfo(int AD_User_ID, string AccessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetVUnBilledInfo", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetVUnBilledInfoAsync(int AD_User_ID, string AccessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetVCustomerBillingSummary", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetVCustomerBillingSummary(int AD_User_ID, string AccessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetVCustomerBillingSummary", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetVCustomerBillingSummaryAsync(int AD_User_ID, string AccessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetVBillingInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetVBillingInfo(int AD_User_ID, string AccessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetVBillingInfo", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetVBillingInfoAsync(int AD_User_ID, string AccessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SetLead", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SetLead(
                    string CompanyName, 
                    string name, 
                    string title, 
                    string email, 
                    string phone, 
                    string web_url, 
                    int no_of_emp, 
                    int c_Currency_id, 
                    int r_source_id, 
                    int industry_ID, 
                    string city, 
                    int country_ID, 
                    string cur_solution, 
                    string pur_timeline, 
                    string comments, 
                    string year_sell_erp, 
                    string support, 
                    int bpgroup_ID, 
                    int C_Campaign_ID, 
                    int R_STATUS_ID, 
                    int C_Region_ID, 
                    int CreatedBy, 
                    int salesrep_id, 
                    int ad_org_id, 
                    int ad_client_id, 
                    int UpdatedBy, 
                    string AccessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SetLead", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SetLeadAsync(
                    string CompanyName, 
                    string name, 
                    string title, 
                    string email, 
                    string phone, 
                    string web_url, 
                    int no_of_emp, 
                    int c_Currency_id, 
                    int r_source_id, 
                    int industry_ID, 
                    string city, 
                    int country_ID, 
                    string cur_solution, 
                    string pur_timeline, 
                    string comments, 
                    string year_sell_erp, 
                    string support, 
                    int bpgroup_ID, 
                    int C_Campaign_ID, 
                    int R_STATUS_ID, 
                    int C_Region_ID, 
                    int CreatedBy, 
                    int salesrep_id, 
                    int ad_org_id, 
                    int ad_client_id, 
                    int UpdatedBy, 
                    string AccessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetTopicInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        VIS.CloudService.GetTopicInfoResponse GetTopicInfo(VIS.CloudService.GetTopicInfoRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetTopicInfo", ReplyAction="*")]
        System.Threading.Tasks.Task<VIS.CloudService.GetTopicInfoResponse> GetTopicInfoAsync(VIS.CloudService.GetTopicInfoRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetInstruction", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        VIS.CloudService.GetInstructionResponse GetInstruction(VIS.CloudService.GetInstructionRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetInstruction", ReplyAction="*")]
        System.Threading.Tasks.Task<VIS.CloudService.GetInstructionResponse> GetInstructionAsync(VIS.CloudService.GetInstructionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/serverInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string serverInfo();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/serverInfo", ReplyAction="*")]
        System.Threading.Tasks.Task<string> serverInfoAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetOldIncomleteDB", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        VIS.CloudService.InCompleteDBInfo GetOldIncomleteDB(string ZoneCode, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetOldIncomleteDB", ReplyAction="*")]
        System.Threading.Tasks.Task<VIS.CloudService.InCompleteDBInfo> GetOldIncomleteDBAsync(string ZoneCode, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeleteDBEntry", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool DeleteDBEntry(int databaseID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeleteDBEntry", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> DeleteDBEntryAsync(int databaseID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAssetNotInUse", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        VIS.CloudService.AssetNotInUse[] GetAssetNotInUse(string zoneCode, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAssetNotInUse", ReplyAction="*")]
        System.Threading.Tasks.Task<VIS.CloudService.AssetNotInUse[]> GetAssetNotInUseAsync(string zoneCode, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SendNotice", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SendNotice(int[] A_Asset_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SendNotice", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SendNoticeAsync(int[] A_Asset_ID, string accessKey);
        
        // CODEGEN: Parameter 'DownloadFileResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DownloadFile", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        VIS.CloudService.DownloadFileResponse DownloadFile(VIS.CloudService.DownloadFileRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DownloadFile", ReplyAction="*")]
        System.Threading.Tasks.Task<VIS.CloudService.DownloadFileResponse> DownloadFileAsync(VIS.CloudService.DownloadFileRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CheckUserFiles", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string CheckUserFiles(int UserID, string licenceKey, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CheckUserFiles", ReplyAction="*")]
        System.Threading.Tasks.Task<string> CheckUserFilesAsync(int UserID, string licenceKey, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCurrentRunningTenant", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetCurrentRunningTenant(string zoneCode, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCurrentRunningTenant", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetCurrentRunningTenantAsync(string zoneCode, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ModuleInstallationRequest", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string ModuleInstallationRequest(int AD_User_ID, int AD_ModuleInfo_ID, string ipAddress, int[] clients, string[] languages, string versionNo, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ModuleInstallationRequest", ReplyAction="*")]
        System.Threading.Tasks.Task<string> ModuleInstallationRequestAsync(int AD_User_ID, int AD_ModuleInfo_ID, string ipAddress, int[] clients, string[] languages, string versionNo, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetRequestToInstallModule", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        VIS.CloudService.RequestedModuleInfo[] GetRequestToInstallModule(string ZoneCode, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetRequestToInstallModule", ReplyAction="*")]
        System.Threading.Tasks.Task<VIS.CloudService.RequestedModuleInfo[]> GetRequestToInstallModuleAsync(string ZoneCode, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCustomerPServerInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        VIS.CloudService.CustomerPServerInfo GetCustomerPServerInfo(string ZoneCode, int A_Asset_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCustomerPServerInfo", ReplyAction="*")]
        System.Threading.Tasks.Task<VIS.CloudService.CustomerPServerInfo> GetCustomerPServerInfoAsync(string ZoneCode, int A_Asset_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetUserID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetUserID(string username, string password, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetUserID", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetUserIDAsync(string username, string password, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ForgotPortalPassword", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string ForgotPortalPassword(string userName, string userEmail, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ForgotPortalPassword", ReplyAction="*")]
        System.Threading.Tasks.Task<string> ForgotPortalPasswordAsync(string userName, string userEmail, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/VForgotPortalPassword", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string VForgotPortalPassword(string userName, string userEmail, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/VForgotPortalPassword", ReplyAction="*")]
        System.Threading.Tasks.Task<string> VForgotPortalPasswordAsync(string userName, string userEmail, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PForgotPortalPassword", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string PForgotPortalPassword(string userName, string userEmail, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PForgotPortalPassword", ReplyAction="*")]
        System.Threading.Tasks.Task<string> PForgotPortalPasswordAsync(string userName, string userEmail, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/NotifyServerCreated", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string NotifyServerCreated(int A_Asset_ID, int client_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/NotifyServerCreated", ReplyAction="*")]
        System.Threading.Tasks.Task<string> NotifyServerCreatedAsync(int A_Asset_ID, int client_ID, string accessKey);
        
        // CODEGEN: Parameter 'CS_CustomerTenantInfo_ID' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveErrorLog", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        VIS.CloudService.SaveErrorLogResponse SaveErrorLog(VIS.CloudService.SaveErrorLogRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveErrorLog", ReplyAction="*")]
        System.Threading.Tasks.Task<VIS.CloudService.SaveErrorLogResponse> SaveErrorLogAsync(VIS.CloudService.SaveErrorLogRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveErrorInLog", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SaveErrorInLog(string customerValue, int errorNumber, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveErrorInLog", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SaveErrorInLogAsync(string customerValue, int errorNumber, string accessKey);
        
        // CODEGEN: Parameter 'R_Request_ID' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveErrorInLogM1", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        VIS.CloudService.SaveErrorInLogM1Response SaveErrorInLogM1(VIS.CloudService.SaveErrorInLogM1Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveErrorInLogM1", ReplyAction="*")]
        System.Threading.Tasks.Task<VIS.CloudService.SaveErrorInLogM1Response> SaveErrorInLogM1Async(VIS.CloudService.SaveErrorInLogM1Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TestProccesorConnection", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string TestProccesorConnection(string zoneCode, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TestProccesorConnection", ReplyAction="*")]
        System.Threading.Tasks.Task<string> TestProccesorConnectionAsync(string zoneCode, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CreateProcessServer", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string CreateProcessServer(int AssetID, string zoneCode, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CreateProcessServer", ReplyAction="*")]
        System.Threading.Tasks.Task<string> CreateProcessServerAsync(int AssetID, string zoneCode, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CardVerifyPayment", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string CardVerifyPayment(int AD_User_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CardVerifyPayment", ReplyAction="*")]
        System.Threading.Tasks.Task<string> CardVerifyPaymentAsync(int AD_User_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IsCustomerAddMoreCompany", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string IsCustomerAddMoreCompany(int AD_User_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IsCustomerAddMoreCompany", ReplyAction="*")]
        System.Threading.Tasks.Task<string> IsCustomerAddMoreCompanyAsync(int AD_User_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCustomerDomainName", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetCustomerDomainName(int AD_User_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCustomerDomainName", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetCustomerDomainNameAsync(int AD_User_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/StartAndStopProcessor", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string StartAndStopProcessor(int A_Asset_ID, bool startServer, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/StartAndStopProcessor", ReplyAction="*")]
        System.Threading.Tasks.Task<string> StartAndStopProcessorAsync(int A_Asset_ID, bool startServer, string accessKey);
        
        // CODEGEN: Parameter 'DownloadDumpResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DownloadDump", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        VIS.CloudService.DownloadDumpResponse DownloadDump(VIS.CloudService.DownloadDumpRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DownloadDump", ReplyAction="*")]
        System.Threading.Tasks.Task<VIS.CloudService.DownloadDumpResponse> DownloadDumpAsync(VIS.CloudService.DownloadDumpRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ChangeLoginUserPassword", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string ChangeLoginUserPassword(int AD_User_ID, string oldPassword, string newPassword, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ChangeLoginUserPassword", ReplyAction="*")]
        System.Threading.Tasks.Task<string> ChangeLoginUserPasswordAsync(int AD_User_ID, string oldPassword, string newPassword, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SetApplicationStatusM1", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SetApplicationStatusM1(int AD_User_ID, char value, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SetApplicationStatusM1", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SetApplicationStatusM1Async(int AD_User_ID, char value, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SetApplicationStatusM2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SetApplicationStatusM2(int AD_User_ID, char value, int createdBy, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SetApplicationStatusM2", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SetApplicationStatusM2Async(int AD_User_ID, char value, int createdBy, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAllAppDeleteRequest", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        VIS.CloudService.BackupInfo GetAllAppDeleteRequest(string zoneCode, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAllAppDeleteRequest", ReplyAction="*")]
        System.Threading.Tasks.Task<VIS.CloudService.BackupInfo> GetAllAppDeleteRequestAsync(string zoneCode, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AssignServerIPToCustomerTenant", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string AssignServerIPToCustomerTenant(int CS_CustomerTenentInfo_ID, string value, int CS_ZoneMasterServer_ID, int M_Product_ID, int A_Asset_ID, int AD_User_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AssignServerIPToCustomerTenant", ReplyAction="*")]
        System.Threading.Tasks.Task<string> AssignServerIPToCustomerTenantAsync(int CS_CustomerTenentInfo_ID, string value, int CS_ZoneMasterServer_ID, int M_Product_ID, int A_Asset_ID, int AD_User_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetIpAssignRequest", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        VIS.CloudService.GetUnassignedIp GetIpAssignRequest(string zoneCode, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetIpAssignRequest", ReplyAction="*")]
        System.Threading.Tasks.Task<VIS.CloudService.GetUnassignedIp> GetIpAssignRequestAsync(string zoneCode, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/StartAndStopZoneServers", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string StartAndStopZoneServers(string zoneCode, bool isStart, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/StartAndStopZoneServers", ReplyAction="*")]
        System.Threading.Tasks.Task<string> StartAndStopZoneServersAsync(string zoneCode, bool isStart, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SetAssetDeleted", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SetAssetDeleted(int A_Asset_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SetAssetDeleted", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SetAssetDeletedAsync(int A_Asset_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetUserUrl", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetUserUrl(int AD_User_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetUserUrl", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetUserUrlAsync(int AD_User_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetUserProduct", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetUserProduct(int AD_user_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetUserProduct", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetUserProductAsync(int AD_user_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ResendEmail", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string ResendEmail(string type, int Ad_User_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ResendEmail", ReplyAction="*")]
        System.Threading.Tasks.Task<string> ResendEmailAsync(string type, int Ad_User_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CreateAdditionalDataBase", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string CreateAdditionalDataBase(string zoneCode, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CreateAdditionalDataBase", ReplyAction="*")]
        System.Threading.Tasks.Task<string> CreateAdditionalDataBaseAsync(string zoneCode, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetDummyDataBaseInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        VIS.CloudService.DummyDBMigrationInfo GetDummyDataBaseInfo(int zoneClientServerID, string zoneCode, int product_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetDummyDataBaseInfo", ReplyAction="*")]
        System.Threading.Tasks.Task<VIS.CloudService.DummyDBMigrationInfo> GetDummyDataBaseInfoAsync(int zoneClientServerID, string zoneCode, int product_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateDataBaseEntry", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string UpdateDataBaseEntry(int CS_DataBase_ID, bool isDatabaseImported, bool istenantCreated, bool isMigrationDone, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateDataBaseEntry", ReplyAction="*")]
        System.Threading.Tasks.Task<string> UpdateDataBaseEntryAsync(int CS_DataBase_ID, bool isDatabaseImported, bool istenantCreated, bool isMigrationDone, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAdminIDForMigraration", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        VIS.CloudService.DBMigrationInfo GetAdminIDForMigraration(int CS_DataBase_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAdminIDForMigraration", ReplyAction="*")]
        System.Threading.Tasks.Task<VIS.CloudService.DBMigrationInfo> GetAdminIDForMigrarationAsync(int CS_DataBase_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CreateDummyTenant", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string CreateDummyTenant(
                    string clientName, 
                    string orgName, 
                    string adminUser, 
                    string city, 
                    int countryID, 
                    string countryCode, 
                    int regionID, 
                    int currencyID, 
                    string currencyName, 
                    int zoneMasterServerID, 
                    string globalIP, 
                    string dbUserName, 
                    string dbPwd, 
                    string dbPort, 
                    string dbService, 
                    int CS_DataBase_ID, 
                    string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CreateDummyTenant", ReplyAction="*")]
        System.Threading.Tasks.Task<string> CreateDummyTenantAsync(
                    string clientName, 
                    string orgName, 
                    string adminUser, 
                    string city, 
                    int countryID, 
                    string countryCode, 
                    int regionID, 
                    int currencyID, 
                    string currencyName, 
                    int zoneMasterServerID, 
                    string globalIP, 
                    string dbUserName, 
                    string dbPwd, 
                    string dbPort, 
                    string dbService, 
                    int CS_DataBase_ID, 
                    string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetRequestsToCreateDB", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        VIS.CloudService.DBInfo GetRequestsToCreateDB(string zoneCode, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetRequestsToCreateDB", ReplyAction="*")]
        System.Threading.Tasks.Task<VIS.CloudService.DBInfo> GetRequestsToCreateDBAsync(string zoneCode, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetRequestsToCreateDBWithFtpInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        VIS.CloudService.DummyDBWithFTpInfo GetRequestsToCreateDBWithFtpInfo(string zoneCode, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetRequestsToCreateDBWithFtpInfo", ReplyAction="*")]
        System.Threading.Tasks.Task<VIS.CloudService.DummyDBWithFTpInfo> GetRequestsToCreateDBWithFtpInfoAsync(string zoneCode, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MarkMailServerCreated", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string MarkMailServerCreated(int A_Asset_ID, bool isMailServerCreated, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MarkMailServerCreated", ReplyAction="*")]
        System.Threading.Tasks.Task<string> MarkMailServerCreatedAsync(int A_Asset_ID, bool isMailServerCreated, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetUserInfoOfTokenKey", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetUserInfoOfTokenKey(string tokenKey, string msg, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetUserInfoOfTokenKey", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetUserInfoOfTokenKeyAsync(string tokenKey, string msg, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetNews", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetNews(string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetNews", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetNewsAsync(string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCustomerOpenTickets", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetCustomerOpenTickets(int Ad_user_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCustomerOpenTickets", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetCustomerOpenTicketsAsync(int Ad_user_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPartnerLeads", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetPartnerLeads(int Ad_User_ID, int CountryID, int statusID, string orderBy, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPartnerLeads", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetPartnerLeadsAsync(int Ad_User_ID, int CountryID, int statusID, string orderBy, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PartnerLogin", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string PartnerLogin(string username, string password, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PartnerLogin", ReplyAction="*")]
        System.Threading.Tasks.Task<string> PartnerLoginAsync(string username, string password, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetDetailedCustomer", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetDetailedCustomer(int Ad_user_ID, string orderBy, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetDetailedCustomer", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetDetailedCustomerAsync(int Ad_user_ID, string orderBy, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCustomerProspectList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetCustomerProspectList(int Ad_user_ID, string orderBy, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCustomerProspectList", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetCustomerProspectListAsync(int Ad_user_ID, string orderBy, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPartnerRecentTickets", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetPartnerRecentTickets(int Ad_user_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPartnerRecentTickets", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetPartnerRecentTicketsAsync(int Ad_user_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SetCustomerAssociationWithPartner", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SetCustomerAssociationWithPartner(int R_Request_ID, string Action, string Remarks, int AD_User_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SetCustomerAssociationWithPartner", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SetCustomerAssociationWithPartnerAsync(int R_Request_ID, string Action, string Remarks, int AD_User_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCustomerBillingDetail", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetCustomerBillingDetail(int Customer_ID, int AD_user_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCustomerBillingDetail", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetCustomerBillingDetailAsync(int Customer_ID, int AD_user_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPartnerLinks", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetPartnerLinks(int PartnerID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPartnerLinks", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetPartnerLinksAsync(int PartnerID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCustomerDetailedView", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetCustomerDetailedView(int Customer_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCustomerDetailedView", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetCustomerDetailedViewAsync(int Customer_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetVCustomerDetailsView", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetVCustomerDetailsView(int AD_User_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetVCustomerDetailsView", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetVCustomerDetailsViewAsync(int AD_User_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetProductPrice", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetProductPrice(string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetProductPrice", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetProductPriceAsync(string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetProfessionalProductPrice", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetProfessionalProductPrice(int AD_User_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetProfessionalProductPrice", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetProfessionalProductPriceAsync(int AD_User_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetTotalCurrentUser", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetTotalCurrentUser(int AD_User_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetTotalCurrentUser", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetTotalCurrentUserAsync(int AD_User_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpgradeOrRenewVCustomerSubscription", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string UpgradeOrRenewVCustomerSubscription(int AD_User_ID, int PlanID, string CardType, string NameOnCard, string CardNumber, int ExpiryDay, int ExpiryMonth, int ExpiryYear, int CVNumber, string ipAddress, string TrxID, int NoOfUser, bool IsNew, decimal priceEntered, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpgradeOrRenewVCustomerSubscription", ReplyAction="*")]
        System.Threading.Tasks.Task<string> UpgradeOrRenewVCustomerSubscriptionAsync(int AD_User_ID, int PlanID, string CardType, string NameOnCard, string CardNumber, int ExpiryDay, int ExpiryMonth, int ExpiryYear, int CVNumber, string ipAddress, string TrxID, int NoOfUser, bool IsNew, decimal priceEntered, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPartnerDetailsView", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetPartnerDetailsView(int Partner_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPartnerDetailsView", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetPartnerDetailsViewAsync(int Partner_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AddNewLinkofPartner", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string AddNewLinkofPartner(int partnerID, string username, string password, string url, string description, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AddNewLinkofPartner", ReplyAction="*")]
        System.Threading.Tasks.Task<string> AddNewLinkofPartnerAsync(int partnerID, string username, string password, string url, string description, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetDetailsViewPartnerSubscription", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetDetailsViewPartnerSubscription(int PartnerID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetDetailsViewPartnerSubscription", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetDetailsViewPartnerSubscriptionAsync(int PartnerID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetDetailsViewCustomerSubscription", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetDetailsViewCustomerSubscription(int AD_User_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetDetailsViewCustomerSubscription", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetDetailsViewCustomerSubscriptionAsync(int AD_User_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpgradeOrRenewSubscription", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string UpgradeOrRenewSubscription(int AD_User_ID, int PlanID, string CardType, string NameOnCard, string CardNumber, int ExpiryDay, int ExpiryMonth, int ExpiryYear, int CVNumber, string TrxID, string ipAddress, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpgradeOrRenewSubscription", ReplyAction="*")]
        System.Threading.Tasks.Task<string> UpgradeOrRenewSubscriptionAsync(int AD_User_ID, int PlanID, string CardType, string NameOnCard, string CardNumber, int ExpiryDay, int ExpiryMonth, int ExpiryYear, int CVNumber, string TrxID, string ipAddress, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPartnerCustomer", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetPartnerCustomer(int AD_User_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPartnerCustomer", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetPartnerCustomerAsync(int AD_User_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCustomerFilteredTickets", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetCustomerFilteredTickets(int Partner_ID, int CustomerID, int statusID, string orderBy, int pendingDays, bool isforwarded, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCustomerFilteredTickets", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetCustomerFilteredTicketsAsync(int Partner_ID, int CustomerID, int statusID, string orderBy, int pendingDays, bool isforwarded, string accessKey);
        
        // CODEGEN: Parameter 'Attachment' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SetForwardTickets", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        VIS.CloudService.SetForwardTicketsResponse SetForwardTickets(VIS.CloudService.SetForwardTicketsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SetForwardTickets", ReplyAction="*")]
        System.Threading.Tasks.Task<VIS.CloudService.SetForwardTicketsResponse> SetForwardTicketsAsync(VIS.CloudService.SetForwardTicketsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPartnerFilteredTickets", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetPartnerFilteredTickets(int AD_User_ID, int StatusID, int PendingDays, string OrderBy, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPartnerFilteredTickets", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetPartnerFilteredTicketsAsync(int AD_User_ID, int StatusID, int PendingDays, string OrderBy, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetLeadStatus", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetLeadStatus(string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetLeadStatus", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetLeadStatusAsync(string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCustomerAddOns", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetCustomerAddOns(int AD_user_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCustomerAddOns", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetCustomerAddOnsAsync(int AD_user_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SetPartnerAccountInformation", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SetPartnerAccountInformation(int AD_User_ID, string Fullname, string Title, string Phone, string Fax, string WebsiteURL, string city, string Address, int CountryID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SetPartnerAccountInformation", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SetPartnerAccountInformationAsync(int AD_User_ID, string Fullname, string Title, string Phone, string Fax, string WebsiteURL, string city, string Address, int CountryID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SetCustomerAccountInformation", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SetCustomerAccountInformation(int AD_User_ID, string Fullname, string Title, string Phone, string Fax, string WebsiteURL, string city, string Address, int CountryID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SetCustomerAccountInformation", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SetCustomerAccountInformationAsync(int AD_User_ID, string Fullname, string Title, string Phone, string Fax, string WebsiteURL, string city, string Address, int CountryID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SetLeadStatus", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SetLeadStatus(int LeadID, int StatusID, string Request, string Comment, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SetLeadStatus", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SetLeadStatusAsync(int LeadID, int StatusID, string Request, string Comment, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPartnerPlans", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetPartnerPlans(int AD_User_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPartnerPlans", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetPartnerPlansAsync(int AD_User_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPartnerListing", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetPartnerListing(int CountryID, int AD_User_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPartnerListing", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetPartnerListingAsync(int CountryID, int AD_User_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPartnerFilteredListing", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetPartnerFilteredListing(int RegionID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPartnerFilteredListing", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetPartnerFilteredListingAsync(int RegionID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPartnerLeadDetails", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetPartnerLeadDetails(int C_Lead_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPartnerLeadDetails", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetPartnerLeadDetailsAsync(int C_Lead_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CancellAssociationRequest", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string CancellAssociationRequest(int R_Request_ID, string Remarks, int AD_User_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CancellAssociationRequest", ReplyAction="*")]
        System.Threading.Tasks.Task<string> CancellAssociationRequestAsync(int R_Request_ID, string Remarks, int AD_User_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeletePartnerLink", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string DeletePartnerLink(int DemoLinkID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeletePartnerLink", ReplyAction="*")]
        System.Threading.Tasks.Task<string> DeletePartnerLinkAsync(int DemoLinkID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/partnerAssociationRequest", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string partnerAssociationRequest(int partner_ID, int AD_user_ID, string remarks, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/partnerAssociationRequest", ReplyAction="*")]
        System.Threading.Tasks.Task<string> partnerAssociationRequestAsync(int partner_ID, int AD_user_ID, string remarks, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPartnerCountries", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetPartnerCountries(string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPartnerCountries", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetPartnerCountriesAsync(string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAssociatedSP", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetAssociatedSP(int AD_User_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAssociatedSP", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetAssociatedSPAsync(int AD_User_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Aboutvienna", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        VIS.CloudService.AboutUs Aboutvienna(string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Aboutvienna", ReplyAction="*")]
        System.Threading.Tasks.Task<VIS.CloudService.AboutUs> AboutviennaAsync(string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetSupportTicketStatus", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetSupportTicketStatus(string AccessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetSupportTicketStatus", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetSupportTicketStatusAsync(string AccessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCustomerStatusSupportTicket", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetCustomerStatusSupportTicket(int r_status_id, int ad_user_id, string orderby, string AccessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCustomerStatusSupportTicket", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetCustomerStatusSupportTicketAsync(int r_status_id, int ad_user_id, string orderby, string AccessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCustomerSupportTickets", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetCustomerSupportTickets(int ad_user_id, string AccessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCustomerSupportTickets", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetCustomerSupportTicketsAsync(int ad_user_id, string AccessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCustomerHistoryLines", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetCustomerHistoryLines(int documentNo, string AccessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCustomerHistoryLines", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetCustomerHistoryLinesAsync(int documentNo, string AccessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCustomerTicketPriority", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetCustomerTicketPriority(string AccessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCustomerTicketPriority", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetCustomerTicketPriorityAsync(string AccessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCustomerTicketRequestType", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetCustomerTicketRequestType(string AccessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCustomerTicketRequestType", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetCustomerTicketRequestTypeAsync(string AccessKey);
        
        // CODEGEN: Parameter 'file' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SetCustomerNewTicket", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        VIS.CloudService.SetCustomerNewTicketResponse SetCustomerNewTicket(VIS.CloudService.SetCustomerNewTicketRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SetCustomerNewTicket", ReplyAction="*")]
        System.Threading.Tasks.Task<VIS.CloudService.SetCustomerNewTicketResponse> SetCustomerNewTicketAsync(VIS.CloudService.SetCustomerNewTicketRequest request);
        
        // CODEGEN: Parameter 'file' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SetCustomerTicketHistoryLines", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        VIS.CloudService.SetCustomerTicketHistoryLinesResponse SetCustomerTicketHistoryLines(VIS.CloudService.SetCustomerTicketHistoryLinesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SetCustomerTicketHistoryLines", ReplyAction="*")]
        System.Threading.Tasks.Task<VIS.CloudService.SetCustomerTicketHistoryLinesResponse> SetCustomerTicketHistoryLinesAsync(VIS.CloudService.SetCustomerTicketHistoryLinesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCustomerTicketDetails", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetCustomerTicketDetails(int DocNo, string AccessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCustomerTicketDetails", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetCustomerTicketDetailsAsync(int DocNo, string AccessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SetDBRestore", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SetDBRestore(int A_Asset_ID, char value, string AccessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SetDBRestore", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SetDBRestoreAsync(int A_Asset_ID, char value, string AccessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Hello", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Hello(string abc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Hello", ReplyAction="*")]
        System.Threading.Tasks.Task<string> HelloAsync(string abc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveCustomerTenentInfoM1", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SaveCustomerTenentInfoM1(string domainName, string tenentName, string orgName, string adminUserName, int currency_ID, int country_ID, string city, int regionID, int AD_User_ID, int CS_ZoneMasterServer_ID, string ipaddress, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveCustomerTenentInfoM1", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SaveCustomerTenentInfoM1Async(string domainName, string tenentName, string orgName, string adminUserName, int currency_ID, int country_ID, string city, int regionID, int AD_User_ID, int CS_ZoneMasterServer_ID, string ipaddress, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveCustomerTenentInfoM1fromMobile", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SaveCustomerTenentInfoM1fromMobile(string domainName, string tenentName, string orgName, string adminUserName, int currency_ID, int country_ID, string city, int regionID, int AD_User_ID, int CS_ZoneMasterServer_ID, string ipaddress, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveCustomerTenentInfoM1fromMobile", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SaveCustomerTenentInfoM1fromMobileAsync(string domainName, string tenentName, string orgName, string adminUserName, int currency_ID, int country_ID, string city, int regionID, int AD_User_ID, int CS_ZoneMasterServer_ID, string ipaddress, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveCustomerTenentInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SaveCustomerTenentInfo(string tenentName, string orgName, string adminUserName, int currency_ID, int country_ID, string city, int regionID, int AD_User_ID, int CS_ZoneMasterServer_ID, string ipaddress, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveCustomerTenentInfo", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SaveCustomerTenentInfoAsync(string tenentName, string orgName, string adminUserName, int currency_ID, int country_ID, string city, int regionID, int AD_User_ID, int CS_ZoneMasterServer_ID, string ipaddress, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IsDomainExist", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string IsDomainExist(string domainName, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IsDomainExist", ReplyAction="*")]
        System.Threading.Tasks.Task<string> IsDomainExistAsync(string domainName, string accessKey);
        
        // CODEGEN: Parameter 'Campaign_ID' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/RegisterInfoFromModule", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        VIS.CloudService.RegisterInfoFromModuleResponse RegisterInfoFromModule(VIS.CloudService.RegisterInfoFromModuleRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/RegisterInfoFromModule", ReplyAction="*")]
        System.Threading.Tasks.Task<VIS.CloudService.RegisterInfoFromModuleResponse> RegisterInfoFromModuleAsync(VIS.CloudService.RegisterInfoFromModuleRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/RegisterInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string RegisterInfo(
                    string userName, 
                    string pwd, 
                    string companyName, 
                    string fullName, 
                    string mobile, 
                    string phone, 
                    string emailid, 
                    string address, 
                    int countryid, 
                    int regionid, 
                    string city, 
                    int productID, 
                    string productName, 
                    string cardType, 
                    string cardNumber, 
                    string csvNumber, 
                    string cardName, 
                    int expiryDay, 
                    int expiryMonth, 
                    int expiryYear, 
                    string billingAddress, 
                    string billingCity, 
                    string billingZip, 
                    int billingCountryID, 
                    string domainUserID, 
                    string domainUserLink, 
                    string domainName, 
                    string gender, 
                    int birthDay, 
                    int birthMonth, 
                    int birthYear, 
                    string ipAddress, 
                    int Campaign_ID, 
                    string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/RegisterInfo", ReplyAction="*")]
        System.Threading.Tasks.Task<string> RegisterInfoAsync(
                    string userName, 
                    string pwd, 
                    string companyName, 
                    string fullName, 
                    string mobile, 
                    string phone, 
                    string emailid, 
                    string address, 
                    int countryid, 
                    int regionid, 
                    string city, 
                    int productID, 
                    string productName, 
                    string cardType, 
                    string cardNumber, 
                    string csvNumber, 
                    string cardName, 
                    int expiryDay, 
                    int expiryMonth, 
                    int expiryYear, 
                    string billingAddress, 
                    string billingCity, 
                    string billingZip, 
                    int billingCountryID, 
                    string domainUserID, 
                    string domainUserLink, 
                    string domainName, 
                    string gender, 
                    int birthDay, 
                    int birthMonth, 
                    int birthYear, 
                    string ipAddress, 
                    int Campaign_ID, 
                    string accessKey);
        
        // CODEGEN: Parameter 'CampaignID' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/VRegisterInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        VIS.CloudService.VRegisterInfoResponse VRegisterInfo(VIS.CloudService.VRegisterInfoRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/VRegisterInfo", ReplyAction="*")]
        System.Threading.Tasks.Task<VIS.CloudService.VRegisterInfoResponse> VRegisterInfoAsync(VIS.CloudService.VRegisterInfoRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCustomerServerInfoM1", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        VIS.CloudService.ServerInfo GetCustomerServerInfoM1(int A_Asset_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCustomerServerInfoM1", ReplyAction="*")]
        System.Threading.Tasks.Task<VIS.CloudService.ServerInfo> GetCustomerServerInfoM1Async(int A_Asset_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCustomerServerInfoM2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        VIS.CloudService.ServerInfo GetCustomerServerInfoM2(int tanent_ID, string url, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCustomerServerInfoM2", ReplyAction="*")]
        System.Threading.Tasks.Task<VIS.CloudService.ServerInfo> GetCustomerServerInfoM2Async(int tanent_ID, string url, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCustomerServerInfoM3", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        VIS.CloudService.ServerInfo GetCustomerServerInfoM3(int AD_User_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCustomerServerInfoM3", ReplyAction="*")]
        System.Threading.Tasks.Task<VIS.CloudService.ServerInfo> GetCustomerServerInfoM3Async(int AD_User_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCustomerServerInfoM4", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        VIS.CloudService.ServerInfo GetCustomerServerInfoM4(string value, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCustomerServerInfoM4", ReplyAction="*")]
        System.Threading.Tasks.Task<VIS.CloudService.ServerInfo> GetCustomerServerInfoM4Async(string value, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/VerifyUserM1", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string VerifyUserM1(string userKey, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/VerifyUserM1", ReplyAction="*")]
        System.Threading.Tasks.Task<string> VerifyUserM1Async(string userKey, string accessKey);
        
        // CODEGEN: Parameter 'GetAmountResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAmount", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        VIS.CloudService.GetAmountResponse GetAmount(VIS.CloudService.GetAmountRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAmount", ReplyAction="*")]
        System.Threading.Tasks.Task<VIS.CloudService.GetAmountResponse> GetAmountAsync(VIS.CloudService.GetAmountRequest request);
        
        // CODEGEN: Parameter 'backupAfter' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SubscribeProduct", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        VIS.CloudService.SubscribeProductResponse SubscribeProduct(VIS.CloudService.SubscribeProductRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SubscribeProduct", ReplyAction="*")]
        System.Threading.Tasks.Task<VIS.CloudService.SubscribeProductResponse> SubscribeProductAsync(VIS.CloudService.SubscribeProductRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UnSubscribeProduct", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string UnSubscribeProduct(int AD_User_ID, int M_Product_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UnSubscribeProduct", ReplyAction="*")]
        System.Threading.Tasks.Task<string> UnSubscribeProductAsync(int AD_User_ID, int M_Product_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetFTPInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        VIS.CloudService.FTPInfo GetFTPInfo(int CS_ZoneMasterServer_ID, int M_Product_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetFTPInfo", ReplyAction="*")]
        System.Threading.Tasks.Task<VIS.CloudService.FTPInfo> GetFTPInfoAsync(int CS_ZoneMasterServer_ID, int M_Product_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAllCountries", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetAllCountries(string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAllCountries", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetAllCountriesAsync(string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAllCountriesFromMobile", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetAllCountriesFromMobile(string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAllCountriesFromMobile", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetAllCountriesFromMobileAsync(string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetNewTenant", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        VIS.CloudService.AssetInfo GetNewTenant(string zoneCode, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetNewTenant", ReplyAction="*")]
        System.Threading.Tasks.Task<VIS.CloudService.AssetInfo> GetNewTenantAsync(string zoneCode, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetRelatedProduct", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetRelatedProduct(int M_Product_ID, int Ad_user_ID, string SubscriptionType, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetRelatedProduct", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetRelatedProductAsync(int M_Product_ID, int Ad_user_ID, string SubscriptionType, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCustomerAccountDetail", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetCustomerAccountDetail(int Ad_User_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCustomerAccountDetail", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetCustomerAccountDetailAsync(int Ad_User_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetRelatedProductM1", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetRelatedProductM1(int AD_User_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetRelatedProductM1", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetRelatedProductM1Async(int AD_User_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SetCustomerAccountDetail", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SetCustomerAccountDetail(int Ad_user_id, string cardName, string CSVNumber, int cardNumber, int ExpiryDate, int ExpiryMonth, int ExpiryYear, char cardType, string address, string city, string zip, int Country_id, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SetCustomerAccountDetail", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SetCustomerAccountDetailAsync(int Ad_user_id, string cardName, string CSVNumber, int cardNumber, int ExpiryDate, int ExpiryMonth, int ExpiryYear, char cardType, string address, string city, string zip, int Country_id, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCustomerNotification", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetCustomerNotification(int Ad_User_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCustomerNotification", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetCustomerNotificationAsync(int Ad_User_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCustomerNotificationM1", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetCustomerNotificationM1(int Ad_Note_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCustomerNotificationM1", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetCustomerNotificationM1Async(int Ad_Note_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AcknowledgeCustomerNotification", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string AcknowledgeCustomerNotification(int Ad_note_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AcknowledgeCustomerNotification", ReplyAction="*")]
        System.Threading.Tasks.Task<string> AcknowledgeCustomerNotificationAsync(int Ad_note_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCustomerCompanyDetail", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetCustomerCompanyDetail(int AD_User_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCustomerCompanyDetail", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetCustomerCompanyDetailAsync(int AD_User_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Login", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Login(string username, string password, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Login", ReplyAction="*")]
        System.Threading.Tasks.Task<string> LoginAsync(string username, string password, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/LoginFromMobile", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string LoginFromMobile(string username, string password, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/LoginFromMobile", ReplyAction="*")]
        System.Threading.Tasks.Task<string> LoginFromMobileAsync(string username, string password, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/VLogin", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string VLogin(string username, string password, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/VLogin", ReplyAction="*")]
        System.Threading.Tasks.Task<string> VLoginAsync(string username, string password, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IsFreeProduct", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string IsFreeProduct(int Ad_User_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IsFreeProduct", ReplyAction="*")]
        System.Threading.Tasks.Task<string> IsFreeProductAsync(int Ad_User_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CheckUserVerifiedM1", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string CheckUserVerifiedM1(int Ad_User_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CheckUserVerifiedM1", ReplyAction="*")]
        System.Threading.Tasks.Task<string> CheckUserVerifiedM1Async(int Ad_User_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CheckUserVerifiedM2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string CheckUserVerifiedM2(string username, string password, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CheckUserVerifiedM2", ReplyAction="*")]
        System.Threading.Tasks.Task<string> CheckUserVerifiedM2Async(string username, string password, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCustomerDBBackUp", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetCustomerDBBackUp(int Ad_User_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCustomerDBBackUp", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetCustomerDBBackUpAsync(int Ad_User_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/RestoreDBBackUp", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string RestoreDBBackUp(int Ad_User_ID, string fileName, string ipaddress, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/RestoreDBBackUp", ReplyAction="*")]
        System.Threading.Tasks.Task<string> RestoreDBBackUpAsync(int Ad_User_ID, string fileName, string ipaddress, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/VerifyUserM2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string VerifyUserM2(int Ad_user_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/VerifyUserM2", ReplyAction="*")]
        System.Threading.Tasks.Task<string> VerifyUserM2Async(int Ad_user_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/VerifyUserM3", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string VerifyUserM3(string userName, string password, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/VerifyUserM3", ReplyAction="*")]
        System.Threading.Tasks.Task<string> VerifyUserM3Async(string userName, string password, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/VerifyUserM4", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string VerifyUserM4(string LicenseKey, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/VerifyUserM4", ReplyAction="*")]
        System.Threading.Tasks.Task<string> VerifyUserM4Async(string LicenseKey, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeleteDBBackUp", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string DeleteDBBackUp(int AD_User_ID, string FileName, int R_Request_ID, string ipaddress, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeleteDBBackUp", ReplyAction="*")]
        System.Threading.Tasks.Task<string> DeleteDBBackUpAsync(int AD_User_ID, string FileName, int R_Request_ID, string ipaddress, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CreateBackUp", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string CreateBackUp(int AD_User_ID, string Comment, string ipaddress, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CreateBackUp", ReplyAction="*")]
        System.Threading.Tasks.Task<string> CreateBackUpAsync(int AD_User_ID, string Comment, string ipaddress, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ChangeAdminPasswordOnClientERP", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string ChangeAdminPasswordOnClientERP(string username, string newPassword, int AD_User_ID, int Tenant_ID, int AdminUser_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ChangeAdminPasswordOnClientERP", ReplyAction="*")]
        System.Threading.Tasks.Task<string> ChangeAdminPasswordOnClientERPAsync(string username, string newPassword, int AD_User_ID, int Tenant_ID, int AdminUser_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCustomerZoneCode", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetCustomerZoneCode(int AD_User_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCustomerZoneCode", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetCustomerZoneCodeAsync(int AD_User_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ForgetPassword", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string ForgetPassword(string UserEmail, int AD_User_ID, int AdminUser_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ForgetPassword", ReplyAction="*")]
        System.Threading.Tasks.Task<string> ForgetPasswordAsync(string UserEmail, int AD_User_ID, int AdminUser_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/VForgetPassword", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string VForgetPassword(string UserEmail, int AD_User_ID, int AdminUser_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/VForgetPassword", ReplyAction="*")]
        System.Threading.Tasks.Task<string> VForgetPasswordAsync(string UserEmail, int AD_User_ID, int AdminUser_ID, string accessKey);
        
        // CODEGEN: Parameter 'isAppServerCreated' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateAsset", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        VIS.CloudService.UpdateAssetResponse UpdateAsset(VIS.CloudService.UpdateAssetRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateAsset", ReplyAction="*")]
        System.Threading.Tasks.Task<VIS.CloudService.UpdateAssetResponse> UpdateAssetAsync(VIS.CloudService.UpdateAssetRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAllCurrency", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetAllCurrency(string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAllCurrency", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetAllCurrencyAsync(string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAllCurrencyFromMobile", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetAllCurrencyFromMobile(string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAllCurrencyFromMobile", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetAllCurrencyFromMobileAsync(string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CreateTenant", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string CreateTenant(int A_Asset_ID, string zoneCode, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CreateTenant", ReplyAction="*")]
        System.Threading.Tasks.Task<string> CreateTenantAsync(int A_Asset_ID, string zoneCode, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAllDBBackupRequest", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        VIS.CloudService.BackupInfo GetAllDBBackupRequest(string zoneCode, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAllDBBackupRequest", ReplyAction="*")]
        System.Threading.Tasks.Task<VIS.CloudService.BackupInfo> GetAllDBBackupRequestAsync(string zoneCode, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CloseRequest", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string CloseRequest(int R_Request_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CloseRequest", ReplyAction="*")]
        System.Threading.Tasks.Task<string> CloseRequestAsync(int R_Request_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/FailedRequest", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string FailedRequest(int R_Request_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/FailedRequest", ReplyAction="*")]
        System.Threading.Tasks.Task<string> FailedRequestAsync(int R_Request_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCustomerSpaceM1", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetCustomerSpaceM1(int AD_User_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCustomerSpaceM1", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetCustomerSpaceM1Async(int AD_User_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCustomerSpaceM2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetCustomerSpaceM2(int A_Asset_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCustomerSpaceM2", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetCustomerSpaceM2Async(int A_Asset_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SetCustomerSpace", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SetCustomerSpace(int A_Asset_ID, int ASUsedSpace, int DBSUsedSpace, int PSUsedSpace, int DBBackupSize, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SetCustomerSpace", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SetCustomerSpaceAsync(int A_Asset_ID, int ASUsedSpace, int DBSUsedSpace, int PSUsedSpace, int DBBackupSize, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAllDBDeleteRequest", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        VIS.CloudService.BackupInfo GetAllDBDeleteRequest(string zoneCode, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAllDBDeleteRequest", ReplyAction="*")]
        System.Threading.Tasks.Task<VIS.CloudService.BackupInfo> GetAllDBDeleteRequestAsync(string zoneCode, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAllDBRestoreRequest", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        VIS.CloudService.BackupInfo GetAllDBRestoreRequest(string zoneCode, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAllDBRestoreRequest", ReplyAction="*")]
        System.Threading.Tasks.Task<VIS.CloudService.BackupInfo> GetAllDBRestoreRequestAsync(string zoneCode, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CreateCustomerUser", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string CreateCustomerUser(string url, int adminUserID, string adminUserName, int tenantID, int count, bool isLoginUser, bool isDeleted, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CreateCustomerUser", ReplyAction="*")]
        System.Threading.Tasks.Task<string> CreateCustomerUserAsync(string url, int adminUserID, string adminUserName, int tenantID, int count, bool isLoginUser, bool isDeleted, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/VerifyTenantCreated", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string VerifyTenantCreated(int Ad_user_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/VerifyTenantCreated", ReplyAction="*")]
        System.Threading.Tasks.Task<string> VerifyTenantCreatedAsync(int Ad_user_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/VerifyTenantCreatedFromMobile", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string VerifyTenantCreatedFromMobile(int Ad_user_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/VerifyTenantCreatedFromMobile", ReplyAction="*")]
        System.Threading.Tasks.Task<string> VerifyTenantCreatedFromMobileAsync(int Ad_user_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAllZoneMasterServer", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetAllZoneMasterServer(string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAllZoneMasterServer", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetAllZoneMasterServerAsync(string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAllZoneMasterServerFromMobile", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetAllZoneMasterServerFromMobile(string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAllZoneMasterServerFromMobile", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetAllZoneMasterServerFromMobileAsync(string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetTenantforDBMigration", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        VIS.CloudService.DBMigrationInfo GetTenantforDBMigration(int AssetID, string zoneCode, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetTenantforDBMigration", ReplyAction="*")]
        System.Threading.Tasks.Task<VIS.CloudService.DBMigrationInfo> GetTenantforDBMigrationAsync(int AssetID, string zoneCode, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetTenantforDBMigrationWithServerInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        VIS.CloudService.MigrationRecordAndServerInfo GetTenantforDBMigrationWithServerInfo(int AssetID, string zoneCode, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetTenantforDBMigrationWithServerInfo", ReplyAction="*")]
        System.Threading.Tasks.Task<VIS.CloudService.MigrationRecordAndServerInfo> GetTenantforDBMigrationWithServerInfoAsync(int AssetID, string zoneCode, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SetDBTempMigrationInProcess", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SetDBTempMigrationInProcess(int tenantDBTempInfoID, char value, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SetDBTempMigrationInProcess", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SetDBTempMigrationInProcessAsync(int tenantDBTempInfoID, char value, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SetIsDBTempMigrated", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SetIsDBTempMigrated(int tenantDBTempInfoID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SetIsDBTempMigrated", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SetIsDBTempMigratedAsync(int tenantDBTempInfoID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SetAliseCardNo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SetAliseCardNo(int AD_User_ID, string aliseCardNo, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SetAliseCardNo", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SetAliseCardNoAsync(int AD_User_ID, string aliseCardNo, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAliseCardNo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetAliseCardNo(int ad_user_id, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAliseCardNo", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetAliseCardNoAsync(int ad_user_id, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SetLastLogin", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SetLastLogin(int tenant_ID, string url, string date, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SetLastLogin", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SetLastLoginAsync(int tenant_ID, string url, string date, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CheckCustomerUserSpaceM1", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string CheckCustomerUserSpaceM1(int A_Asset_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CheckCustomerUserSpaceM1", ReplyAction="*")]
        System.Threading.Tasks.Task<string> CheckCustomerUserSpaceM1Async(int A_Asset_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CheckCustomerUserSpaceM2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string CheckCustomerUserSpaceM2(int AD_User_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CheckCustomerUserSpaceM2", ReplyAction="*")]
        System.Threading.Tasks.Task<string> CheckCustomerUserSpaceM2Async(int AD_User_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CheckCustomerUserSpaceM3", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string CheckCustomerUserSpaceM3(string url, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CheckCustomerUserSpaceM3", ReplyAction="*")]
        System.Threading.Tasks.Task<string> CheckCustomerUserSpaceM3Async(string url, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/isAllowedToContinue", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string isAllowedToContinue(string url, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/isAllowedToContinue", ReplyAction="*")]
        System.Threading.Tasks.Task<string> isAllowedToContinueAsync(string url, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/BuyMoreSpace", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string BuyMoreSpace(int AD_user_ID, int Space, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/BuyMoreSpace", ReplyAction="*")]
        System.Threading.Tasks.Task<string> BuyMoreSpaceAsync(int AD_user_ID, int Space, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetBillingInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetBillingInfo(int AD_User_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetBillingInfo", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetBillingInfoAsync(int AD_User_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetUnBilledInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetUnBilledInfo(int AD_User_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetUnBilledInfo", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetUnBilledInfoAsync(int AD_User_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAllTenantforDNS", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        VIS.CloudService.DNSInfo GetAllTenantforDNS(string zoneCode, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAllTenantforDNS", ReplyAction="*")]
        System.Threading.Tasks.Task<VIS.CloudService.DNSInfo> GetAllTenantforDNSAsync(string zoneCode, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateDNSStatus", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string UpdateDNSStatus(int A_Asset_ID, string serverType, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateDNSStatus", ReplyAction="*")]
        System.Threading.Tasks.Task<string> UpdateDNSStatusAsync(int A_Asset_ID, string serverType, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateCustomerSpace", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string UpdateCustomerSpace(string zoneCode, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateCustomerSpace", ReplyAction="*")]
        System.Threading.Tasks.Task<string> UpdateCustomerSpaceAsync(string zoneCode, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ScheduleBackup", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string ScheduleBackup(int numberOfDay, int AD_User_ID, string ipaddress, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ScheduleBackup", ReplyAction="*")]
        System.Threading.Tasks.Task<string> ScheduleBackupAsync(int numberOfDay, int AD_User_ID, string ipaddress, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SetCustomerPersonalDetail", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SetCustomerPersonalDetail(int AD_User_ID, string fullName, string userName, string email, string companyName, string mobile, string city, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SetCustomerPersonalDetail", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SetCustomerPersonalDetailAsync(int AD_User_ID, string fullName, string userName, string email, string companyName, string mobile, string city, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCustomerPersonalDetail", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetCustomerPersonalDetail(int AD_User_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCustomerPersonalDetail", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetCustomerPersonalDetailAsync(int AD_User_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCustomerBillingSummary", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetCustomerBillingSummary(int AD_User_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCustomerBillingSummary", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetCustomerBillingSummaryAsync(int AD_User_ID, string accessKey);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTopicInfo", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetTopicInfoRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string url;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public bool isInitConfig;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string langCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public string searchText;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public string option;
        
        public GetTopicInfoRequest() {
        }
        
        public GetTopicInfoRequest(string url, bool isInitConfig, string langCode, string searchText, string option) {
            this.url = url;
            this.isInitConfig = isInitConfig;
            this.langCode = langCode;
            this.searchText = searchText;
            this.option = option;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTopicInfoResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetTopicInfoResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public System.Data.DataSet GetTopicInfoResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string error;
        
        public GetTopicInfoResponse() {
        }
        
        public GetTopicInfoResponse(System.Data.DataSet GetTopicInfoResult, string error) {
            this.GetTopicInfoResult = GetTopicInfoResult;
            this.error = error;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetInstruction", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetInstructionRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int K_TopicInfo_ID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string langCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string optional;
        
        public GetInstructionRequest() {
        }
        
        public GetInstructionRequest(int K_TopicInfo_ID, string langCode, string optional) {
            this.K_TopicInfo_ID = K_TopicInfo_ID;
            this.langCode = langCode;
            this.optional = optional;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetInstructionResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetInstructionResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public System.Data.DataSet GetInstructionResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string error;
        
        public GetInstructionResponse() {
        }
        
        public GetInstructionResponse(System.Data.DataSet GetInstructionResult, string error) {
            this.GetInstructionResult = GetInstructionResult;
            this.error = error;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class InCompleteDBInfo : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string[] systemUserNameField;
        
        private string[] systemPwdField;
        
        private string[] dBSystemUserNameField;
        
        private string[] dBSystemPwdField;
        
        private string[] dBUserNameField;
        
        private string[] dBPwdField;
        
        private string[] dBServiceField;
        
        private string[] portField;
        
        private string[] globalIPField;
        
        private int[] dbIDField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=0)]
        public string[] SystemUserName {
            get {
                return this.systemUserNameField;
            }
            set {
                this.systemUserNameField = value;
                this.RaisePropertyChanged("SystemUserName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=1)]
        public string[] SystemPwd {
            get {
                return this.systemPwdField;
            }
            set {
                this.systemPwdField = value;
                this.RaisePropertyChanged("SystemPwd");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=2)]
        public string[] DBSystemUserName {
            get {
                return this.dBSystemUserNameField;
            }
            set {
                this.dBSystemUserNameField = value;
                this.RaisePropertyChanged("DBSystemUserName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=3)]
        public string[] DBSystemPwd {
            get {
                return this.dBSystemPwdField;
            }
            set {
                this.dBSystemPwdField = value;
                this.RaisePropertyChanged("DBSystemPwd");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=4)]
        public string[] DBUserName {
            get {
                return this.dBUserNameField;
            }
            set {
                this.dBUserNameField = value;
                this.RaisePropertyChanged("DBUserName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=5)]
        public string[] DBPwd {
            get {
                return this.dBPwdField;
            }
            set {
                this.dBPwdField = value;
                this.RaisePropertyChanged("DBPwd");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=6)]
        public string[] DBService {
            get {
                return this.dBServiceField;
            }
            set {
                this.dBServiceField = value;
                this.RaisePropertyChanged("DBService");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=7)]
        public string[] Port {
            get {
                return this.portField;
            }
            set {
                this.portField = value;
                this.RaisePropertyChanged("Port");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=8)]
        public string[] GlobalIP {
            get {
                return this.globalIPField;
            }
            set {
                this.globalIPField = value;
                this.RaisePropertyChanged("GlobalIP");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=9)]
        public int[] dbID {
            get {
                return this.dbIDField;
            }
            set {
                this.dbIDField = value;
                this.RaisePropertyChanged("dbID");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class DNSInfo : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string[] valueField;
        
        private string[] globalIpField;
        
        private int[] a_Asset_IDField;
        
        private string[] serverTypeField;
        
        private string[] isDeletedField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=0)]
        public string[] value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
                this.RaisePropertyChanged("value");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=1)]
        public string[] GlobalIp {
            get {
                return this.globalIpField;
            }
            set {
                this.globalIpField = value;
                this.RaisePropertyChanged("GlobalIp");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=2)]
        public int[] A_Asset_ID {
            get {
                return this.a_Asset_IDField;
            }
            set {
                this.a_Asset_IDField = value;
                this.RaisePropertyChanged("A_Asset_ID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=3)]
        public string[] ServerType {
            get {
                return this.serverTypeField;
            }
            set {
                this.serverTypeField = value;
                this.RaisePropertyChanged("ServerType");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=4)]
        public string[] IsDeleted {
            get {
                return this.isDeletedField;
            }
            set {
                this.isDeletedField = value;
                this.RaisePropertyChanged("IsDeleted");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class MigrationRecordAndServerInfo : object, System.ComponentModel.INotifyPropertyChanged {
        
        private DBMigrationInfo customerDBInfoField;
        
        private ServerInfo customerServerInfoField;
        
        private string errorMsgField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public DBMigrationInfo CustomerDBInfo {
            get {
                return this.customerDBInfoField;
            }
            set {
                this.customerDBInfoField = value;
                this.RaisePropertyChanged("CustomerDBInfo");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public ServerInfo CustomerServerInfo {
            get {
                return this.customerServerInfoField;
            }
            set {
                this.customerServerInfoField = value;
                this.RaisePropertyChanged("CustomerServerInfo");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string ErrorMsg {
            get {
                return this.errorMsgField;
            }
            set {
                this.errorMsgField = value;
                this.RaisePropertyChanged("ErrorMsg");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class DBMigrationInfo : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string productIDField;
        
        private string assetIDField;
        
        private string userIDField;
        
        private string zoneServerMasterIDField;
        
        private string adminRoleIDField;
        
        private string adminUserField;
        
        private string adminUserIDField;
        
        private string adminUserPwdField;
        
        private string orgIDField;
        
        private string orgNameField;
        
        private string clientNameField;
        
        private string clientIDField;
        
        private string globalIPField;
        
        private string localIPField;
        
        private string tempDBUserNameField;
        
        private string tempDbPasswordField;
        
        private string dBTypeField;
        
        private string dBServiceField;
        
        private string dBPortField;
        
        private string tenantDBInfoIDField;
        
        private string errorMsgField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string ProductID {
            get {
                return this.productIDField;
            }
            set {
                this.productIDField = value;
                this.RaisePropertyChanged("ProductID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string AssetID {
            get {
                return this.assetIDField;
            }
            set {
                this.assetIDField = value;
                this.RaisePropertyChanged("AssetID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string UserID {
            get {
                return this.userIDField;
            }
            set {
                this.userIDField = value;
                this.RaisePropertyChanged("UserID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string ZoneServerMasterID {
            get {
                return this.zoneServerMasterIDField;
            }
            set {
                this.zoneServerMasterIDField = value;
                this.RaisePropertyChanged("ZoneServerMasterID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string AdminRoleID {
            get {
                return this.adminRoleIDField;
            }
            set {
                this.adminRoleIDField = value;
                this.RaisePropertyChanged("AdminRoleID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string AdminUser {
            get {
                return this.adminUserField;
            }
            set {
                this.adminUserField = value;
                this.RaisePropertyChanged("AdminUser");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string AdminUserID {
            get {
                return this.adminUserIDField;
            }
            set {
                this.adminUserIDField = value;
                this.RaisePropertyChanged("AdminUserID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public string AdminUserPwd {
            get {
                return this.adminUserPwdField;
            }
            set {
                this.adminUserPwdField = value;
                this.RaisePropertyChanged("AdminUserPwd");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public string OrgID {
            get {
                return this.orgIDField;
            }
            set {
                this.orgIDField = value;
                this.RaisePropertyChanged("OrgID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public string OrgName {
            get {
                return this.orgNameField;
            }
            set {
                this.orgNameField = value;
                this.RaisePropertyChanged("OrgName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public string ClientName {
            get {
                return this.clientNameField;
            }
            set {
                this.clientNameField = value;
                this.RaisePropertyChanged("ClientName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=11)]
        public string ClientID {
            get {
                return this.clientIDField;
            }
            set {
                this.clientIDField = value;
                this.RaisePropertyChanged("ClientID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=12)]
        public string GlobalIP {
            get {
                return this.globalIPField;
            }
            set {
                this.globalIPField = value;
                this.RaisePropertyChanged("GlobalIP");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=13)]
        public string LocalIP {
            get {
                return this.localIPField;
            }
            set {
                this.localIPField = value;
                this.RaisePropertyChanged("LocalIP");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=14)]
        public string TempDBUserName {
            get {
                return this.tempDBUserNameField;
            }
            set {
                this.tempDBUserNameField = value;
                this.RaisePropertyChanged("TempDBUserName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=15)]
        public string TempDbPassword {
            get {
                return this.tempDbPasswordField;
            }
            set {
                this.tempDbPasswordField = value;
                this.RaisePropertyChanged("TempDbPassword");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=16)]
        public string DBType {
            get {
                return this.dBTypeField;
            }
            set {
                this.dBTypeField = value;
                this.RaisePropertyChanged("DBType");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=17)]
        public string DBService {
            get {
                return this.dBServiceField;
            }
            set {
                this.dBServiceField = value;
                this.RaisePropertyChanged("DBService");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=18)]
        public string DBPort {
            get {
                return this.dBPortField;
            }
            set {
                this.dBPortField = value;
                this.RaisePropertyChanged("DBPort");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=19)]
        public string TenantDBInfoID {
            get {
                return this.tenantDBInfoIDField;
            }
            set {
                this.tenantDBInfoIDField = value;
                this.RaisePropertyChanged("TenantDBInfoID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=20)]
        public string ErrorMsg {
            get {
                return this.errorMsgField;
            }
            set {
                this.errorMsgField = value;
                this.RaisePropertyChanged("ErrorMsg");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ServerInfo : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string customerWebSiteUrlField;
        
        private string customerDBUserNameField;
        
        private string customerDBPasswordField;
        
        private string customerAppFolderNameField;
        
        private string customerDBFolderNameField;
        
        private string customerProcessFolderNameField;
        
        private string customerValueField;
        
        private string appFilePathField;
        
        private string dBFilePathField;
        
        private string processFilePathField;
        
        private string customerAppServerLocalIpAddressField;
        
        private string customerAppServerGlobalIpAddressField;
        
        private string customerDBServerLocalIpAddressField;
        
        private string customerDBServerGlobalIpAddressField;
        
        private string customerProcessServerLocalIpAddressField;
        
        private string customerProcessServerGlobalIpAddressField;
        
        private string serverTypeField;
        
        private string dataBaseTypeField;
        
        private string dataBaseServiceField;
        
        private string customerAppServerSystemUserNameField;
        
        private string customerDBServerSystemUserNameField;
        
        private string customerProcessServerSystemUserNameField;
        
        private string customerAppServerSystemPasswordField;
        
        private string customerDBServerSystemPasswordField;
        
        private string customerProcessServerSystemPasswordField;
        
        private string appPortNumberField;
        
        private string dBPortNumberField;
        
        private string processPortNumberField;
        
        private string appFolderNameField;
        
        private string dBFolderNameField;
        
        private string processFolderNameField;
        
        private string dBSystemUserNameField;
        
        private string dBSystemPasswordField;
        
        private bool isUseLocalIPForProcessServerField;
        
        private bool isUseLocalIPForDBServerField;
        
        private bool isUseLocalIPForAppServerField;
        
        private string processWebServiceAddressField;
        
        private string impDBWebServiceAddressField;
        
        private string appWebServiceAddressField;
        
        private string expDBWebServiceAddressField;
        
        private string dBWebServiceAddressField;
        
        private string customerProcessServerUrlField;
        
        private string mailServerUrlField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string CustomerWebSiteUrl {
            get {
                return this.customerWebSiteUrlField;
            }
            set {
                this.customerWebSiteUrlField = value;
                this.RaisePropertyChanged("CustomerWebSiteUrl");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string CustomerDBUserName {
            get {
                return this.customerDBUserNameField;
            }
            set {
                this.customerDBUserNameField = value;
                this.RaisePropertyChanged("CustomerDBUserName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string CustomerDBPassword {
            get {
                return this.customerDBPasswordField;
            }
            set {
                this.customerDBPasswordField = value;
                this.RaisePropertyChanged("CustomerDBPassword");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string CustomerAppFolderName {
            get {
                return this.customerAppFolderNameField;
            }
            set {
                this.customerAppFolderNameField = value;
                this.RaisePropertyChanged("CustomerAppFolderName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string CustomerDBFolderName {
            get {
                return this.customerDBFolderNameField;
            }
            set {
                this.customerDBFolderNameField = value;
                this.RaisePropertyChanged("CustomerDBFolderName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string CustomerProcessFolderName {
            get {
                return this.customerProcessFolderNameField;
            }
            set {
                this.customerProcessFolderNameField = value;
                this.RaisePropertyChanged("CustomerProcessFolderName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string CustomerValue {
            get {
                return this.customerValueField;
            }
            set {
                this.customerValueField = value;
                this.RaisePropertyChanged("CustomerValue");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public string AppFilePath {
            get {
                return this.appFilePathField;
            }
            set {
                this.appFilePathField = value;
                this.RaisePropertyChanged("AppFilePath");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public string DBFilePath {
            get {
                return this.dBFilePathField;
            }
            set {
                this.dBFilePathField = value;
                this.RaisePropertyChanged("DBFilePath");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public string ProcessFilePath {
            get {
                return this.processFilePathField;
            }
            set {
                this.processFilePathField = value;
                this.RaisePropertyChanged("ProcessFilePath");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public string CustomerAppServerLocalIpAddress {
            get {
                return this.customerAppServerLocalIpAddressField;
            }
            set {
                this.customerAppServerLocalIpAddressField = value;
                this.RaisePropertyChanged("CustomerAppServerLocalIpAddress");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=11)]
        public string CustomerAppServerGlobalIpAddress {
            get {
                return this.customerAppServerGlobalIpAddressField;
            }
            set {
                this.customerAppServerGlobalIpAddressField = value;
                this.RaisePropertyChanged("CustomerAppServerGlobalIpAddress");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=12)]
        public string CustomerDBServerLocalIpAddress {
            get {
                return this.customerDBServerLocalIpAddressField;
            }
            set {
                this.customerDBServerLocalIpAddressField = value;
                this.RaisePropertyChanged("CustomerDBServerLocalIpAddress");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=13)]
        public string CustomerDBServerGlobalIpAddress {
            get {
                return this.customerDBServerGlobalIpAddressField;
            }
            set {
                this.customerDBServerGlobalIpAddressField = value;
                this.RaisePropertyChanged("CustomerDBServerGlobalIpAddress");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=14)]
        public string CustomerProcessServerLocalIpAddress {
            get {
                return this.customerProcessServerLocalIpAddressField;
            }
            set {
                this.customerProcessServerLocalIpAddressField = value;
                this.RaisePropertyChanged("CustomerProcessServerLocalIpAddress");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=15)]
        public string CustomerProcessServerGlobalIpAddress {
            get {
                return this.customerProcessServerGlobalIpAddressField;
            }
            set {
                this.customerProcessServerGlobalIpAddressField = value;
                this.RaisePropertyChanged("CustomerProcessServerGlobalIpAddress");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=16)]
        public string ServerType {
            get {
                return this.serverTypeField;
            }
            set {
                this.serverTypeField = value;
                this.RaisePropertyChanged("ServerType");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=17)]
        public string DataBaseType {
            get {
                return this.dataBaseTypeField;
            }
            set {
                this.dataBaseTypeField = value;
                this.RaisePropertyChanged("DataBaseType");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=18)]
        public string DataBaseService {
            get {
                return this.dataBaseServiceField;
            }
            set {
                this.dataBaseServiceField = value;
                this.RaisePropertyChanged("DataBaseService");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=19)]
        public string CustomerAppServerSystemUserName {
            get {
                return this.customerAppServerSystemUserNameField;
            }
            set {
                this.customerAppServerSystemUserNameField = value;
                this.RaisePropertyChanged("CustomerAppServerSystemUserName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=20)]
        public string CustomerDBServerSystemUserName {
            get {
                return this.customerDBServerSystemUserNameField;
            }
            set {
                this.customerDBServerSystemUserNameField = value;
                this.RaisePropertyChanged("CustomerDBServerSystemUserName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=21)]
        public string CustomerProcessServerSystemUserName {
            get {
                return this.customerProcessServerSystemUserNameField;
            }
            set {
                this.customerProcessServerSystemUserNameField = value;
                this.RaisePropertyChanged("CustomerProcessServerSystemUserName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=22)]
        public string CustomerAppServerSystemPassword {
            get {
                return this.customerAppServerSystemPasswordField;
            }
            set {
                this.customerAppServerSystemPasswordField = value;
                this.RaisePropertyChanged("CustomerAppServerSystemPassword");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=23)]
        public string CustomerDBServerSystemPassword {
            get {
                return this.customerDBServerSystemPasswordField;
            }
            set {
                this.customerDBServerSystemPasswordField = value;
                this.RaisePropertyChanged("CustomerDBServerSystemPassword");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=24)]
        public string CustomerProcessServerSystemPassword {
            get {
                return this.customerProcessServerSystemPasswordField;
            }
            set {
                this.customerProcessServerSystemPasswordField = value;
                this.RaisePropertyChanged("CustomerProcessServerSystemPassword");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=25)]
        public string AppPortNumber {
            get {
                return this.appPortNumberField;
            }
            set {
                this.appPortNumberField = value;
                this.RaisePropertyChanged("AppPortNumber");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=26)]
        public string DBPortNumber {
            get {
                return this.dBPortNumberField;
            }
            set {
                this.dBPortNumberField = value;
                this.RaisePropertyChanged("DBPortNumber");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=27)]
        public string ProcessPortNumber {
            get {
                return this.processPortNumberField;
            }
            set {
                this.processPortNumberField = value;
                this.RaisePropertyChanged("ProcessPortNumber");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=28)]
        public string AppFolderName {
            get {
                return this.appFolderNameField;
            }
            set {
                this.appFolderNameField = value;
                this.RaisePropertyChanged("AppFolderName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=29)]
        public string DBFolderName {
            get {
                return this.dBFolderNameField;
            }
            set {
                this.dBFolderNameField = value;
                this.RaisePropertyChanged("DBFolderName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=30)]
        public string ProcessFolderName {
            get {
                return this.processFolderNameField;
            }
            set {
                this.processFolderNameField = value;
                this.RaisePropertyChanged("ProcessFolderName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=31)]
        public string DBSystemUserName {
            get {
                return this.dBSystemUserNameField;
            }
            set {
                this.dBSystemUserNameField = value;
                this.RaisePropertyChanged("DBSystemUserName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=32)]
        public string DBSystemPassword {
            get {
                return this.dBSystemPasswordField;
            }
            set {
                this.dBSystemPasswordField = value;
                this.RaisePropertyChanged("DBSystemPassword");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=33)]
        public bool IsUseLocalIPForProcessServer {
            get {
                return this.isUseLocalIPForProcessServerField;
            }
            set {
                this.isUseLocalIPForProcessServerField = value;
                this.RaisePropertyChanged("IsUseLocalIPForProcessServer");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=34)]
        public bool IsUseLocalIPForDBServer {
            get {
                return this.isUseLocalIPForDBServerField;
            }
            set {
                this.isUseLocalIPForDBServerField = value;
                this.RaisePropertyChanged("IsUseLocalIPForDBServer");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=35)]
        public bool IsUseLocalIPForAppServer {
            get {
                return this.isUseLocalIPForAppServerField;
            }
            set {
                this.isUseLocalIPForAppServerField = value;
                this.RaisePropertyChanged("IsUseLocalIPForAppServer");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=36)]
        public string ProcessWebServiceAddress {
            get {
                return this.processWebServiceAddressField;
            }
            set {
                this.processWebServiceAddressField = value;
                this.RaisePropertyChanged("ProcessWebServiceAddress");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=37)]
        public string ImpDBWebServiceAddress {
            get {
                return this.impDBWebServiceAddressField;
            }
            set {
                this.impDBWebServiceAddressField = value;
                this.RaisePropertyChanged("ImpDBWebServiceAddress");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=38)]
        public string AppWebServiceAddress {
            get {
                return this.appWebServiceAddressField;
            }
            set {
                this.appWebServiceAddressField = value;
                this.RaisePropertyChanged("AppWebServiceAddress");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=39)]
        public string ExpDBWebServiceAddress {
            get {
                return this.expDBWebServiceAddressField;
            }
            set {
                this.expDBWebServiceAddressField = value;
                this.RaisePropertyChanged("ExpDBWebServiceAddress");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=40)]
        public string DBWebServiceAddress {
            get {
                return this.dBWebServiceAddressField;
            }
            set {
                this.dBWebServiceAddressField = value;
                this.RaisePropertyChanged("DBWebServiceAddress");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=41)]
        public string CustomerProcessServerUrl {
            get {
                return this.customerProcessServerUrlField;
            }
            set {
                this.customerProcessServerUrlField = value;
                this.RaisePropertyChanged("CustomerProcessServerUrl");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=42)]
        public string MailServerUrl {
            get {
                return this.mailServerUrlField;
            }
            set {
                this.mailServerUrlField = value;
                this.RaisePropertyChanged("MailServerUrl");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class AssetInfo : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int[] zoneMasterServerField;
        
        private int[] m_Product_IDField;
        
        private int[] a_Asset_IDField;
        
        private bool[] isDBServerCreatedField;
        
        private bool[] isAppServerCreatedField;
        
        private bool[] isPSServerCreatedField;
        
        private bool[] isMailServerCreatedField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=0)]
        public int[] ZoneMasterServer {
            get {
                return this.zoneMasterServerField;
            }
            set {
                this.zoneMasterServerField = value;
                this.RaisePropertyChanged("ZoneMasterServer");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=1)]
        public int[] M_Product_ID {
            get {
                return this.m_Product_IDField;
            }
            set {
                this.m_Product_IDField = value;
                this.RaisePropertyChanged("M_Product_ID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=2)]
        public int[] A_Asset_ID {
            get {
                return this.a_Asset_IDField;
            }
            set {
                this.a_Asset_IDField = value;
                this.RaisePropertyChanged("A_Asset_ID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=3)]
        public bool[] IsDBServerCreated {
            get {
                return this.isDBServerCreatedField;
            }
            set {
                this.isDBServerCreatedField = value;
                this.RaisePropertyChanged("IsDBServerCreated");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=4)]
        public bool[] IsAppServerCreated {
            get {
                return this.isAppServerCreatedField;
            }
            set {
                this.isAppServerCreatedField = value;
                this.RaisePropertyChanged("IsAppServerCreated");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=5)]
        public bool[] IsPSServerCreated {
            get {
                return this.isPSServerCreatedField;
            }
            set {
                this.isPSServerCreatedField = value;
                this.RaisePropertyChanged("IsPSServerCreated");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=6)]
        public bool[] IsMailServerCreated {
            get {
                return this.isMailServerCreatedField;
            }
            set {
                this.isMailServerCreatedField = value;
                this.RaisePropertyChanged("IsMailServerCreated");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class AboutUs : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string descriptionField;
        
        private string description1Field;
        
        private byte[] logoField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
                this.RaisePropertyChanged("Description");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Description1 {
            get {
                return this.description1Field;
            }
            set {
                this.description1Field = value;
                this.RaisePropertyChanged("Description1");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary", Order=2)]
        public byte[] Logo {
            get {
                return this.logoField;
            }
            set {
                this.logoField = value;
                this.RaisePropertyChanged("Logo");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class FTPInfo : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string fTPAddressField;
        
        private string fTPUserNameField;
        
        private string fTPPasswordField;
        
        private string aPPFileFolderNameField;
        
        private string dBFileFolderNameField;
        
        private string pSFileFolderNameField;
        
        private string appFileNameField;
        
        private string dBFileNameField;
        
        private string pSFileNameField;
        
        private string mailServerFileNameField;
        
        private string tDUserNameField;
        
        private string tDPasswordField;
        
        private string fTPGlobalIPAddressField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string FTPAddress {
            get {
                return this.fTPAddressField;
            }
            set {
                this.fTPAddressField = value;
                this.RaisePropertyChanged("FTPAddress");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string FTPUserName {
            get {
                return this.fTPUserNameField;
            }
            set {
                this.fTPUserNameField = value;
                this.RaisePropertyChanged("FTPUserName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string FTPPassword {
            get {
                return this.fTPPasswordField;
            }
            set {
                this.fTPPasswordField = value;
                this.RaisePropertyChanged("FTPPassword");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string APPFileFolderName {
            get {
                return this.aPPFileFolderNameField;
            }
            set {
                this.aPPFileFolderNameField = value;
                this.RaisePropertyChanged("APPFileFolderName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string DBFileFolderName {
            get {
                return this.dBFileFolderNameField;
            }
            set {
                this.dBFileFolderNameField = value;
                this.RaisePropertyChanged("DBFileFolderName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string PSFileFolderName {
            get {
                return this.pSFileFolderNameField;
            }
            set {
                this.pSFileFolderNameField = value;
                this.RaisePropertyChanged("PSFileFolderName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string AppFileName {
            get {
                return this.appFileNameField;
            }
            set {
                this.appFileNameField = value;
                this.RaisePropertyChanged("AppFileName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public string DBFileName {
            get {
                return this.dBFileNameField;
            }
            set {
                this.dBFileNameField = value;
                this.RaisePropertyChanged("DBFileName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public string PSFileName {
            get {
                return this.pSFileNameField;
            }
            set {
                this.pSFileNameField = value;
                this.RaisePropertyChanged("PSFileName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public string MailServerFileName {
            get {
                return this.mailServerFileNameField;
            }
            set {
                this.mailServerFileNameField = value;
                this.RaisePropertyChanged("MailServerFileName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public string TDUserName {
            get {
                return this.tDUserNameField;
            }
            set {
                this.tDUserNameField = value;
                this.RaisePropertyChanged("TDUserName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=11)]
        public string TDPassword {
            get {
                return this.tDPasswordField;
            }
            set {
                this.tDPasswordField = value;
                this.RaisePropertyChanged("TDPassword");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=12)]
        public string FTPGlobalIPAddress {
            get {
                return this.fTPGlobalIPAddressField;
            }
            set {
                this.fTPGlobalIPAddressField = value;
                this.RaisePropertyChanged("FTPGlobalIPAddress");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class DummyDBWithFTpInfo : object, System.ComponentModel.INotifyPropertyChanged {
        
        private DBInfo customerDBInfoField;
        
        private FTPInfo customerFTPInfoField;
        
        private string errorMsgField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public DBInfo CustomerDBInfo {
            get {
                return this.customerDBInfoField;
            }
            set {
                this.customerDBInfoField = value;
                this.RaisePropertyChanged("CustomerDBInfo");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public FTPInfo CustomerFTPInfo {
            get {
                return this.customerFTPInfoField;
            }
            set {
                this.customerFTPInfoField = value;
                this.RaisePropertyChanged("CustomerFTPInfo");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string ErrorMsg {
            get {
                return this.errorMsgField;
            }
            set {
                this.errorMsgField = value;
                this.RaisePropertyChanged("ErrorMsg");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class DBInfo : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string[] hostIPField;
        
        private string[] systemUserNameField;
        
        private string[] systemPasswordField;
        
        private string[] dBSystemUserNameField;
        
        private string[] dBSystemPasswordField;
        
        private string[] newDBUserField;
        
        private string[] newDBPasswordField;
        
        private string[] dBPortField;
        
        private string[] dBServiceField;
        
        private string[] cS_ZoneMasterServer_IDField;
        
        private string[] m_Product_IDField;
        
        private string[] cS_ZoneClientServer_IDField;
        
        private string[] cS_DataBase_IDField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=0)]
        public string[] HostIP {
            get {
                return this.hostIPField;
            }
            set {
                this.hostIPField = value;
                this.RaisePropertyChanged("HostIP");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=1)]
        public string[] SystemUserName {
            get {
                return this.systemUserNameField;
            }
            set {
                this.systemUserNameField = value;
                this.RaisePropertyChanged("SystemUserName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=2)]
        public string[] SystemPassword {
            get {
                return this.systemPasswordField;
            }
            set {
                this.systemPasswordField = value;
                this.RaisePropertyChanged("SystemPassword");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=3)]
        public string[] DBSystemUserName {
            get {
                return this.dBSystemUserNameField;
            }
            set {
                this.dBSystemUserNameField = value;
                this.RaisePropertyChanged("DBSystemUserName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=4)]
        public string[] DBSystemPassword {
            get {
                return this.dBSystemPasswordField;
            }
            set {
                this.dBSystemPasswordField = value;
                this.RaisePropertyChanged("DBSystemPassword");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=5)]
        public string[] NewDBUser {
            get {
                return this.newDBUserField;
            }
            set {
                this.newDBUserField = value;
                this.RaisePropertyChanged("NewDBUser");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=6)]
        public string[] NewDBPassword {
            get {
                return this.newDBPasswordField;
            }
            set {
                this.newDBPasswordField = value;
                this.RaisePropertyChanged("NewDBPassword");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=7)]
        public string[] DBPort {
            get {
                return this.dBPortField;
            }
            set {
                this.dBPortField = value;
                this.RaisePropertyChanged("DBPort");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=8)]
        public string[] DBService {
            get {
                return this.dBServiceField;
            }
            set {
                this.dBServiceField = value;
                this.RaisePropertyChanged("DBService");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=9)]
        public string[] CS_ZoneMasterServer_ID {
            get {
                return this.cS_ZoneMasterServer_IDField;
            }
            set {
                this.cS_ZoneMasterServer_IDField = value;
                this.RaisePropertyChanged("CS_ZoneMasterServer_ID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=10)]
        public string[] M_Product_ID {
            get {
                return this.m_Product_IDField;
            }
            set {
                this.m_Product_IDField = value;
                this.RaisePropertyChanged("M_Product_ID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=11)]
        public string[] CS_ZoneClientServer_ID {
            get {
                return this.cS_ZoneClientServer_IDField;
            }
            set {
                this.cS_ZoneClientServer_IDField = value;
                this.RaisePropertyChanged("CS_ZoneClientServer_ID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=12)]
        public string[] CS_DataBase_ID {
            get {
                return this.cS_DataBase_IDField;
            }
            set {
                this.cS_DataBase_IDField = value;
                this.RaisePropertyChanged("CS_DataBase_ID");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class DummyDBMigrationInfo : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string importServiceAddressField;
        
        private string tempDBUserNameField;
        
        private string tempDBPasswordField;
        
        private string migrationServiceAdressField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string ImportServiceAddress {
            get {
                return this.importServiceAddressField;
            }
            set {
                this.importServiceAddressField = value;
                this.RaisePropertyChanged("ImportServiceAddress");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string TempDBUserName {
            get {
                return this.tempDBUserNameField;
            }
            set {
                this.tempDBUserNameField = value;
                this.RaisePropertyChanged("TempDBUserName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string TempDBPassword {
            get {
                return this.tempDBPasswordField;
            }
            set {
                this.tempDBPasswordField = value;
                this.RaisePropertyChanged("TempDBPassword");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string MigrationServiceAdress {
            get {
                return this.migrationServiceAdressField;
            }
            set {
                this.migrationServiceAdressField = value;
                this.RaisePropertyChanged("MigrationServiceAdress");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class GetUnassignedIp : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string[] cS_CustomerTenantIDField;
        
        private string[] valueField;
        
        private string[] zoneMasterIDField;
        
        private string[] m_Product_IDField;
        
        private string[] a_Asset_IDField;
        
        private string[] aD_User_IDField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=0)]
        public string[] CS_CustomerTenantID {
            get {
                return this.cS_CustomerTenantIDField;
            }
            set {
                this.cS_CustomerTenantIDField = value;
                this.RaisePropertyChanged("CS_CustomerTenantID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=1)]
        public string[] value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
                this.RaisePropertyChanged("value");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=2)]
        public string[] zoneMasterID {
            get {
                return this.zoneMasterIDField;
            }
            set {
                this.zoneMasterIDField = value;
                this.RaisePropertyChanged("zoneMasterID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=3)]
        public string[] M_Product_ID {
            get {
                return this.m_Product_IDField;
            }
            set {
                this.m_Product_IDField = value;
                this.RaisePropertyChanged("M_Product_ID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=4)]
        public string[] A_Asset_ID {
            get {
                return this.a_Asset_IDField;
            }
            set {
                this.a_Asset_IDField = value;
                this.RaisePropertyChanged("A_Asset_ID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=5)]
        public string[] AD_User_ID {
            get {
                return this.aD_User_IDField;
            }
            set {
                this.aD_User_IDField = value;
                this.RaisePropertyChanged("AD_User_ID");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class BackupInfo : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string[] fileNameField;
        
        private int[] requestIDField;
        
        private int[] assetIDField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=0)]
        public string[] FileName {
            get {
                return this.fileNameField;
            }
            set {
                this.fileNameField = value;
                this.RaisePropertyChanged("FileName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=1)]
        public int[] RequestID {
            get {
                return this.requestIDField;
            }
            set {
                this.requestIDField = value;
                this.RaisePropertyChanged("RequestID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=2)]
        public int[] AssetID {
            get {
                return this.assetIDField;
            }
            set {
                this.assetIDField = value;
                this.RaisePropertyChanged("AssetID");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class CustomerPServerInfo : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string pServerAddressField;
        
        private string pServerAdminUserField;
        
        private string pServerAdminPwdField;
        
        private string ftpUrlField;
        
        private string ftpUserNameField;
        
        private string ftpPwdField;
        
        private string pSSitePathField;
        
        private string databaseIPField;
        
        private string dbUserNameField;
        
        private string dbPwdField;
        
        private string pServerUrlField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string PServerAddress {
            get {
                return this.pServerAddressField;
            }
            set {
                this.pServerAddressField = value;
                this.RaisePropertyChanged("PServerAddress");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string PServerAdminUser {
            get {
                return this.pServerAdminUserField;
            }
            set {
                this.pServerAdminUserField = value;
                this.RaisePropertyChanged("PServerAdminUser");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string PServerAdminPwd {
            get {
                return this.pServerAdminPwdField;
            }
            set {
                this.pServerAdminPwdField = value;
                this.RaisePropertyChanged("PServerAdminPwd");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string ftpUrl {
            get {
                return this.ftpUrlField;
            }
            set {
                this.ftpUrlField = value;
                this.RaisePropertyChanged("ftpUrl");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string ftpUserName {
            get {
                return this.ftpUserNameField;
            }
            set {
                this.ftpUserNameField = value;
                this.RaisePropertyChanged("ftpUserName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string ftpPwd {
            get {
                return this.ftpPwdField;
            }
            set {
                this.ftpPwdField = value;
                this.RaisePropertyChanged("ftpPwd");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string PSSitePath {
            get {
                return this.pSSitePathField;
            }
            set {
                this.pSSitePathField = value;
                this.RaisePropertyChanged("PSSitePath");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public string databaseIP {
            get {
                return this.databaseIPField;
            }
            set {
                this.databaseIPField = value;
                this.RaisePropertyChanged("databaseIP");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public string dbUserName {
            get {
                return this.dbUserNameField;
            }
            set {
                this.dbUserNameField = value;
                this.RaisePropertyChanged("dbUserName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public string dbPwd {
            get {
                return this.dbPwdField;
            }
            set {
                this.dbPwdField = value;
                this.RaisePropertyChanged("dbPwd");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public string PServerUrl {
            get {
                return this.pServerUrlField;
            }
            set {
                this.pServerUrlField = value;
                this.RaisePropertyChanged("PServerUrl");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class RequestedModuleInfo : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int moduleInfo_IDField;
        
        private string svcPathField;
        
        private int requestIDField;
        
        private int aD_User_IDField;
        
        private string modtypeField;
        
        private int[] aD_Client_IDsField;
        
        private string[] langIDsField;
        
        private string moduleNameField;
        
        private string urlField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int ModuleInfo_ID {
            get {
                return this.moduleInfo_IDField;
            }
            set {
                this.moduleInfo_IDField = value;
                this.RaisePropertyChanged("ModuleInfo_ID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string svcPath {
            get {
                return this.svcPathField;
            }
            set {
                this.svcPathField = value;
                this.RaisePropertyChanged("svcPath");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public int RequestID {
            get {
                return this.requestIDField;
            }
            set {
                this.requestIDField = value;
                this.RaisePropertyChanged("RequestID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public int AD_User_ID {
            get {
                return this.aD_User_IDField;
            }
            set {
                this.aD_User_IDField = value;
                this.RaisePropertyChanged("AD_User_ID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string modtype {
            get {
                return this.modtypeField;
            }
            set {
                this.modtypeField = value;
                this.RaisePropertyChanged("modtype");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=5)]
        public int[] AD_Client_IDs {
            get {
                return this.aD_Client_IDsField;
            }
            set {
                this.aD_Client_IDsField = value;
                this.RaisePropertyChanged("AD_Client_IDs");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=6)]
        public string[] langIDs {
            get {
                return this.langIDsField;
            }
            set {
                this.langIDsField = value;
                this.RaisePropertyChanged("langIDs");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public string ModuleName {
            get {
                return this.moduleNameField;
            }
            set {
                this.moduleNameField = value;
                this.RaisePropertyChanged("ModuleName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public string Url {
            get {
                return this.urlField;
            }
            set {
                this.urlField = value;
                this.RaisePropertyChanged("Url");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class AssetNotInUse : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int a_Asset_IDField;
        
        private System.Nullable<System.DateTime> dateLastLoginField;
        
        private System.Nullable<System.DateTime> dateCreatedField;
        
        private System.Nullable<System.DateTime> dateUpdatedField;
        
        private System.Nullable<System.DateTime> sentNoticeDateField;
        
        private System.Nullable<bool> sendNoticeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int A_Asset_ID {
            get {
                return this.a_Asset_IDField;
            }
            set {
                this.a_Asset_IDField = value;
                this.RaisePropertyChanged("A_Asset_ID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=1)]
        public System.Nullable<System.DateTime> DateLastLogin {
            get {
                return this.dateLastLoginField;
            }
            set {
                this.dateLastLoginField = value;
                this.RaisePropertyChanged("DateLastLogin");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=2)]
        public System.Nullable<System.DateTime> DateCreated {
            get {
                return this.dateCreatedField;
            }
            set {
                this.dateCreatedField = value;
                this.RaisePropertyChanged("DateCreated");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=3)]
        public System.Nullable<System.DateTime> DateUpdated {
            get {
                return this.dateUpdatedField;
            }
            set {
                this.dateUpdatedField = value;
                this.RaisePropertyChanged("DateUpdated");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=4)]
        public System.Nullable<System.DateTime> SentNoticeDate {
            get {
                return this.sentNoticeDateField;
            }
            set {
                this.sentNoticeDateField = value;
                this.RaisePropertyChanged("SentNoticeDate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=5)]
        public System.Nullable<bool> SendNotice {
            get {
                return this.sendNoticeField;
            }
            set {
                this.sendNoticeField = value;
                this.RaisePropertyChanged("SendNotice");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DownloadFile", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class DownloadFileRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int UserID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string licenceKey;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string accessKey;
        
        public DownloadFileRequest() {
        }
        
        public DownloadFileRequest(int UserID, string licenceKey, string accessKey) {
            this.UserID = UserID;
            this.licenceKey = licenceKey;
            this.accessKey = accessKey;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DownloadFileResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class DownloadFileResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] DownloadFileResult;
        
        public DownloadFileResponse() {
        }
        
        public DownloadFileResponse(byte[] DownloadFileResult) {
            this.DownloadFileResult = DownloadFileResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SaveErrorLog", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class SaveErrorLogRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int AD_User_ID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public int A_Asset_ID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> CS_CustomerTenantInfo_ID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public int errorNo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> R_Request_ID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=5)]
        public string InnerError;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=6)]
        public string accessKey;
        
        public SaveErrorLogRequest() {
        }
        
        public SaveErrorLogRequest(int AD_User_ID, int A_Asset_ID, System.Nullable<int> CS_CustomerTenantInfo_ID, int errorNo, System.Nullable<int> R_Request_ID, string InnerError, string accessKey) {
            this.AD_User_ID = AD_User_ID;
            this.A_Asset_ID = A_Asset_ID;
            this.CS_CustomerTenantInfo_ID = CS_CustomerTenantInfo_ID;
            this.errorNo = errorNo;
            this.R_Request_ID = R_Request_ID;
            this.InnerError = InnerError;
            this.accessKey = accessKey;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SaveErrorLogResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class SaveErrorLogResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string SaveErrorLogResult;
        
        public SaveErrorLogResponse() {
        }
        
        public SaveErrorLogResponse(string SaveErrorLogResult) {
            this.SaveErrorLogResult = SaveErrorLogResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SaveErrorInLogM1", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class SaveErrorInLogM1Request {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string customerValue;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public int errorNumber;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> R_Request_ID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public string accessKey;
        
        public SaveErrorInLogM1Request() {
        }
        
        public SaveErrorInLogM1Request(string customerValue, int errorNumber, System.Nullable<int> R_Request_ID, string accessKey) {
            this.customerValue = customerValue;
            this.errorNumber = errorNumber;
            this.R_Request_ID = R_Request_ID;
            this.accessKey = accessKey;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SaveErrorInLogM1Response", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class SaveErrorInLogM1Response {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string SaveErrorInLogM1Result;
        
        public SaveErrorInLogM1Response() {
        }
        
        public SaveErrorInLogM1Response(string SaveErrorInLogM1Result) {
            this.SaveErrorInLogM1Result = SaveErrorInLogM1Result;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DownloadDump", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class DownloadDumpRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int Ad_user_ID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string fileName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string accessKey;
        
        public DownloadDumpRequest() {
        }
        
        public DownloadDumpRequest(int Ad_user_ID, string fileName, string accessKey) {
            this.Ad_user_ID = Ad_user_ID;
            this.fileName = fileName;
            this.accessKey = accessKey;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DownloadDumpResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class DownloadDumpResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] DownloadDumpResult;
        
        public DownloadDumpResponse() {
        }
        
        public DownloadDumpResponse(byte[] DownloadDumpResult) {
            this.DownloadDumpResult = DownloadDumpResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetForwardTickets", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class SetForwardTicketsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int AD_User_ID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public int R_Request_ID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string remarks;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] Attachment;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public int docno;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=5)]
        public string fileName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=6)]
        public string accessKey;
        
        public SetForwardTicketsRequest() {
        }
        
        public SetForwardTicketsRequest(int AD_User_ID, int R_Request_ID, string remarks, byte[] Attachment, int docno, string fileName, string accessKey) {
            this.AD_User_ID = AD_User_ID;
            this.R_Request_ID = R_Request_ID;
            this.remarks = remarks;
            this.Attachment = Attachment;
            this.docno = docno;
            this.fileName = fileName;
            this.accessKey = accessKey;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetForwardTicketsResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class SetForwardTicketsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string SetForwardTicketsResult;
        
        public SetForwardTicketsResponse() {
        }
        
        public SetForwardTicketsResponse(string SetForwardTicketsResult) {
            this.SetForwardTicketsResult = SetForwardTicketsResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetCustomerNewTicket", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class SetCustomerNewTicketRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int PriorityUser;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] file;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public int ad_user_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public string Summary;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public string FileName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=5)]
        public string AccessKey;
        
        public SetCustomerNewTicketRequest() {
        }
        
        public SetCustomerNewTicketRequest(int PriorityUser, byte[] file, int ad_user_id, string Summary, string FileName, string AccessKey) {
            this.PriorityUser = PriorityUser;
            this.file = file;
            this.ad_user_id = ad_user_id;
            this.Summary = Summary;
            this.FileName = FileName;
            this.AccessKey = AccessKey;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetCustomerNewTicketResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class SetCustomerNewTicketResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string SetCustomerNewTicketResult;
        
        public SetCustomerNewTicketResponse() {
        }
        
        public SetCustomerNewTicketResponse(string SetCustomerNewTicketResult) {
            this.SetCustomerNewTicketResult = SetCustomerNewTicketResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetCustomerTicketHistoryLines", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class SetCustomerTicketHistoryLinesRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int ad_user_ID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] file;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public int documentNo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public string result;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public string FileName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=5)]
        public string AccessKey;
        
        public SetCustomerTicketHistoryLinesRequest() {
        }
        
        public SetCustomerTicketHistoryLinesRequest(int ad_user_ID, byte[] file, int documentNo, string result, string FileName, string AccessKey) {
            this.ad_user_ID = ad_user_ID;
            this.file = file;
            this.documentNo = documentNo;
            this.result = result;
            this.FileName = FileName;
            this.AccessKey = AccessKey;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetCustomerTicketHistoryLinesResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class SetCustomerTicketHistoryLinesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string SetCustomerTicketHistoryLinesResult;
        
        public SetCustomerTicketHistoryLinesResponse() {
        }
        
        public SetCustomerTicketHistoryLinesResponse(string SetCustomerTicketHistoryLinesResult) {
            this.SetCustomerTicketHistoryLinesResult = SetCustomerTicketHistoryLinesResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RegisterInfoFromModule", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class RegisterInfoFromModuleRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string userName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string pwd;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string companyName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public string fullName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public string mobile;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=5)]
        public string phone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=6)]
        public string emailid;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=7)]
        public string address;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=8)]
        public int countryid;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=9)]
        public int regionid;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=10)]
        public string city;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=11)]
        public int productID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=12)]
        public string productName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=13)]
        public string cardType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=14)]
        public string cardNumber;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=15)]
        public string csvNumber;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=16)]
        public string cardName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=17)]
        public int expiryDay;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=18)]
        public int expiryMonth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=19)]
        public int expiryYear;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=20)]
        public string billingAddress;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=21)]
        public string billingCity;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=22)]
        public string billingZip;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=23)]
        public int billingCountryID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=24)]
        public string domainUserID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=25)]
        public string domainUserLink;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=26)]
        public string domainName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=27)]
        public string gender;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=28)]
        public int birthDay;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=29)]
        public int birthMonth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=30)]
        public int birthYear;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=31)]
        public string ipAddress;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=32)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> Campaign_ID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=33)]
        public string accessKey;
        
        public RegisterInfoFromModuleRequest() {
        }
        
        public RegisterInfoFromModuleRequest(
                    string userName, 
                    string pwd, 
                    string companyName, 
                    string fullName, 
                    string mobile, 
                    string phone, 
                    string emailid, 
                    string address, 
                    int countryid, 
                    int regionid, 
                    string city, 
                    int productID, 
                    string productName, 
                    string cardType, 
                    string cardNumber, 
                    string csvNumber, 
                    string cardName, 
                    int expiryDay, 
                    int expiryMonth, 
                    int expiryYear, 
                    string billingAddress, 
                    string billingCity, 
                    string billingZip, 
                    int billingCountryID, 
                    string domainUserID, 
                    string domainUserLink, 
                    string domainName, 
                    string gender, 
                    int birthDay, 
                    int birthMonth, 
                    int birthYear, 
                    string ipAddress, 
                    System.Nullable<int> Campaign_ID, 
                    string accessKey) {
            this.userName = userName;
            this.pwd = pwd;
            this.companyName = companyName;
            this.fullName = fullName;
            this.mobile = mobile;
            this.phone = phone;
            this.emailid = emailid;
            this.address = address;
            this.countryid = countryid;
            this.regionid = regionid;
            this.city = city;
            this.productID = productID;
            this.productName = productName;
            this.cardType = cardType;
            this.cardNumber = cardNumber;
            this.csvNumber = csvNumber;
            this.cardName = cardName;
            this.expiryDay = expiryDay;
            this.expiryMonth = expiryMonth;
            this.expiryYear = expiryYear;
            this.billingAddress = billingAddress;
            this.billingCity = billingCity;
            this.billingZip = billingZip;
            this.billingCountryID = billingCountryID;
            this.domainUserID = domainUserID;
            this.domainUserLink = domainUserLink;
            this.domainName = domainName;
            this.gender = gender;
            this.birthDay = birthDay;
            this.birthMonth = birthMonth;
            this.birthYear = birthYear;
            this.ipAddress = ipAddress;
            this.Campaign_ID = Campaign_ID;
            this.accessKey = accessKey;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RegisterInfoFromModuleResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class RegisterInfoFromModuleResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string RegisterInfoFromModuleResult;
        
        public RegisterInfoFromModuleResponse() {
        }
        
        public RegisterInfoFromModuleResponse(string RegisterInfoFromModuleResult) {
            this.RegisterInfoFromModuleResult = RegisterInfoFromModuleResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="VRegisterInfo", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class VRegisterInfoRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string userName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string pwd;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string companyName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public string fullName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public string mobile;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=5)]
        public string phone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=6)]
        public string emailid;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=7)]
        public string address;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=8)]
        public int countryid;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=9)]
        public int regionid;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=10)]
        public string city;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=11)]
        public int productID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=12)]
        public string productName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=13)]
        public string cardType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=14)]
        public int cardNumber;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=15)]
        public string csvNumber;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=16)]
        public string cardName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=17)]
        public int expiryDay;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=18)]
        public int expiryMonth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=19)]
        public int expiryYear;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=20)]
        public string billingAddress;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=21)]
        public string billingCity;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=22)]
        public string billingZip;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=23)]
        public int billingCountryID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=24)]
        public string domainUserID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=25)]
        public string domainUserLink;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=26)]
        public string domainName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=27)]
        public string gender;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=28)]
        public int birthDay;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=29)]
        public int birthMonth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=30)]
        public int birthYear;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=31)]
        public string ipAddress;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=32)]
        public string SocialRegType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=33)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> CampaignID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=34)]
        public char IsSocialRegistration;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=35)]
        public string accessKey;
        
        public VRegisterInfoRequest() {
        }
        
        public VRegisterInfoRequest(
                    string userName, 
                    string pwd, 
                    string companyName, 
                    string fullName, 
                    string mobile, 
                    string phone, 
                    string emailid, 
                    string address, 
                    int countryid, 
                    int regionid, 
                    string city, 
                    int productID, 
                    string productName, 
                    string cardType, 
                    int cardNumber, 
                    string csvNumber, 
                    string cardName, 
                    int expiryDay, 
                    int expiryMonth, 
                    int expiryYear, 
                    string billingAddress, 
                    string billingCity, 
                    string billingZip, 
                    int billingCountryID, 
                    string domainUserID, 
                    string domainUserLink, 
                    string domainName, 
                    string gender, 
                    int birthDay, 
                    int birthMonth, 
                    int birthYear, 
                    string ipAddress, 
                    string SocialRegType, 
                    System.Nullable<int> CampaignID, 
                    char IsSocialRegistration, 
                    string accessKey) {
            this.userName = userName;
            this.pwd = pwd;
            this.companyName = companyName;
            this.fullName = fullName;
            this.mobile = mobile;
            this.phone = phone;
            this.emailid = emailid;
            this.address = address;
            this.countryid = countryid;
            this.regionid = regionid;
            this.city = city;
            this.productID = productID;
            this.productName = productName;
            this.cardType = cardType;
            this.cardNumber = cardNumber;
            this.csvNumber = csvNumber;
            this.cardName = cardName;
            this.expiryDay = expiryDay;
            this.expiryMonth = expiryMonth;
            this.expiryYear = expiryYear;
            this.billingAddress = billingAddress;
            this.billingCity = billingCity;
            this.billingZip = billingZip;
            this.billingCountryID = billingCountryID;
            this.domainUserID = domainUserID;
            this.domainUserLink = domainUserLink;
            this.domainName = domainName;
            this.gender = gender;
            this.birthDay = birthDay;
            this.birthMonth = birthMonth;
            this.birthYear = birthYear;
            this.ipAddress = ipAddress;
            this.SocialRegType = SocialRegType;
            this.CampaignID = CampaignID;
            this.IsSocialRegistration = IsSocialRegistration;
            this.accessKey = accessKey;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="VRegisterInfoResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class VRegisterInfoResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string VRegisterInfoResult;
        
        public VRegisterInfoResponse() {
        }
        
        public VRegisterInfoResponse(string VRegisterInfoResult) {
            this.VRegisterInfoResult = VRegisterInfoResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAmount", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetAmountRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int m_product_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public int user;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string accessKey;
        
        public GetAmountRequest() {
        }
        
        public GetAmountRequest(int m_product_id, int user, string accessKey) {
            this.m_product_id = m_product_id;
            this.user = user;
            this.accessKey = accessKey;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAmountResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetAmountResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<decimal> GetAmountResult;
        
        public GetAmountResponse() {
        }
        
        public GetAmountResponse(System.Nullable<decimal> GetAmountResult) {
            this.GetAmountResult = GetAmountResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SubscribeProduct", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class SubscribeProductRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int AD_User_ID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public int M_Product_ID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string fileName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> backupAfter;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public string ipaddress;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=5)]
        public string accessKey;
        
        public SubscribeProductRequest() {
        }
        
        public SubscribeProductRequest(int AD_User_ID, int M_Product_ID, string fileName, System.Nullable<int> backupAfter, string ipaddress, string accessKey) {
            this.AD_User_ID = AD_User_ID;
            this.M_Product_ID = M_Product_ID;
            this.fileName = fileName;
            this.backupAfter = backupAfter;
            this.ipaddress = ipaddress;
            this.accessKey = accessKey;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SubscribeProductResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class SubscribeProductResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string SubscribeProductResult;
        
        public SubscribeProductResponse() {
        }
        
        public SubscribeProductResponse(string SubscribeProductResult) {
            this.SubscribeProductResult = SubscribeProductResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateAsset", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UpdateAssetRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int A_Asset_ID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> isAppServerCreated;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> isDBServerCreated;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public bool ISPSServerCreated;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public string fileVersion;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=5)]
        public string accessKey;
        
        public UpdateAssetRequest() {
        }
        
        public UpdateAssetRequest(int A_Asset_ID, System.Nullable<bool> isAppServerCreated, System.Nullable<bool> isDBServerCreated, bool ISPSServerCreated, string fileVersion, string accessKey) {
            this.A_Asset_ID = A_Asset_ID;
            this.isAppServerCreated = isAppServerCreated;
            this.isDBServerCreated = isDBServerCreated;
            this.ISPSServerCreated = ISPSServerCreated;
            this.fileVersion = fileVersion;
            this.accessKey = accessKey;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateAssetResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UpdateAssetResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string UpdateAssetResult;
        
        public UpdateAssetResponse() {
        }
        
        public UpdateAssetResponse(string UpdateAssetResult) {
            this.UpdateAssetResult = UpdateAssetResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ServiceSoapChannel : VIS.CloudService.ServiceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceSoapClient : System.ServiceModel.ClientBase<VIS.CloudService.ServiceSoap>, VIS.CloudService.ServiceSoap {
        
        public ServiceSoapClient() {
        }
        
        public ServiceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetVUnBilledInfo(int AD_User_ID, string AccessKey) {
            return base.Channel.GetVUnBilledInfo(AD_User_ID, AccessKey);
        }
        
        public System.Threading.Tasks.Task<string> GetVUnBilledInfoAsync(int AD_User_ID, string AccessKey) {
            return base.Channel.GetVUnBilledInfoAsync(AD_User_ID, AccessKey);
        }
        
        public string GetVCustomerBillingSummary(int AD_User_ID, string AccessKey) {
            return base.Channel.GetVCustomerBillingSummary(AD_User_ID, AccessKey);
        }
        
        public System.Threading.Tasks.Task<string> GetVCustomerBillingSummaryAsync(int AD_User_ID, string AccessKey) {
            return base.Channel.GetVCustomerBillingSummaryAsync(AD_User_ID, AccessKey);
        }
        
        public string GetVBillingInfo(int AD_User_ID, string AccessKey) {
            return base.Channel.GetVBillingInfo(AD_User_ID, AccessKey);
        }
        
        public System.Threading.Tasks.Task<string> GetVBillingInfoAsync(int AD_User_ID, string AccessKey) {
            return base.Channel.GetVBillingInfoAsync(AD_User_ID, AccessKey);
        }
        
        public string SetLead(
                    string CompanyName, 
                    string name, 
                    string title, 
                    string email, 
                    string phone, 
                    string web_url, 
                    int no_of_emp, 
                    int c_Currency_id, 
                    int r_source_id, 
                    int industry_ID, 
                    string city, 
                    int country_ID, 
                    string cur_solution, 
                    string pur_timeline, 
                    string comments, 
                    string year_sell_erp, 
                    string support, 
                    int bpgroup_ID, 
                    int C_Campaign_ID, 
                    int R_STATUS_ID, 
                    int C_Region_ID, 
                    int CreatedBy, 
                    int salesrep_id, 
                    int ad_org_id, 
                    int ad_client_id, 
                    int UpdatedBy, 
                    string AccessKey) {
            return base.Channel.SetLead(CompanyName, name, title, email, phone, web_url, no_of_emp, c_Currency_id, r_source_id, industry_ID, city, country_ID, cur_solution, pur_timeline, comments, year_sell_erp, support, bpgroup_ID, C_Campaign_ID, R_STATUS_ID, C_Region_ID, CreatedBy, salesrep_id, ad_org_id, ad_client_id, UpdatedBy, AccessKey);
        }
        
        public System.Threading.Tasks.Task<string> SetLeadAsync(
                    string CompanyName, 
                    string name, 
                    string title, 
                    string email, 
                    string phone, 
                    string web_url, 
                    int no_of_emp, 
                    int c_Currency_id, 
                    int r_source_id, 
                    int industry_ID, 
                    string city, 
                    int country_ID, 
                    string cur_solution, 
                    string pur_timeline, 
                    string comments, 
                    string year_sell_erp, 
                    string support, 
                    int bpgroup_ID, 
                    int C_Campaign_ID, 
                    int R_STATUS_ID, 
                    int C_Region_ID, 
                    int CreatedBy, 
                    int salesrep_id, 
                    int ad_org_id, 
                    int ad_client_id, 
                    int UpdatedBy, 
                    string AccessKey) {
            return base.Channel.SetLeadAsync(CompanyName, name, title, email, phone, web_url, no_of_emp, c_Currency_id, r_source_id, industry_ID, city, country_ID, cur_solution, pur_timeline, comments, year_sell_erp, support, bpgroup_ID, C_Campaign_ID, R_STATUS_ID, C_Region_ID, CreatedBy, salesrep_id, ad_org_id, ad_client_id, UpdatedBy, AccessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        VIS.CloudService.GetTopicInfoResponse VIS.CloudService.ServiceSoap.GetTopicInfo(VIS.CloudService.GetTopicInfoRequest request) {
            return base.Channel.GetTopicInfo(request);
        }
        
        public System.Data.DataSet GetTopicInfo(string url, bool isInitConfig, string langCode, string searchText, string option, out string error) {
            VIS.CloudService.GetTopicInfoRequest inValue = new VIS.CloudService.GetTopicInfoRequest();
            inValue.url = url;
            inValue.isInitConfig = isInitConfig;
            inValue.langCode = langCode;
            inValue.searchText = searchText;
            inValue.option = option;
            VIS.CloudService.GetTopicInfoResponse retVal = ((VIS.CloudService.ServiceSoap)(this)).GetTopicInfo(inValue);
            error = retVal.error;
            return retVal.GetTopicInfoResult;
        }
        
        public System.Threading.Tasks.Task<VIS.CloudService.GetTopicInfoResponse> GetTopicInfoAsync(VIS.CloudService.GetTopicInfoRequest request) {
            return base.Channel.GetTopicInfoAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        VIS.CloudService.GetInstructionResponse VIS.CloudService.ServiceSoap.GetInstruction(VIS.CloudService.GetInstructionRequest request) {
            return base.Channel.GetInstruction(request);
        }
        
        public System.Data.DataSet GetInstruction(int K_TopicInfo_ID, string langCode, string optional, out string error) {
            VIS.CloudService.GetInstructionRequest inValue = new VIS.CloudService.GetInstructionRequest();
            inValue.K_TopicInfo_ID = K_TopicInfo_ID;
            inValue.langCode = langCode;
            inValue.optional = optional;
            VIS.CloudService.GetInstructionResponse retVal = ((VIS.CloudService.ServiceSoap)(this)).GetInstruction(inValue);
            error = retVal.error;
            return retVal.GetInstructionResult;
        }
        
        public System.Threading.Tasks.Task<VIS.CloudService.GetInstructionResponse> GetInstructionAsync(VIS.CloudService.GetInstructionRequest request) {
            return base.Channel.GetInstructionAsync(request);
        }
        
        public string serverInfo() {
            return base.Channel.serverInfo();
        }
        
        public System.Threading.Tasks.Task<string> serverInfoAsync() {
            return base.Channel.serverInfoAsync();
        }
        
        public VIS.CloudService.InCompleteDBInfo GetOldIncomleteDB(string ZoneCode, string accessKey) {
            return base.Channel.GetOldIncomleteDB(ZoneCode, accessKey);
        }
        
        public System.Threading.Tasks.Task<VIS.CloudService.InCompleteDBInfo> GetOldIncomleteDBAsync(string ZoneCode, string accessKey) {
            return base.Channel.GetOldIncomleteDBAsync(ZoneCode, accessKey);
        }
        
        public bool DeleteDBEntry(int databaseID, string accessKey) {
            return base.Channel.DeleteDBEntry(databaseID, accessKey);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteDBEntryAsync(int databaseID, string accessKey) {
            return base.Channel.DeleteDBEntryAsync(databaseID, accessKey);
        }
        
        public VIS.CloudService.AssetNotInUse[] GetAssetNotInUse(string zoneCode, string accessKey) {
            return base.Channel.GetAssetNotInUse(zoneCode, accessKey);
        }
        
        public System.Threading.Tasks.Task<VIS.CloudService.AssetNotInUse[]> GetAssetNotInUseAsync(string zoneCode, string accessKey) {
            return base.Channel.GetAssetNotInUseAsync(zoneCode, accessKey);
        }
        
        public string SendNotice(int[] A_Asset_ID, string accessKey) {
            return base.Channel.SendNotice(A_Asset_ID, accessKey);
        }
        
        public System.Threading.Tasks.Task<string> SendNoticeAsync(int[] A_Asset_ID, string accessKey) {
            return base.Channel.SendNoticeAsync(A_Asset_ID, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        VIS.CloudService.DownloadFileResponse VIS.CloudService.ServiceSoap.DownloadFile(VIS.CloudService.DownloadFileRequest request) {
            return base.Channel.DownloadFile(request);
        }
        
        public byte[] DownloadFile(int UserID, string licenceKey, string accessKey) {
            VIS.CloudService.DownloadFileRequest inValue = new VIS.CloudService.DownloadFileRequest();
            inValue.UserID = UserID;
            inValue.licenceKey = licenceKey;
            inValue.accessKey = accessKey;
            VIS.CloudService.DownloadFileResponse retVal = ((VIS.CloudService.ServiceSoap)(this)).DownloadFile(inValue);
            return retVal.DownloadFileResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<VIS.CloudService.DownloadFileResponse> VIS.CloudService.ServiceSoap.DownloadFileAsync(VIS.CloudService.DownloadFileRequest request) {
            return base.Channel.DownloadFileAsync(request);
        }
        
        public System.Threading.Tasks.Task<VIS.CloudService.DownloadFileResponse> DownloadFileAsync(int UserID, string licenceKey, string accessKey) {
            VIS.CloudService.DownloadFileRequest inValue = new VIS.CloudService.DownloadFileRequest();
            inValue.UserID = UserID;
            inValue.licenceKey = licenceKey;
            inValue.accessKey = accessKey;
            return ((VIS.CloudService.ServiceSoap)(this)).DownloadFileAsync(inValue);
        }
        
        public string CheckUserFiles(int UserID, string licenceKey, string accessKey) {
            return base.Channel.CheckUserFiles(UserID, licenceKey, accessKey);
        }
        
        public System.Threading.Tasks.Task<string> CheckUserFilesAsync(int UserID, string licenceKey, string accessKey) {
            return base.Channel.CheckUserFilesAsync(UserID, licenceKey, accessKey);
        }
        
        public string GetCurrentRunningTenant(string zoneCode, string accessKey) {
            return base.Channel.GetCurrentRunningTenant(zoneCode, accessKey);
        }
        
        public System.Threading.Tasks.Task<string> GetCurrentRunningTenantAsync(string zoneCode, string accessKey) {
            return base.Channel.GetCurrentRunningTenantAsync(zoneCode, accessKey);
        }
        
        public string ModuleInstallationRequest(int AD_User_ID, int AD_ModuleInfo_ID, string ipAddress, int[] clients, string[] languages, string versionNo, string accessKey) {
            return base.Channel.ModuleInstallationRequest(AD_User_ID, AD_ModuleInfo_ID, ipAddress, clients, languages, versionNo, accessKey);
        }
        
        public System.Threading.Tasks.Task<string> ModuleInstallationRequestAsync(int AD_User_ID, int AD_ModuleInfo_ID, string ipAddress, int[] clients, string[] languages, string versionNo, string accessKey) {
            return base.Channel.ModuleInstallationRequestAsync(AD_User_ID, AD_ModuleInfo_ID, ipAddress, clients, languages, versionNo, accessKey);
        }
        
        public VIS.CloudService.RequestedModuleInfo[] GetRequestToInstallModule(string ZoneCode, string accessKey) {
            return base.Channel.GetRequestToInstallModule(ZoneCode, accessKey);
        }
        
        public System.Threading.Tasks.Task<VIS.CloudService.RequestedModuleInfo[]> GetRequestToInstallModuleAsync(string ZoneCode, string accessKey) {
            return base.Channel.GetRequestToInstallModuleAsync(ZoneCode, accessKey);
        }
        
        public VIS.CloudService.CustomerPServerInfo GetCustomerPServerInfo(string ZoneCode, int A_Asset_ID, string accessKey) {
            return base.Channel.GetCustomerPServerInfo(ZoneCode, A_Asset_ID, accessKey);
        }
        
        public System.Threading.Tasks.Task<VIS.CloudService.CustomerPServerInfo> GetCustomerPServerInfoAsync(string ZoneCode, int A_Asset_ID, string accessKey) {
            return base.Channel.GetCustomerPServerInfoAsync(ZoneCode, A_Asset_ID, accessKey);
        }
        
        public string GetUserID(string username, string password, string accessKey) {
            return base.Channel.GetUserID(username, password, accessKey);
        }
        
        public System.Threading.Tasks.Task<string> GetUserIDAsync(string username, string password, string accessKey) {
            return base.Channel.GetUserIDAsync(username, password, accessKey);
        }
        
        public string ForgotPortalPassword(string userName, string userEmail, string accessKey) {
            return base.Channel.ForgotPortalPassword(userName, userEmail, accessKey);
        }
        
        public System.Threading.Tasks.Task<string> ForgotPortalPasswordAsync(string userName, string userEmail, string accessKey) {
            return base.Channel.ForgotPortalPasswordAsync(userName, userEmail, accessKey);
        }
        
        public string VForgotPortalPassword(string userName, string userEmail, string accessKey) {
            return base.Channel.VForgotPortalPassword(userName, userEmail, accessKey);
        }
        
        public System.Threading.Tasks.Task<string> VForgotPortalPasswordAsync(string userName, string userEmail, string accessKey) {
            return base.Channel.VForgotPortalPasswordAsync(userName, userEmail, accessKey);
        }
        
        public string PForgotPortalPassword(string userName, string userEmail, string accessKey) {
            return base.Channel.PForgotPortalPassword(userName, userEmail, accessKey);
        }
        
        public System.Threading.Tasks.Task<string> PForgotPortalPasswordAsync(string userName, string userEmail, string accessKey) {
            return base.Channel.PForgotPortalPasswordAsync(userName, userEmail, accessKey);
        }
        
        public string NotifyServerCreated(int A_Asset_ID, int client_ID, string accessKey) {
            return base.Channel.NotifyServerCreated(A_Asset_ID, client_ID, accessKey);
        }
        
        public System.Threading.Tasks.Task<string> NotifyServerCreatedAsync(int A_Asset_ID, int client_ID, string accessKey) {
            return base.Channel.NotifyServerCreatedAsync(A_Asset_ID, client_ID, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        VIS.CloudService.SaveErrorLogResponse VIS.CloudService.ServiceSoap.SaveErrorLog(VIS.CloudService.SaveErrorLogRequest request) {
            return base.Channel.SaveErrorLog(request);
        }
        
        public string SaveErrorLog(int AD_User_ID, int A_Asset_ID, System.Nullable<int> CS_CustomerTenantInfo_ID, int errorNo, System.Nullable<int> R_Request_ID, string InnerError, string accessKey) {
            VIS.CloudService.SaveErrorLogRequest inValue = new VIS.CloudService.SaveErrorLogRequest();
            inValue.AD_User_ID = AD_User_ID;
            inValue.A_Asset_ID = A_Asset_ID;
            inValue.CS_CustomerTenantInfo_ID = CS_CustomerTenantInfo_ID;
            inValue.errorNo = errorNo;
            inValue.R_Request_ID = R_Request_ID;
            inValue.InnerError = InnerError;
            inValue.accessKey = accessKey;
            VIS.CloudService.SaveErrorLogResponse retVal = ((VIS.CloudService.ServiceSoap)(this)).SaveErrorLog(inValue);
            return retVal.SaveErrorLogResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<VIS.CloudService.SaveErrorLogResponse> VIS.CloudService.ServiceSoap.SaveErrorLogAsync(VIS.CloudService.SaveErrorLogRequest request) {
            return base.Channel.SaveErrorLogAsync(request);
        }
        
        public System.Threading.Tasks.Task<VIS.CloudService.SaveErrorLogResponse> SaveErrorLogAsync(int AD_User_ID, int A_Asset_ID, System.Nullable<int> CS_CustomerTenantInfo_ID, int errorNo, System.Nullable<int> R_Request_ID, string InnerError, string accessKey) {
            VIS.CloudService.SaveErrorLogRequest inValue = new VIS.CloudService.SaveErrorLogRequest();
            inValue.AD_User_ID = AD_User_ID;
            inValue.A_Asset_ID = A_Asset_ID;
            inValue.CS_CustomerTenantInfo_ID = CS_CustomerTenantInfo_ID;
            inValue.errorNo = errorNo;
            inValue.R_Request_ID = R_Request_ID;
            inValue.InnerError = InnerError;
            inValue.accessKey = accessKey;
            return ((VIS.CloudService.ServiceSoap)(this)).SaveErrorLogAsync(inValue);
        }
        
        public string SaveErrorInLog(string customerValue, int errorNumber, string accessKey) {
            return base.Channel.SaveErrorInLog(customerValue, errorNumber, accessKey);
        }
        
        public System.Threading.Tasks.Task<string> SaveErrorInLogAsync(string customerValue, int errorNumber, string accessKey) {
            return base.Channel.SaveErrorInLogAsync(customerValue, errorNumber, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        VIS.CloudService.SaveErrorInLogM1Response VIS.CloudService.ServiceSoap.SaveErrorInLogM1(VIS.CloudService.SaveErrorInLogM1Request request) {
            return base.Channel.SaveErrorInLogM1(request);
        }
        
        public string SaveErrorInLogM1(string customerValue, int errorNumber, System.Nullable<int> R_Request_ID, string accessKey) {
            VIS.CloudService.SaveErrorInLogM1Request inValue = new VIS.CloudService.SaveErrorInLogM1Request();
            inValue.customerValue = customerValue;
            inValue.errorNumber = errorNumber;
            inValue.R_Request_ID = R_Request_ID;
            inValue.accessKey = accessKey;
            VIS.CloudService.SaveErrorInLogM1Response retVal = ((VIS.CloudService.ServiceSoap)(this)).SaveErrorInLogM1(inValue);
            return retVal.SaveErrorInLogM1Result;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<VIS.CloudService.SaveErrorInLogM1Response> VIS.CloudService.ServiceSoap.SaveErrorInLogM1Async(VIS.CloudService.SaveErrorInLogM1Request request) {
            return base.Channel.SaveErrorInLogM1Async(request);
        }
        
        public System.Threading.Tasks.Task<VIS.CloudService.SaveErrorInLogM1Response> SaveErrorInLogM1Async(string customerValue, int errorNumber, System.Nullable<int> R_Request_ID, string accessKey) {
            VIS.CloudService.SaveErrorInLogM1Request inValue = new VIS.CloudService.SaveErrorInLogM1Request();
            inValue.customerValue = customerValue;
            inValue.errorNumber = errorNumber;
            inValue.R_Request_ID = R_Request_ID;
            inValue.accessKey = accessKey;
            return ((VIS.CloudService.ServiceSoap)(this)).SaveErrorInLogM1Async(inValue);
        }
        
        public string TestProccesorConnection(string zoneCode, string accessKey) {
            return base.Channel.TestProccesorConnection(zoneCode, accessKey);
        }
        
        public System.Threading.Tasks.Task<string> TestProccesorConnectionAsync(string zoneCode, string accessKey) {
            return base.Channel.TestProccesorConnectionAsync(zoneCode, accessKey);
        }
        
        public string CreateProcessServer(int AssetID, string zoneCode, string accessKey) {
            return base.Channel.CreateProcessServer(AssetID, zoneCode, accessKey);
        }
        
        public System.Threading.Tasks.Task<string> CreateProcessServerAsync(int AssetID, string zoneCode, string accessKey) {
            return base.Channel.CreateProcessServerAsync(AssetID, zoneCode, accessKey);
        }
        
        public string CardVerifyPayment(int AD_User_ID, string accessKey) {
            return base.Channel.CardVerifyPayment(AD_User_ID, accessKey);
        }
        
        public System.Threading.Tasks.Task<string> CardVerifyPaymentAsync(int AD_User_ID, string accessKey) {
            return base.Channel.CardVerifyPaymentAsync(AD_User_ID, accessKey);
        }
        
        public string IsCustomerAddMoreCompany(int AD_User_ID, string accessKey) {
            return base.Channel.IsCustomerAddMoreCompany(AD_User_ID, accessKey);
        }
        
        public System.Threading.Tasks.Task<string> IsCustomerAddMoreCompanyAsync(int AD_User_ID, string accessKey) {
            return base.Channel.IsCustomerAddMoreCompanyAsync(AD_User_ID, accessKey);
        }
        
        public string GetCustomerDomainName(int AD_User_ID, string accessKey) {
            return base.Channel.GetCustomerDomainName(AD_User_ID, accessKey);
        }
        
        public System.Threading.Tasks.Task<string> GetCustomerDomainNameAsync(int AD_User_ID, string accessKey) {
            return base.Channel.GetCustomerDomainNameAsync(AD_User_ID, accessKey);
        }
        
        public string StartAndStopProcessor(int A_Asset_ID, bool startServer, string accessKey) {
            return base.Channel.StartAndStopProcessor(A_Asset_ID, startServer, accessKey);
        }
        
        public System.Threading.Tasks.Task<string> StartAndStopProcessorAsync(int A_Asset_ID, bool startServer, string accessKey) {
            return base.Channel.StartAndStopProcessorAsync(A_Asset_ID, startServer, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        VIS.CloudService.DownloadDumpResponse VIS.CloudService.ServiceSoap.DownloadDump(VIS.CloudService.DownloadDumpRequest request) {
            return base.Channel.DownloadDump(request);
        }
        
        public byte[] DownloadDump(int Ad_user_ID, string fileName, string accessKey) {
            VIS.CloudService.DownloadDumpRequest inValue = new VIS.CloudService.DownloadDumpRequest();
            inValue.Ad_user_ID = Ad_user_ID;
            inValue.fileName = fileName;
            inValue.accessKey = accessKey;
            VIS.CloudService.DownloadDumpResponse retVal = ((VIS.CloudService.ServiceSoap)(this)).DownloadDump(inValue);
            return retVal.DownloadDumpResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<VIS.CloudService.DownloadDumpResponse> VIS.CloudService.ServiceSoap.DownloadDumpAsync(VIS.CloudService.DownloadDumpRequest request) {
            return base.Channel.DownloadDumpAsync(request);
        }
        
        public System.Threading.Tasks.Task<VIS.CloudService.DownloadDumpResponse> DownloadDumpAsync(int Ad_user_ID, string fileName, string accessKey) {
            VIS.CloudService.DownloadDumpRequest inValue = new VIS.CloudService.DownloadDumpRequest();
            inValue.Ad_user_ID = Ad_user_ID;
            inValue.fileName = fileName;
            inValue.accessKey = accessKey;
            return ((VIS.CloudService.ServiceSoap)(this)).DownloadDumpAsync(inValue);
        }
        
        public string ChangeLoginUserPassword(int AD_User_ID, string oldPassword, string newPassword, string accessKey) {
            return base.Channel.ChangeLoginUserPassword(AD_User_ID, oldPassword, newPassword, accessKey);
        }
        
        public System.Threading.Tasks.Task<string> ChangeLoginUserPasswordAsync(int AD_User_ID, string oldPassword, string newPassword, string accessKey) {
            return base.Channel.ChangeLoginUserPasswordAsync(AD_User_ID, oldPassword, newPassword, accessKey);
        }
        
        public string SetApplicationStatusM1(int AD_User_ID, char value, string accessKey) {
            return base.Channel.SetApplicationStatusM1(AD_User_ID, value, accessKey);
        }
        
        public System.Threading.Tasks.Task<string> SetApplicationStatusM1Async(int AD_User_ID, char value, string accessKey) {
            return base.Channel.SetApplicationStatusM1Async(AD_User_ID, value, accessKey);
        }
        
        public string SetApplicationStatusM2(int AD_User_ID, char value, int createdBy, string accessKey) {
            return base.Channel.SetApplicationStatusM2(AD_User_ID, value, createdBy, accessKey);
        }
        
        public System.Threading.Tasks.Task<string> SetApplicationStatusM2Async(int AD_User_ID, char value, int createdBy, string accessKey) {
            return base.Channel.SetApplicationStatusM2Async(AD_User_ID, value, createdBy, accessKey);
        }
        
        public VIS.CloudService.BackupInfo GetAllAppDeleteRequest(string zoneCode, string accessKey) {
            return base.Channel.GetAllAppDeleteRequest(zoneCode, accessKey);
        }
        
        public System.Threading.Tasks.Task<VIS.CloudService.BackupInfo> GetAllAppDeleteRequestAsync(string zoneCode, string accessKey) {
            return base.Channel.GetAllAppDeleteRequestAsync(zoneCode, accessKey);
        }
        
        public string AssignServerIPToCustomerTenant(int CS_CustomerTenentInfo_ID, string value, int CS_ZoneMasterServer_ID, int M_Product_ID, int A_Asset_ID, int AD_User_ID, string accessKey) {
            return base.Channel.AssignServerIPToCustomerTenant(CS_CustomerTenentInfo_ID, value, CS_ZoneMasterServer_ID, M_Product_ID, A_Asset_ID, AD_User_ID, accessKey);
        }
        
        public System.Threading.Tasks.Task<string> AssignServerIPToCustomerTenantAsync(int CS_CustomerTenentInfo_ID, string value, int CS_ZoneMasterServer_ID, int M_Product_ID, int A_Asset_ID, int AD_User_ID, string accessKey) {
            return base.Channel.AssignServerIPToCustomerTenantAsync(CS_CustomerTenentInfo_ID, value, CS_ZoneMasterServer_ID, M_Product_ID, A_Asset_ID, AD_User_ID, accessKey);
        }
        
        public VIS.CloudService.GetUnassignedIp GetIpAssignRequest(string zoneCode, string accessKey) {
            return base.Channel.GetIpAssignRequest(zoneCode, accessKey);
        }
        
        public System.Threading.Tasks.Task<VIS.CloudService.GetUnassignedIp> GetIpAssignRequestAsync(string zoneCode, string accessKey) {
            return base.Channel.GetIpAssignRequestAsync(zoneCode, accessKey);
        }
        
        public string StartAndStopZoneServers(string zoneCode, bool isStart, string accessKey) {
            return base.Channel.StartAndStopZoneServers(zoneCode, isStart, accessKey);
        }
        
        public System.Threading.Tasks.Task<string> StartAndStopZoneServersAsync(string zoneCode, bool isStart, string accessKey) {
            return base.Channel.StartAndStopZoneServersAsync(zoneCode, isStart, accessKey);
        }
        
        public string SetAssetDeleted(int A_Asset_ID, string accessKey) {
            return base.Channel.SetAssetDeleted(A_Asset_ID, accessKey);
        }
        
        public System.Threading.Tasks.Task<string> SetAssetDeletedAsync(int A_Asset_ID, string accessKey) {
            return base.Channel.SetAssetDeletedAsync(A_Asset_ID, accessKey);
        }
        
        public string GetUserUrl(int AD_User_ID, string accessKey) {
            return base.Channel.GetUserUrl(AD_User_ID, accessKey);
        }
        
        public System.Threading.Tasks.Task<string> GetUserUrlAsync(int AD_User_ID, string accessKey) {
            return base.Channel.GetUserUrlAsync(AD_User_ID, accessKey);
        }
        
        public string GetUserProduct(int AD_user_ID, string accessKey) {
            return base.Channel.GetUserProduct(AD_user_ID, accessKey);
        }
        
        public System.Threading.Tasks.Task<string> GetUserProductAsync(int AD_user_ID, string accessKey) {
            return base.Channel.GetUserProductAsync(AD_user_ID, accessKey);
        }
        
        public string ResendEmail(string type, int Ad_User_ID, string accessKey) {
            return base.Channel.ResendEmail(type, Ad_User_ID, accessKey);
        }
        
        public System.Threading.Tasks.Task<string> ResendEmailAsync(string type, int Ad_User_ID, string accessKey) {
            return base.Channel.ResendEmailAsync(type, Ad_User_ID, accessKey);
        }
        
        public string CreateAdditionalDataBase(string zoneCode, string accessKey) {
            return base.Channel.CreateAdditionalDataBase(zoneCode, accessKey);
        }
        
        public System.Threading.Tasks.Task<string> CreateAdditionalDataBaseAsync(string zoneCode, string accessKey) {
            return base.Channel.CreateAdditionalDataBaseAsync(zoneCode, accessKey);
        }
        
        public VIS.CloudService.DummyDBMigrationInfo GetDummyDataBaseInfo(int zoneClientServerID, string zoneCode, int product_ID, string accessKey) {
            return base.Channel.GetDummyDataBaseInfo(zoneClientServerID, zoneCode, product_ID, accessKey);
        }
        
        public System.Threading.Tasks.Task<VIS.CloudService.DummyDBMigrationInfo> GetDummyDataBaseInfoAsync(int zoneClientServerID, string zoneCode, int product_ID, string accessKey) {
            return base.Channel.GetDummyDataBaseInfoAsync(zoneClientServerID, zoneCode, product_ID, accessKey);
        }
        
        public string UpdateDataBaseEntry(int CS_DataBase_ID, bool isDatabaseImported, bool istenantCreated, bool isMigrationDone, string accessKey) {
            return base.Channel.UpdateDataBaseEntry(CS_DataBase_ID, isDatabaseImported, istenantCreated, isMigrationDone, accessKey);
        }
        
        public System.Threading.Tasks.Task<string> UpdateDataBaseEntryAsync(int CS_DataBase_ID, bool isDatabaseImported, bool istenantCreated, bool isMigrationDone, string accessKey) {
            return base.Channel.UpdateDataBaseEntryAsync(CS_DataBase_ID, isDatabaseImported, istenantCreated, isMigrationDone, accessKey);
        }
        
        public VIS.CloudService.DBMigrationInfo GetAdminIDForMigraration(int CS_DataBase_ID, string accessKey) {
            return base.Channel.GetAdminIDForMigraration(CS_DataBase_ID, accessKey);
        }
        
        public System.Threading.Tasks.Task<VIS.CloudService.DBMigrationInfo> GetAdminIDForMigrarationAsync(int CS_DataBase_ID, string accessKey) {
            return base.Channel.GetAdminIDForMigrarationAsync(CS_DataBase_ID, accessKey);
        }
        
        public string CreateDummyTenant(
                    string clientName, 
                    string orgName, 
                    string adminUser, 
                    string city, 
                    int countryID, 
                    string countryCode, 
                    int regionID, 
                    int currencyID, 
                    string currencyName, 
                    int zoneMasterServerID, 
                    string globalIP, 
                    string dbUserName, 
                    string dbPwd, 
                    string dbPort, 
                    string dbService, 
                    int CS_DataBase_ID, 
                    string accessKey) {
            return base.Channel.CreateDummyTenant(clientName, orgName, adminUser, city, countryID, countryCode, regionID, currencyID, currencyName, zoneMasterServerID, globalIP, dbUserName, dbPwd, dbPort, dbService, CS_DataBase_ID, accessKey);
        }
        
        public System.Threading.Tasks.Task<string> CreateDummyTenantAsync(
                    string clientName, 
                    string orgName, 
                    string adminUser, 
                    string city, 
                    int countryID, 
                    string countryCode, 
                    int regionID, 
                    int currencyID, 
                    string currencyName, 
                    int zoneMasterServerID, 
                    string globalIP, 
                    string dbUserName, 
                    string dbPwd, 
                    string dbPort, 
                    string dbService, 
                    int CS_DataBase_ID, 
                    string accessKey) {
            return base.Channel.CreateDummyTenantAsync(clientName, orgName, adminUser, city, countryID, countryCode, regionID, currencyID, currencyName, zoneMasterServerID, globalIP, dbUserName, dbPwd, dbPort, dbService, CS_DataBase_ID, accessKey);
        }
        
        public VIS.CloudService.DBInfo GetRequestsToCreateDB(string zoneCode, string accessKey) {
            return base.Channel.GetRequestsToCreateDB(zoneCode, accessKey);
        }
        
        public System.Threading.Tasks.Task<VIS.CloudService.DBInfo> GetRequestsToCreateDBAsync(string zoneCode, string accessKey) {
            return base.Channel.GetRequestsToCreateDBAsync(zoneCode, accessKey);
        }
        
        public VIS.CloudService.DummyDBWithFTpInfo GetRequestsToCreateDBWithFtpInfo(string zoneCode, string accessKey) {
            return base.Channel.GetRequestsToCreateDBWithFtpInfo(zoneCode, accessKey);
        }
        
        public System.Threading.Tasks.Task<VIS.CloudService.DummyDBWithFTpInfo> GetRequestsToCreateDBWithFtpInfoAsync(string zoneCode, string accessKey) {
            return base.Channel.GetRequestsToCreateDBWithFtpInfoAsync(zoneCode, accessKey);
        }
        
        public string MarkMailServerCreated(int A_Asset_ID, bool isMailServerCreated, string accessKey) {
            return base.Channel.MarkMailServerCreated(A_Asset_ID, isMailServerCreated, accessKey);
        }
        
        public System.Threading.Tasks.Task<string> MarkMailServerCreatedAsync(int A_Asset_ID, bool isMailServerCreated, string accessKey) {
            return base.Channel.MarkMailServerCreatedAsync(A_Asset_ID, isMailServerCreated, accessKey);
        }
        
        public string GetUserInfoOfTokenKey(string tokenKey, string msg, string accessKey) {
            return base.Channel.GetUserInfoOfTokenKey(tokenKey, msg, accessKey);
        }
        
        public System.Threading.Tasks.Task<string> GetUserInfoOfTokenKeyAsync(string tokenKey, string msg, string accessKey) {
            return base.Channel.GetUserInfoOfTokenKeyAsync(tokenKey, msg, accessKey);
        }
        
        public string GetNews(string accessKey) {
            return base.Channel.GetNews(accessKey);
        }
        
        public System.Threading.Tasks.Task<string> GetNewsAsync(string accessKey) {
            return base.Channel.GetNewsAsync(accessKey);
        }
        
        public string GetCustomerOpenTickets(int Ad_user_ID, string accessKey) {
            return base.Channel.GetCustomerOpenTickets(Ad_user_ID, accessKey);
        }
        
        public System.Threading.Tasks.Task<string> GetCustomerOpenTicketsAsync(int Ad_user_ID, string accessKey) {
            return base.Channel.GetCustomerOpenTicketsAsync(Ad_user_ID, accessKey);
        }
        
        public string GetPartnerLeads(int Ad_User_ID, int CountryID, int statusID, string orderBy, string accessKey) {
            return base.Channel.GetPartnerLeads(Ad_User_ID, CountryID, statusID, orderBy, accessKey);
        }
        
        public System.Threading.Tasks.Task<string> GetPartnerLeadsAsync(int Ad_User_ID, int CountryID, int statusID, string orderBy, string accessKey) {
            return base.Channel.GetPartnerLeadsAsync(Ad_User_ID, CountryID, statusID, orderBy, accessKey);
        }
        
        public string PartnerLogin(string username, string password, string accessKey) {
            return base.Channel.PartnerLogin(username, password, accessKey);
        }
        
        public System.Threading.Tasks.Task<string> PartnerLoginAsync(string username, string password, string accessKey) {
            return base.Channel.PartnerLoginAsync(username, password, accessKey);
        }
        
        public string GetDetailedCustomer(int Ad_user_ID, string orderBy, string accessKey) {
            return base.Channel.GetDetailedCustomer(Ad_user_ID, orderBy, accessKey);
        }
        
        public System.Threading.Tasks.Task<string> GetDetailedCustomerAsync(int Ad_user_ID, string orderBy, string accessKey) {
            return base.Channel.GetDetailedCustomerAsync(Ad_user_ID, orderBy, accessKey);
        }
        
        public string GetCustomerProspectList(int Ad_user_ID, string orderBy, string accessKey) {
            return base.Channel.GetCustomerProspectList(Ad_user_ID, orderBy, accessKey);
        }
        
        public System.Threading.Tasks.Task<string> GetCustomerProspectListAsync(int Ad_user_ID, string orderBy, string accessKey) {
            return base.Channel.GetCustomerProspectListAsync(Ad_user_ID, orderBy, accessKey);
        }
        
        public string GetPartnerRecentTickets(int Ad_user_ID, string accessKey) {
            return base.Channel.GetPartnerRecentTickets(Ad_user_ID, accessKey);
        }
        
        public System.Threading.Tasks.Task<string> GetPartnerRecentTicketsAsync(int Ad_user_ID, string accessKey) {
            return base.Channel.GetPartnerRecentTicketsAsync(Ad_user_ID, accessKey);
        }
        
        public string SetCustomerAssociationWithPartner(int R_Request_ID, string Action, string Remarks, int AD_User_ID, string accessKey) {
            return base.Channel.SetCustomerAssociationWithPartner(R_Request_ID, Action, Remarks, AD_User_ID, accessKey);
        }
        
        public System.Threading.Tasks.Task<string> SetCustomerAssociationWithPartnerAsync(int R_Request_ID, string Action, string Remarks, int AD_User_ID, string accessKey) {
            return base.Channel.SetCustomerAssociationWithPartnerAsync(R_Request_ID, Action, Remarks, AD_User_ID, accessKey);
        }
        
        public string GetCustomerBillingDetail(int Customer_ID, int AD_user_ID, string accessKey) {
            return base.Channel.GetCustomerBillingDetail(Customer_ID, AD_user_ID, accessKey);
        }
        
        public System.Threading.Tasks.Task<string> GetCustomerBillingDetailAsync(int Customer_ID, int AD_user_ID, string accessKey) {
            return base.Channel.GetCustomerBillingDetailAsync(Customer_ID, AD_user_ID, accessKey);
        }
        
        public string GetPartnerLinks(int PartnerID, string accessKey) {
            return base.Channel.GetPartnerLinks(PartnerID, accessKey);
        }
        
        public System.Threading.Tasks.Task<string> GetPartnerLinksAsync(int PartnerID, string accessKey) {
            return base.Channel.GetPartnerLinksAsync(PartnerID, accessKey);
        }
        
        public string GetCustomerDetailedView(int Customer_ID, string accessKey) {
            return base.Channel.GetCustomerDetailedView(Customer_ID, accessKey);
        }
        
        public System.Threading.Tasks.Task<string> GetCustomerDetailedViewAsync(int Customer_ID, string accessKey) {
            return base.Channel.GetCustomerDetailedViewAsync(Customer_ID, accessKey);
        }
        
        public string GetVCustomerDetailsView(int AD_User_ID, string accessKey) {
            return base.Channel.GetVCustomerDetailsView(AD_User_ID, accessKey);
        }
        
        public System.Threading.Tasks.Task<string> GetVCustomerDetailsViewAsync(int AD_User_ID, string accessKey) {
            return base.Channel.GetVCustomerDetailsViewAsync(AD_User_ID, accessKey);
        }
        
        public string GetProductPrice(string accessKey) {
            return base.Channel.GetProductPrice(accessKey);
        }
        
        public System.Threading.Tasks.Task<string> GetProductPriceAsync(string accessKey) {
            return base.Channel.GetProductPriceAsync(accessKey);
        }
        
        public string GetProfessionalProductPrice(int AD_User_ID, string accessKey) {
            return base.Channel.GetProfessionalProductPrice(AD_User_ID, accessKey);
        }
        
        public System.Threading.Tasks.Task<string> GetProfessionalProductPriceAsync(int AD_User_ID, string accessKey) {
            return base.Channel.GetProfessionalProductPriceAsync(AD_User_ID, accessKey);
        }
        
        public string GetTotalCurrentUser(int AD_User_ID, string accessKey) {
            return base.Channel.GetTotalCurrentUser(AD_User_ID, accessKey);
        }
        
        public System.Threading.Tasks.Task<string> GetTotalCurrentUserAsync(int AD_User_ID, string accessKey) {
            return base.Channel.GetTotalCurrentUserAsync(AD_User_ID, accessKey);
        }
        
        public string UpgradeOrRenewVCustomerSubscription(int AD_User_ID, int PlanID, string CardType, string NameOnCard, string CardNumber, int ExpiryDay, int ExpiryMonth, int ExpiryYear, int CVNumber, string ipAddress, string TrxID, int NoOfUser, bool IsNew, decimal priceEntered, string accessKey) {
            return base.Channel.UpgradeOrRenewVCustomerSubscription(AD_User_ID, PlanID, CardType, NameOnCard, CardNumber, ExpiryDay, ExpiryMonth, ExpiryYear, CVNumber, ipAddress, TrxID, NoOfUser, IsNew, priceEntered, accessKey);
        }
        
        public System.Threading.Tasks.Task<string> UpgradeOrRenewVCustomerSubscriptionAsync(int AD_User_ID, int PlanID, string CardType, string NameOnCard, string CardNumber, int ExpiryDay, int ExpiryMonth, int ExpiryYear, int CVNumber, string ipAddress, string TrxID, int NoOfUser, bool IsNew, decimal priceEntered, string accessKey) {
            return base.Channel.UpgradeOrRenewVCustomerSubscriptionAsync(AD_User_ID, PlanID, CardType, NameOnCard, CardNumber, ExpiryDay, ExpiryMonth, ExpiryYear, CVNumber, ipAddress, TrxID, NoOfUser, IsNew, priceEntered, accessKey);
        }
        
        public string GetPartnerDetailsView(int Partner_ID, string accessKey) {
            return base.Channel.GetPartnerDetailsView(Partner_ID, accessKey);
        }
        
        public System.Threading.Tasks.Task<string> GetPartnerDetailsViewAsync(int Partner_ID, string accessKey) {
            return base.Channel.GetPartnerDetailsViewAsync(Partner_ID, accessKey);
        }
        
        public string AddNewLinkofPartner(int partnerID, string username, string password, string url, string description, string accessKey) {
            return base.Channel.AddNewLinkofPartner(partnerID, username, password, url, description, accessKey);
        }
        
        public System.Threading.Tasks.Task<string> AddNewLinkofPartnerAsync(int partnerID, string username, string password, string url, string description, string accessKey) {
            return base.Channel.AddNewLinkofPartnerAsync(partnerID, username, password, url, description, accessKey);
        }
        
        public string GetDetailsViewPartnerSubscription(int PartnerID, string accessKey) {
            return base.Channel.GetDetailsViewPartnerSubscription(PartnerID, accessKey);
        }
        
        public System.Threading.Tasks.Task<string> GetDetailsViewPartnerSubscriptionAsync(int PartnerID, string accessKey) {
            return base.Channel.GetDetailsViewPartnerSubscriptionAsync(PartnerID, accessKey);
        }
        
        public string GetDetailsViewCustomerSubscription(int AD_User_ID, string accessKey) {
            return base.Channel.GetDetailsViewCustomerSubscription(AD_User_ID, accessKey);
        }
        
        public System.Threading.Tasks.Task<string> GetDetailsViewCustomerSubscriptionAsync(int AD_User_ID, string accessKey) {
            return base.Channel.GetDetailsViewCustomerSubscriptionAsync(AD_User_ID, accessKey);
        }
        
        public string UpgradeOrRenewSubscription(int AD_User_ID, int PlanID, string CardType, string NameOnCard, string CardNumber, int ExpiryDay, int ExpiryMonth, int ExpiryYear, int CVNumber, string TrxID, string ipAddress, string accessKey) {
            return base.Channel.UpgradeOrRenewSubscription(AD_User_ID, PlanID, CardType, NameOnCard, CardNumber, ExpiryDay, ExpiryMonth, ExpiryYear, CVNumber, TrxID, ipAddress, accessKey);
        }
        
        public System.Threading.Tasks.Task<string> UpgradeOrRenewSubscriptionAsync(int AD_User_ID, int PlanID, string CardType, string NameOnCard, string CardNumber, int ExpiryDay, int ExpiryMonth, int ExpiryYear, int CVNumber, string TrxID, string ipAddress, string accessKey) {
            return base.Channel.UpgradeOrRenewSubscriptionAsync(AD_User_ID, PlanID, CardType, NameOnCard, CardNumber, ExpiryDay, ExpiryMonth, ExpiryYear, CVNumber, TrxID, ipAddress, accessKey);
        }
        
        public string GetPartnerCustomer(int AD_User_ID, string accessKey) {
            return base.Channel.GetPartnerCustomer(AD_User_ID, accessKey);
        }
        
        public System.Threading.Tasks.Task<string> GetPartnerCustomerAsync(int AD_User_ID, string accessKey) {
            return base.Channel.GetPartnerCustomerAsync(AD_User_ID, accessKey);
        }
        
        public string GetCustomerFilteredTickets(int Partner_ID, int CustomerID, int statusID, string orderBy, int pendingDays, bool isforwarded, string accessKey) {
            return base.Channel.GetCustomerFilteredTickets(Partner_ID, CustomerID, statusID, orderBy, pendingDays, isforwarded, accessKey);
        }
        
        public System.Threading.Tasks.Task<string> GetCustomerFilteredTicketsAsync(int Partner_ID, int CustomerID, int statusID, string orderBy, int pendingDays, bool isforwarded, string accessKey) {
            return base.Channel.GetCustomerFilteredTicketsAsync(Partner_ID, CustomerID, statusID, orderBy, pendingDays, isforwarded, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        VIS.CloudService.SetForwardTicketsResponse VIS.CloudService.ServiceSoap.SetForwardTickets(VIS.CloudService.SetForwardTicketsRequest request) {
            return base.Channel.SetForwardTickets(request);
        }
        
        public string SetForwardTickets(int AD_User_ID, int R_Request_ID, string remarks, byte[] Attachment, int docno, string fileName, string accessKey) {
            VIS.CloudService.SetForwardTicketsRequest inValue = new VIS.CloudService.SetForwardTicketsRequest();
            inValue.AD_User_ID = AD_User_ID;
            inValue.R_Request_ID = R_Request_ID;
            inValue.remarks = remarks;
            inValue.Attachment = Attachment;
            inValue.docno = docno;
            inValue.fileName = fileName;
            inValue.accessKey = accessKey;
            VIS.CloudService.SetForwardTicketsResponse retVal = ((VIS.CloudService.ServiceSoap)(this)).SetForwardTickets(inValue);
            return retVal.SetForwardTicketsResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<VIS.CloudService.SetForwardTicketsResponse> VIS.CloudService.ServiceSoap.SetForwardTicketsAsync(VIS.CloudService.SetForwardTicketsRequest request) {
            return base.Channel.SetForwardTicketsAsync(request);
        }
        
        public System.Threading.Tasks.Task<VIS.CloudService.SetForwardTicketsResponse> SetForwardTicketsAsync(int AD_User_ID, int R_Request_ID, string remarks, byte[] Attachment, int docno, string fileName, string accessKey) {
            VIS.CloudService.SetForwardTicketsRequest inValue = new VIS.CloudService.SetForwardTicketsRequest();
            inValue.AD_User_ID = AD_User_ID;
            inValue.R_Request_ID = R_Request_ID;
            inValue.remarks = remarks;
            inValue.Attachment = Attachment;
            inValue.docno = docno;
            inValue.fileName = fileName;
            inValue.accessKey = accessKey;
            return ((VIS.CloudService.ServiceSoap)(this)).SetForwardTicketsAsync(inValue);
        }
        
        public string GetPartnerFilteredTickets(int AD_User_ID, int StatusID, int PendingDays, string OrderBy, string accessKey) {
            return base.Channel.GetPartnerFilteredTickets(AD_User_ID, StatusID, PendingDays, OrderBy, accessKey);
        }
        
        public System.Threading.Tasks.Task<string> GetPartnerFilteredTicketsAsync(int AD_User_ID, int StatusID, int PendingDays, string OrderBy, string accessKey) {
            return base.Channel.GetPartnerFilteredTicketsAsync(AD_User_ID, StatusID, PendingDays, OrderBy, accessKey);
        }
        
        public string GetLeadStatus(string accessKey) {
            return base.Channel.GetLeadStatus(accessKey);
        }
        
        public System.Threading.Tasks.Task<string> GetLeadStatusAsync(string accessKey) {
            return base.Channel.GetLeadStatusAsync(accessKey);
        }
        
        public string GetCustomerAddOns(int AD_user_ID, string accessKey) {
            return base.Channel.GetCustomerAddOns(AD_user_ID, accessKey);
        }
        
        public System.Threading.Tasks.Task<string> GetCustomerAddOnsAsync(int AD_user_ID, string accessKey) {
            return base.Channel.GetCustomerAddOnsAsync(AD_user_ID, accessKey);
        }
        
        public string SetPartnerAccountInformation(int AD_User_ID, string Fullname, string Title, string Phone, string Fax, string WebsiteURL, string city, string Address, int CountryID, string accessKey) {
            return base.Channel.SetPartnerAccountInformation(AD_User_ID, Fullname, Title, Phone, Fax, WebsiteURL, city, Address, CountryID, accessKey);
        }
        
        public System.Threading.Tasks.Task<string> SetPartnerAccountInformationAsync(int AD_User_ID, string Fullname, string Title, string Phone, string Fax, string WebsiteURL, string city, string Address, int CountryID, string accessKey) {
            return base.Channel.SetPartnerAccountInformationAsync(AD_User_ID, Fullname, Title, Phone, Fax, WebsiteURL, city, Address, CountryID, accessKey);
        }
        
        public string SetCustomerAccountInformation(int AD_User_ID, string Fullname, string Title, string Phone, string Fax, string WebsiteURL, string city, string Address, int CountryID, string accessKey) {
            return base.Channel.SetCustomerAccountInformation(AD_User_ID, Fullname, Title, Phone, Fax, WebsiteURL, city, Address, CountryID, accessKey);
        }
        
        public System.Threading.Tasks.Task<string> SetCustomerAccountInformationAsync(int AD_User_ID, string Fullname, string Title, string Phone, string Fax, string WebsiteURL, string city, string Address, int CountryID, string accessKey) {
            return base.Channel.SetCustomerAccountInformationAsync(AD_User_ID, Fullname, Title, Phone, Fax, WebsiteURL, city, Address, CountryID, accessKey);
        }
        
        public string SetLeadStatus(int LeadID, int StatusID, string Request, string Comment, string accessKey) {
            return base.Channel.SetLeadStatus(LeadID, StatusID, Request, Comment, accessKey);
        }
        
        public System.Threading.Tasks.Task<string> SetLeadStatusAsync(int LeadID, int StatusID, string Request, string Comment, string accessKey) {
            return base.Channel.SetLeadStatusAsync(LeadID, StatusID, Request, Comment, accessKey);
        }
        
        public string GetPartnerPlans(int AD_User_ID, string accessKey) {
            return base.Channel.GetPartnerPlans(AD_User_ID, accessKey);
        }
        
        public System.Threading.Tasks.Task<string> GetPartnerPlansAsync(int AD_User_ID, string accessKey) {
            return base.Channel.GetPartnerPlansAsync(AD_User_ID, accessKey);
        }
        
        public string GetPartnerListing(int CountryID, int AD_User_ID, string accessKey) {
            return base.Channel.GetPartnerListing(CountryID, AD_User_ID, accessKey);
        }
        
        public System.Threading.Tasks.Task<string> GetPartnerListingAsync(int CountryID, int AD_User_ID, string accessKey) {
            return base.Channel.GetPartnerListingAsync(CountryID, AD_User_ID, accessKey);
        }
        
        public string GetPartnerFilteredListing(int RegionID, string accessKey) {
            return base.Channel.GetPartnerFilteredListing(RegionID, accessKey);
        }
        
        public System.Threading.Tasks.Task<string> GetPartnerFilteredListingAsync(int RegionID, string accessKey) {
            return base.Channel.GetPartnerFilteredListingAsync(RegionID, accessKey);
        }
        
        public string GetPartnerLeadDetails(int C_Lead_ID, string accessKey) {
            return base.Channel.GetPartnerLeadDetails(C_Lead_ID, accessKey);
        }
        
        public System.Threading.Tasks.Task<string> GetPartnerLeadDetailsAsync(int C_Lead_ID, string accessKey) {
            return base.Channel.GetPartnerLeadDetailsAsync(C_Lead_ID, accessKey);
        }
        
        public string CancellAssociationRequest(int R_Request_ID, string Remarks, int AD_User_ID, string accessKey) {
            return base.Channel.CancellAssociationRequest(R_Request_ID, Remarks, AD_User_ID, accessKey);
        }
        
        public System.Threading.Tasks.Task<string> CancellAssociationRequestAsync(int R_Request_ID, string Remarks, int AD_User_ID, string accessKey) {
            return base.Channel.CancellAssociationRequestAsync(R_Request_ID, Remarks, AD_User_ID, accessKey);
        }
        
        public string DeletePartnerLink(int DemoLinkID, string accessKey) {
            return base.Channel.DeletePartnerLink(DemoLinkID, accessKey);
        }
        
        public System.Threading.Tasks.Task<string> DeletePartnerLinkAsync(int DemoLinkID, string accessKey) {
            return base.Channel.DeletePartnerLinkAsync(DemoLinkID, accessKey);
        }
        
        public string partnerAssociationRequest(int partner_ID, int AD_user_ID, string remarks, string accessKey) {
            return base.Channel.partnerAssociationRequest(partner_ID, AD_user_ID, remarks, accessKey);
        }
        
        public System.Threading.Tasks.Task<string> partnerAssociationRequestAsync(int partner_ID, int AD_user_ID, string remarks, string accessKey) {
            return base.Channel.partnerAssociationRequestAsync(partner_ID, AD_user_ID, remarks, accessKey);
        }
        
        public string GetPartnerCountries(string accessKey) {
            return base.Channel.GetPartnerCountries(accessKey);
        }
        
        public System.Threading.Tasks.Task<string> GetPartnerCountriesAsync(string accessKey) {
            return base.Channel.GetPartnerCountriesAsync(accessKey);
        }
        
        public string GetAssociatedSP(int AD_User_ID, string accessKey) {
            return base.Channel.GetAssociatedSP(AD_User_ID, accessKey);
        }
        
        public System.Threading.Tasks.Task<string> GetAssociatedSPAsync(int AD_User_ID, string accessKey) {
            return base.Channel.GetAssociatedSPAsync(AD_User_ID, accessKey);
        }
        
        public VIS.CloudService.AboutUs Aboutvienna(string accessKey) {
            return base.Channel.Aboutvienna(accessKey);
        }
        
        public System.Threading.Tasks.Task<VIS.CloudService.AboutUs> AboutviennaAsync(string accessKey) {
            return base.Channel.AboutviennaAsync(accessKey);
        }
        
        public string GetSupportTicketStatus(string AccessKey) {
            return base.Channel.GetSupportTicketStatus(AccessKey);
        }
        
        public System.Threading.Tasks.Task<string> GetSupportTicketStatusAsync(string AccessKey) {
            return base.Channel.GetSupportTicketStatusAsync(AccessKey);
        }
        
        public string GetCustomerStatusSupportTicket(int r_status_id, int ad_user_id, string orderby, string AccessKey) {
            return base.Channel.GetCustomerStatusSupportTicket(r_status_id, ad_user_id, orderby, AccessKey);
        }
        
        public System.Threading.Tasks.Task<string> GetCustomerStatusSupportTicketAsync(int r_status_id, int ad_user_id, string orderby, string AccessKey) {
            return base.Channel.GetCustomerStatusSupportTicketAsync(r_status_id, ad_user_id, orderby, AccessKey);
        }
        
        public string GetCustomerSupportTickets(int ad_user_id, string AccessKey) {
            return base.Channel.GetCustomerSupportTickets(ad_user_id, AccessKey);
        }
        
        public System.Threading.Tasks.Task<string> GetCustomerSupportTicketsAsync(int ad_user_id, string AccessKey) {
            return base.Channel.GetCustomerSupportTicketsAsync(ad_user_id, AccessKey);
        }
        
        public string GetCustomerHistoryLines(int documentNo, string AccessKey) {
            return base.Channel.GetCustomerHistoryLines(documentNo, AccessKey);
        }
        
        public System.Threading.Tasks.Task<string> GetCustomerHistoryLinesAsync(int documentNo, string AccessKey) {
            return base.Channel.GetCustomerHistoryLinesAsync(documentNo, AccessKey);
        }
        
        public string GetCustomerTicketPriority(string AccessKey) {
            return base.Channel.GetCustomerTicketPriority(AccessKey);
        }
        
        public System.Threading.Tasks.Task<string> GetCustomerTicketPriorityAsync(string AccessKey) {
            return base.Channel.GetCustomerTicketPriorityAsync(AccessKey);
        }
        
        public string GetCustomerTicketRequestType(string AccessKey) {
            return base.Channel.GetCustomerTicketRequestType(AccessKey);
        }
        
        public System.Threading.Tasks.Task<string> GetCustomerTicketRequestTypeAsync(string AccessKey) {
            return base.Channel.GetCustomerTicketRequestTypeAsync(AccessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        VIS.CloudService.SetCustomerNewTicketResponse VIS.CloudService.ServiceSoap.SetCustomerNewTicket(VIS.CloudService.SetCustomerNewTicketRequest request) {
            return base.Channel.SetCustomerNewTicket(request);
        }
        
        public string SetCustomerNewTicket(int PriorityUser, byte[] file, int ad_user_id, string Summary, string FileName, string AccessKey) {
            VIS.CloudService.SetCustomerNewTicketRequest inValue = new VIS.CloudService.SetCustomerNewTicketRequest();
            inValue.PriorityUser = PriorityUser;
            inValue.file = file;
            inValue.ad_user_id = ad_user_id;
            inValue.Summary = Summary;
            inValue.FileName = FileName;
            inValue.AccessKey = AccessKey;
            VIS.CloudService.SetCustomerNewTicketResponse retVal = ((VIS.CloudService.ServiceSoap)(this)).SetCustomerNewTicket(inValue);
            return retVal.SetCustomerNewTicketResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<VIS.CloudService.SetCustomerNewTicketResponse> VIS.CloudService.ServiceSoap.SetCustomerNewTicketAsync(VIS.CloudService.SetCustomerNewTicketRequest request) {
            return base.Channel.SetCustomerNewTicketAsync(request);
        }
        
        public System.Threading.Tasks.Task<VIS.CloudService.SetCustomerNewTicketResponse> SetCustomerNewTicketAsync(int PriorityUser, byte[] file, int ad_user_id, string Summary, string FileName, string AccessKey) {
            VIS.CloudService.SetCustomerNewTicketRequest inValue = new VIS.CloudService.SetCustomerNewTicketRequest();
            inValue.PriorityUser = PriorityUser;
            inValue.file = file;
            inValue.ad_user_id = ad_user_id;
            inValue.Summary = Summary;
            inValue.FileName = FileName;
            inValue.AccessKey = AccessKey;
            return ((VIS.CloudService.ServiceSoap)(this)).SetCustomerNewTicketAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        VIS.CloudService.SetCustomerTicketHistoryLinesResponse VIS.CloudService.ServiceSoap.SetCustomerTicketHistoryLines(VIS.CloudService.SetCustomerTicketHistoryLinesRequest request) {
            return base.Channel.SetCustomerTicketHistoryLines(request);
        }
        
        public string SetCustomerTicketHistoryLines(int ad_user_ID, byte[] file, int documentNo, string result, string FileName, string AccessKey) {
            VIS.CloudService.SetCustomerTicketHistoryLinesRequest inValue = new VIS.CloudService.SetCustomerTicketHistoryLinesRequest();
            inValue.ad_user_ID = ad_user_ID;
            inValue.file = file;
            inValue.documentNo = documentNo;
            inValue.result = result;
            inValue.FileName = FileName;
            inValue.AccessKey = AccessKey;
            VIS.CloudService.SetCustomerTicketHistoryLinesResponse retVal = ((VIS.CloudService.ServiceSoap)(this)).SetCustomerTicketHistoryLines(inValue);
            return retVal.SetCustomerTicketHistoryLinesResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<VIS.CloudService.SetCustomerTicketHistoryLinesResponse> VIS.CloudService.ServiceSoap.SetCustomerTicketHistoryLinesAsync(VIS.CloudService.SetCustomerTicketHistoryLinesRequest request) {
            return base.Channel.SetCustomerTicketHistoryLinesAsync(request);
        }
        
        public System.Threading.Tasks.Task<VIS.CloudService.SetCustomerTicketHistoryLinesResponse> SetCustomerTicketHistoryLinesAsync(int ad_user_ID, byte[] file, int documentNo, string result, string FileName, string AccessKey) {
            VIS.CloudService.SetCustomerTicketHistoryLinesRequest inValue = new VIS.CloudService.SetCustomerTicketHistoryLinesRequest();
            inValue.ad_user_ID = ad_user_ID;
            inValue.file = file;
            inValue.documentNo = documentNo;
            inValue.result = result;
            inValue.FileName = FileName;
            inValue.AccessKey = AccessKey;
            return ((VIS.CloudService.ServiceSoap)(this)).SetCustomerTicketHistoryLinesAsync(inValue);
        }
        
        public string GetCustomerTicketDetails(int DocNo, string AccessKey) {
            return base.Channel.GetCustomerTicketDetails(DocNo, AccessKey);
        }
        
        public System.Threading.Tasks.Task<string> GetCustomerTicketDetailsAsync(int DocNo, string AccessKey) {
            return base.Channel.GetCustomerTicketDetailsAsync(DocNo, AccessKey);
        }
        
        public string SetDBRestore(int A_Asset_ID, char value, string AccessKey) {
            return base.Channel.SetDBRestore(A_Asset_ID, value, AccessKey);
        }
        
        public System.Threading.Tasks.Task<string> SetDBRestoreAsync(int A_Asset_ID, char value, string AccessKey) {
            return base.Channel.SetDBRestoreAsync(A_Asset_ID, value, AccessKey);
        }
        
        public string Hello(string abc) {
            return base.Channel.Hello(abc);
        }
        
        public System.Threading.Tasks.Task<string> HelloAsync(string abc) {
            return base.Channel.HelloAsync(abc);
        }
        
        public string SaveCustomerTenentInfoM1(string domainName, string tenentName, string orgName, string adminUserName, int currency_ID, int country_ID, string city, int regionID, int AD_User_ID, int CS_ZoneMasterServer_ID, string ipaddress, string accessKey) {
            return base.Channel.SaveCustomerTenentInfoM1(domainName, tenentName, orgName, adminUserName, currency_ID, country_ID, city, regionID, AD_User_ID, CS_ZoneMasterServer_ID, ipaddress, accessKey);
        }
        
        public System.Threading.Tasks.Task<string> SaveCustomerTenentInfoM1Async(string domainName, string tenentName, string orgName, string adminUserName, int currency_ID, int country_ID, string city, int regionID, int AD_User_ID, int CS_ZoneMasterServer_ID, string ipaddress, string accessKey) {
            return base.Channel.SaveCustomerTenentInfoM1Async(domainName, tenentName, orgName, adminUserName, currency_ID, country_ID, city, regionID, AD_User_ID, CS_ZoneMasterServer_ID, ipaddress, accessKey);
        }
        
        public string SaveCustomerTenentInfoM1fromMobile(string domainName, string tenentName, string orgName, string adminUserName, int currency_ID, int country_ID, string city, int regionID, int AD_User_ID, int CS_ZoneMasterServer_ID, string ipaddress, string accessKey) {
            return base.Channel.SaveCustomerTenentInfoM1fromMobile(domainName, tenentName, orgName, adminUserName, currency_ID, country_ID, city, regionID, AD_User_ID, CS_ZoneMasterServer_ID, ipaddress, accessKey);
        }
        
        public System.Threading.Tasks.Task<string> SaveCustomerTenentInfoM1fromMobileAsync(string domainName, string tenentName, string orgName, string adminUserName, int currency_ID, int country_ID, string city, int regionID, int AD_User_ID, int CS_ZoneMasterServer_ID, string ipaddress, string accessKey) {
            return base.Channel.SaveCustomerTenentInfoM1fromMobileAsync(domainName, tenentName, orgName, adminUserName, currency_ID, country_ID, city, regionID, AD_User_ID, CS_ZoneMasterServer_ID, ipaddress, accessKey);
        }
        
        public string SaveCustomerTenentInfo(string tenentName, string orgName, string adminUserName, int currency_ID, int country_ID, string city, int regionID, int AD_User_ID, int CS_ZoneMasterServer_ID, string ipaddress, string accessKey) {
            return base.Channel.SaveCustomerTenentInfo(tenentName, orgName, adminUserName, currency_ID, country_ID, city, regionID, AD_User_ID, CS_ZoneMasterServer_ID, ipaddress, accessKey);
        }
        
        public System.Threading.Tasks.Task<string> SaveCustomerTenentInfoAsync(string tenentName, string orgName, string adminUserName, int currency_ID, int country_ID, string city, int regionID, int AD_User_ID, int CS_ZoneMasterServer_ID, string ipaddress, string accessKey) {
            return base.Channel.SaveCustomerTenentInfoAsync(tenentName, orgName, adminUserName, currency_ID, country_ID, city, regionID, AD_User_ID, CS_ZoneMasterServer_ID, ipaddress, accessKey);
        }
        
        public string IsDomainExist(string domainName, string accessKey) {
            return base.Channel.IsDomainExist(domainName, accessKey);
        }
        
        public System.Threading.Tasks.Task<string> IsDomainExistAsync(string domainName, string accessKey) {
            return base.Channel.IsDomainExistAsync(domainName, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        VIS.CloudService.RegisterInfoFromModuleResponse VIS.CloudService.ServiceSoap.RegisterInfoFromModule(VIS.CloudService.RegisterInfoFromModuleRequest request) {
            return base.Channel.RegisterInfoFromModule(request);
        }
        
        public string RegisterInfoFromModule(
                    string userName, 
                    string pwd, 
                    string companyName, 
                    string fullName, 
                    string mobile, 
                    string phone, 
                    string emailid, 
                    string address, 
                    int countryid, 
                    int regionid, 
                    string city, 
                    int productID, 
                    string productName, 
                    string cardType, 
                    string cardNumber, 
                    string csvNumber, 
                    string cardName, 
                    int expiryDay, 
                    int expiryMonth, 
                    int expiryYear, 
                    string billingAddress, 
                    string billingCity, 
                    string billingZip, 
                    int billingCountryID, 
                    string domainUserID, 
                    string domainUserLink, 
                    string domainName, 
                    string gender, 
                    int birthDay, 
                    int birthMonth, 
                    int birthYear, 
                    string ipAddress, 
                    System.Nullable<int> Campaign_ID, 
                    string accessKey) {
            VIS.CloudService.RegisterInfoFromModuleRequest inValue = new VIS.CloudService.RegisterInfoFromModuleRequest();
            inValue.userName = userName;
            inValue.pwd = pwd;
            inValue.companyName = companyName;
            inValue.fullName = fullName;
            inValue.mobile = mobile;
            inValue.phone = phone;
            inValue.emailid = emailid;
            inValue.address = address;
            inValue.countryid = countryid;
            inValue.regionid = regionid;
            inValue.city = city;
            inValue.productID = productID;
            inValue.productName = productName;
            inValue.cardType = cardType;
            inValue.cardNumber = cardNumber;
            inValue.csvNumber = csvNumber;
            inValue.cardName = cardName;
            inValue.expiryDay = expiryDay;
            inValue.expiryMonth = expiryMonth;
            inValue.expiryYear = expiryYear;
            inValue.billingAddress = billingAddress;
            inValue.billingCity = billingCity;
            inValue.billingZip = billingZip;
            inValue.billingCountryID = billingCountryID;
            inValue.domainUserID = domainUserID;
            inValue.domainUserLink = domainUserLink;
            inValue.domainName = domainName;
            inValue.gender = gender;
            inValue.birthDay = birthDay;
            inValue.birthMonth = birthMonth;
            inValue.birthYear = birthYear;
            inValue.ipAddress = ipAddress;
            inValue.Campaign_ID = Campaign_ID;
            inValue.accessKey = accessKey;
            VIS.CloudService.RegisterInfoFromModuleResponse retVal = ((VIS.CloudService.ServiceSoap)(this)).RegisterInfoFromModule(inValue);
            return retVal.RegisterInfoFromModuleResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<VIS.CloudService.RegisterInfoFromModuleResponse> VIS.CloudService.ServiceSoap.RegisterInfoFromModuleAsync(VIS.CloudService.RegisterInfoFromModuleRequest request) {
            return base.Channel.RegisterInfoFromModuleAsync(request);
        }
        
        public System.Threading.Tasks.Task<VIS.CloudService.RegisterInfoFromModuleResponse> RegisterInfoFromModuleAsync(
                    string userName, 
                    string pwd, 
                    string companyName, 
                    string fullName, 
                    string mobile, 
                    string phone, 
                    string emailid, 
                    string address, 
                    int countryid, 
                    int regionid, 
                    string city, 
                    int productID, 
                    string productName, 
                    string cardType, 
                    string cardNumber, 
                    string csvNumber, 
                    string cardName, 
                    int expiryDay, 
                    int expiryMonth, 
                    int expiryYear, 
                    string billingAddress, 
                    string billingCity, 
                    string billingZip, 
                    int billingCountryID, 
                    string domainUserID, 
                    string domainUserLink, 
                    string domainName, 
                    string gender, 
                    int birthDay, 
                    int birthMonth, 
                    int birthYear, 
                    string ipAddress, 
                    System.Nullable<int> Campaign_ID, 
                    string accessKey) {
            VIS.CloudService.RegisterInfoFromModuleRequest inValue = new VIS.CloudService.RegisterInfoFromModuleRequest();
            inValue.userName = userName;
            inValue.pwd = pwd;
            inValue.companyName = companyName;
            inValue.fullName = fullName;
            inValue.mobile = mobile;
            inValue.phone = phone;
            inValue.emailid = emailid;
            inValue.address = address;
            inValue.countryid = countryid;
            inValue.regionid = regionid;
            inValue.city = city;
            inValue.productID = productID;
            inValue.productName = productName;
            inValue.cardType = cardType;
            inValue.cardNumber = cardNumber;
            inValue.csvNumber = csvNumber;
            inValue.cardName = cardName;
            inValue.expiryDay = expiryDay;
            inValue.expiryMonth = expiryMonth;
            inValue.expiryYear = expiryYear;
            inValue.billingAddress = billingAddress;
            inValue.billingCity = billingCity;
            inValue.billingZip = billingZip;
            inValue.billingCountryID = billingCountryID;
            inValue.domainUserID = domainUserID;
            inValue.domainUserLink = domainUserLink;
            inValue.domainName = domainName;
            inValue.gender = gender;
            inValue.birthDay = birthDay;
            inValue.birthMonth = birthMonth;
            inValue.birthYear = birthYear;
            inValue.ipAddress = ipAddress;
            inValue.Campaign_ID = Campaign_ID;
            inValue.accessKey = accessKey;
            return ((VIS.CloudService.ServiceSoap)(this)).RegisterInfoFromModuleAsync(inValue);
        }
        
        public string RegisterInfo(
                    string userName, 
                    string pwd, 
                    string companyName, 
                    string fullName, 
                    string mobile, 
                    string phone, 
                    string emailid, 
                    string address, 
                    int countryid, 
                    int regionid, 
                    string city, 
                    int productID, 
                    string productName, 
                    string cardType, 
                    string cardNumber, 
                    string csvNumber, 
                    string cardName, 
                    int expiryDay, 
                    int expiryMonth, 
                    int expiryYear, 
                    string billingAddress, 
                    string billingCity, 
                    string billingZip, 
                    int billingCountryID, 
                    string domainUserID, 
                    string domainUserLink, 
                    string domainName, 
                    string gender, 
                    int birthDay, 
                    int birthMonth, 
                    int birthYear, 
                    string ipAddress, 
                    int Campaign_ID, 
                    string accessKey) {
            return base.Channel.RegisterInfo(userName, pwd, companyName, fullName, mobile, phone, emailid, address, countryid, regionid, city, productID, productName, cardType, cardNumber, csvNumber, cardName, expiryDay, expiryMonth, expiryYear, billingAddress, billingCity, billingZip, billingCountryID, domainUserID, domainUserLink, domainName, gender, birthDay, birthMonth, birthYear, ipAddress, Campaign_ID, accessKey);
        }
        
        public System.Threading.Tasks.Task<string> RegisterInfoAsync(
                    string userName, 
                    string pwd, 
                    string companyName, 
                    string fullName, 
                    string mobile, 
                    string phone, 
                    string emailid, 
                    string address, 
                    int countryid, 
                    int regionid, 
                    string city, 
                    int productID, 
                    string productName, 
                    string cardType, 
                    string cardNumber, 
                    string csvNumber, 
                    string cardName, 
                    int expiryDay, 
                    int expiryMonth, 
                    int expiryYear, 
                    string billingAddress, 
                    string billingCity, 
                    string billingZip, 
                    int billingCountryID, 
                    string domainUserID, 
                    string domainUserLink, 
                    string domainName, 
                    string gender, 
                    int birthDay, 
                    int birthMonth, 
                    int birthYear, 
                    string ipAddress, 
                    int Campaign_ID, 
                    string accessKey) {
            return base.Channel.RegisterInfoAsync(userName, pwd, companyName, fullName, mobile, phone, emailid, address, countryid, regionid, city, productID, productName, cardType, cardNumber, csvNumber, cardName, expiryDay, expiryMonth, expiryYear, billingAddress, billingCity, billingZip, billingCountryID, domainUserID, domainUserLink, domainName, gender, birthDay, birthMonth, birthYear, ipAddress, Campaign_ID, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        VIS.CloudService.VRegisterInfoResponse VIS.CloudService.ServiceSoap.VRegisterInfo(VIS.CloudService.VRegisterInfoRequest request) {
            return base.Channel.VRegisterInfo(request);
        }
        
        public string VRegisterInfo(
                    string userName, 
                    string pwd, 
                    string companyName, 
                    string fullName, 
                    string mobile, 
                    string phone, 
                    string emailid, 
                    string address, 
                    int countryid, 
                    int regionid, 
                    string city, 
                    int productID, 
                    string productName, 
                    string cardType, 
                    int cardNumber, 
                    string csvNumber, 
                    string cardName, 
                    int expiryDay, 
                    int expiryMonth, 
                    int expiryYear, 
                    string billingAddress, 
                    string billingCity, 
                    string billingZip, 
                    int billingCountryID, 
                    string domainUserID, 
                    string domainUserLink, 
                    string domainName, 
                    string gender, 
                    int birthDay, 
                    int birthMonth, 
                    int birthYear, 
                    string ipAddress, 
                    string SocialRegType, 
                    System.Nullable<int> CampaignID, 
                    char IsSocialRegistration, 
                    string accessKey) {
            VIS.CloudService.VRegisterInfoRequest inValue = new VIS.CloudService.VRegisterInfoRequest();
            inValue.userName = userName;
            inValue.pwd = pwd;
            inValue.companyName = companyName;
            inValue.fullName = fullName;
            inValue.mobile = mobile;
            inValue.phone = phone;
            inValue.emailid = emailid;
            inValue.address = address;
            inValue.countryid = countryid;
            inValue.regionid = regionid;
            inValue.city = city;
            inValue.productID = productID;
            inValue.productName = productName;
            inValue.cardType = cardType;
            inValue.cardNumber = cardNumber;
            inValue.csvNumber = csvNumber;
            inValue.cardName = cardName;
            inValue.expiryDay = expiryDay;
            inValue.expiryMonth = expiryMonth;
            inValue.expiryYear = expiryYear;
            inValue.billingAddress = billingAddress;
            inValue.billingCity = billingCity;
            inValue.billingZip = billingZip;
            inValue.billingCountryID = billingCountryID;
            inValue.domainUserID = domainUserID;
            inValue.domainUserLink = domainUserLink;
            inValue.domainName = domainName;
            inValue.gender = gender;
            inValue.birthDay = birthDay;
            inValue.birthMonth = birthMonth;
            inValue.birthYear = birthYear;
            inValue.ipAddress = ipAddress;
            inValue.SocialRegType = SocialRegType;
            inValue.CampaignID = CampaignID;
            inValue.IsSocialRegistration = IsSocialRegistration;
            inValue.accessKey = accessKey;
            VIS.CloudService.VRegisterInfoResponse retVal = ((VIS.CloudService.ServiceSoap)(this)).VRegisterInfo(inValue);
            return retVal.VRegisterInfoResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<VIS.CloudService.VRegisterInfoResponse> VIS.CloudService.ServiceSoap.VRegisterInfoAsync(VIS.CloudService.VRegisterInfoRequest request) {
            return base.Channel.VRegisterInfoAsync(request);
        }
        
        public System.Threading.Tasks.Task<VIS.CloudService.VRegisterInfoResponse> VRegisterInfoAsync(
                    string userName, 
                    string pwd, 
                    string companyName, 
                    string fullName, 
                    string mobile, 
                    string phone, 
                    string emailid, 
                    string address, 
                    int countryid, 
                    int regionid, 
                    string city, 
                    int productID, 
                    string productName, 
                    string cardType, 
                    int cardNumber, 
                    string csvNumber, 
                    string cardName, 
                    int expiryDay, 
                    int expiryMonth, 
                    int expiryYear, 
                    string billingAddress, 
                    string billingCity, 
                    string billingZip, 
                    int billingCountryID, 
                    string domainUserID, 
                    string domainUserLink, 
                    string domainName, 
                    string gender, 
                    int birthDay, 
                    int birthMonth, 
                    int birthYear, 
                    string ipAddress, 
                    string SocialRegType, 
                    System.Nullable<int> CampaignID, 
                    char IsSocialRegistration, 
                    string accessKey) {
            VIS.CloudService.VRegisterInfoRequest inValue = new VIS.CloudService.VRegisterInfoRequest();
            inValue.userName = userName;
            inValue.pwd = pwd;
            inValue.companyName = companyName;
            inValue.fullName = fullName;
            inValue.mobile = mobile;
            inValue.phone = phone;
            inValue.emailid = emailid;
            inValue.address = address;
            inValue.countryid = countryid;
            inValue.regionid = regionid;
            inValue.city = city;
            inValue.productID = productID;
            inValue.productName = productName;
            inValue.cardType = cardType;
            inValue.cardNumber = cardNumber;
            inValue.csvNumber = csvNumber;
            inValue.cardName = cardName;
            inValue.expiryDay = expiryDay;
            inValue.expiryMonth = expiryMonth;
            inValue.expiryYear = expiryYear;
            inValue.billingAddress = billingAddress;
            inValue.billingCity = billingCity;
            inValue.billingZip = billingZip;
            inValue.billingCountryID = billingCountryID;
            inValue.domainUserID = domainUserID;
            inValue.domainUserLink = domainUserLink;
            inValue.domainName = domainName;
            inValue.gender = gender;
            inValue.birthDay = birthDay;
            inValue.birthMonth = birthMonth;
            inValue.birthYear = birthYear;
            inValue.ipAddress = ipAddress;
            inValue.SocialRegType = SocialRegType;
            inValue.CampaignID = CampaignID;
            inValue.IsSocialRegistration = IsSocialRegistration;
            inValue.accessKey = accessKey;
            return ((VIS.CloudService.ServiceSoap)(this)).VRegisterInfoAsync(inValue);
        }
        
        public VIS.CloudService.ServerInfo GetCustomerServerInfoM1(int A_Asset_ID, string accessKey) {
            return base.Channel.GetCustomerServerInfoM1(A_Asset_ID, accessKey);
        }
        
        public System.Threading.Tasks.Task<VIS.CloudService.ServerInfo> GetCustomerServerInfoM1Async(int A_Asset_ID, string accessKey) {
            return base.Channel.GetCustomerServerInfoM1Async(A_Asset_ID, accessKey);
        }
        
        public VIS.CloudService.ServerInfo GetCustomerServerInfoM2(int tanent_ID, string url, string accessKey) {
            return base.Channel.GetCustomerServerInfoM2(tanent_ID, url, accessKey);
        }
        
        public System.Threading.Tasks.Task<VIS.CloudService.ServerInfo> GetCustomerServerInfoM2Async(int tanent_ID, string url, string accessKey) {
            return base.Channel.GetCustomerServerInfoM2Async(tanent_ID, url, accessKey);
        }
        
        public VIS.CloudService.ServerInfo GetCustomerServerInfoM3(int AD_User_ID, string accessKey) {
            return base.Channel.GetCustomerServerInfoM3(AD_User_ID, accessKey);
        }
        
        public System.Threading.Tasks.Task<VIS.CloudService.ServerInfo> GetCustomerServerInfoM3Async(int AD_User_ID, string accessKey) {
            return base.Channel.GetCustomerServerInfoM3Async(AD_User_ID, accessKey);
        }
        
        public VIS.CloudService.ServerInfo GetCustomerServerInfoM4(string value, string accessKey) {
            return base.Channel.GetCustomerServerInfoM4(value, accessKey);
        }
        
        public System.Threading.Tasks.Task<VIS.CloudService.ServerInfo> GetCustomerServerInfoM4Async(string value, string accessKey) {
            return base.Channel.GetCustomerServerInfoM4Async(value, accessKey);
        }
        
        public string VerifyUserM1(string userKey, string accessKey) {
            return base.Channel.VerifyUserM1(userKey, accessKey);
        }
        
        public System.Threading.Tasks.Task<string> VerifyUserM1Async(string userKey, string accessKey) {
            return base.Channel.VerifyUserM1Async(userKey, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        VIS.CloudService.GetAmountResponse VIS.CloudService.ServiceSoap.GetAmount(VIS.CloudService.GetAmountRequest request) {
            return base.Channel.GetAmount(request);
        }
        
        public System.Nullable<decimal> GetAmount(int m_product_id, int user, string accessKey) {
            VIS.CloudService.GetAmountRequest inValue = new VIS.CloudService.GetAmountRequest();
            inValue.m_product_id = m_product_id;
            inValue.user = user;
            inValue.accessKey = accessKey;
            VIS.CloudService.GetAmountResponse retVal = ((VIS.CloudService.ServiceSoap)(this)).GetAmount(inValue);
            return retVal.GetAmountResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<VIS.CloudService.GetAmountResponse> VIS.CloudService.ServiceSoap.GetAmountAsync(VIS.CloudService.GetAmountRequest request) {
            return base.Channel.GetAmountAsync(request);
        }
        
        public System.Threading.Tasks.Task<VIS.CloudService.GetAmountResponse> GetAmountAsync(int m_product_id, int user, string accessKey) {
            VIS.CloudService.GetAmountRequest inValue = new VIS.CloudService.GetAmountRequest();
            inValue.m_product_id = m_product_id;
            inValue.user = user;
            inValue.accessKey = accessKey;
            return ((VIS.CloudService.ServiceSoap)(this)).GetAmountAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        VIS.CloudService.SubscribeProductResponse VIS.CloudService.ServiceSoap.SubscribeProduct(VIS.CloudService.SubscribeProductRequest request) {
            return base.Channel.SubscribeProduct(request);
        }
        
        public string SubscribeProduct(int AD_User_ID, int M_Product_ID, string fileName, System.Nullable<int> backupAfter, string ipaddress, string accessKey) {
            VIS.CloudService.SubscribeProductRequest inValue = new VIS.CloudService.SubscribeProductRequest();
            inValue.AD_User_ID = AD_User_ID;
            inValue.M_Product_ID = M_Product_ID;
            inValue.fileName = fileName;
            inValue.backupAfter = backupAfter;
            inValue.ipaddress = ipaddress;
            inValue.accessKey = accessKey;
            VIS.CloudService.SubscribeProductResponse retVal = ((VIS.CloudService.ServiceSoap)(this)).SubscribeProduct(inValue);
            return retVal.SubscribeProductResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<VIS.CloudService.SubscribeProductResponse> VIS.CloudService.ServiceSoap.SubscribeProductAsync(VIS.CloudService.SubscribeProductRequest request) {
            return base.Channel.SubscribeProductAsync(request);
        }
        
        public System.Threading.Tasks.Task<VIS.CloudService.SubscribeProductResponse> SubscribeProductAsync(int AD_User_ID, int M_Product_ID, string fileName, System.Nullable<int> backupAfter, string ipaddress, string accessKey) {
            VIS.CloudService.SubscribeProductRequest inValue = new VIS.CloudService.SubscribeProductRequest();
            inValue.AD_User_ID = AD_User_ID;
            inValue.M_Product_ID = M_Product_ID;
            inValue.fileName = fileName;
            inValue.backupAfter = backupAfter;
            inValue.ipaddress = ipaddress;
            inValue.accessKey = accessKey;
            return ((VIS.CloudService.ServiceSoap)(this)).SubscribeProductAsync(inValue);
        }
        
        public string UnSubscribeProduct(int AD_User_ID, int M_Product_ID, string accessKey) {
            return base.Channel.UnSubscribeProduct(AD_User_ID, M_Product_ID, accessKey);
        }
        
        public System.Threading.Tasks.Task<string> UnSubscribeProductAsync(int AD_User_ID, int M_Product_ID, string accessKey) {
            return base.Channel.UnSubscribeProductAsync(AD_User_ID, M_Product_ID, accessKey);
        }
        
        public VIS.CloudService.FTPInfo GetFTPInfo(int CS_ZoneMasterServer_ID, int M_Product_ID, string accessKey) {
            return base.Channel.GetFTPInfo(CS_ZoneMasterServer_ID, M_Product_ID, accessKey);
        }
        
        public System.Threading.Tasks.Task<VIS.CloudService.FTPInfo> GetFTPInfoAsync(int CS_ZoneMasterServer_ID, int M_Product_ID, string accessKey) {
            return base.Channel.GetFTPInfoAsync(CS_ZoneMasterServer_ID, M_Product_ID, accessKey);
        }
        
        public string GetAllCountries(string accessKey) {
            return base.Channel.GetAllCountries(accessKey);
        }
        
        public System.Threading.Tasks.Task<string> GetAllCountriesAsync(string accessKey) {
            return base.Channel.GetAllCountriesAsync(accessKey);
        }
        
        public string GetAllCountriesFromMobile(string accessKey) {
            return base.Channel.GetAllCountriesFromMobile(accessKey);
        }
        
        public System.Threading.Tasks.Task<string> GetAllCountriesFromMobileAsync(string accessKey) {
            return base.Channel.GetAllCountriesFromMobileAsync(accessKey);
        }
        
        public VIS.CloudService.AssetInfo GetNewTenant(string zoneCode, string accessKey) {
            return base.Channel.GetNewTenant(zoneCode, accessKey);
        }
        
        public System.Threading.Tasks.Task<VIS.CloudService.AssetInfo> GetNewTenantAsync(string zoneCode, string accessKey) {
            return base.Channel.GetNewTenantAsync(zoneCode, accessKey);
        }
        
        public string GetRelatedProduct(int M_Product_ID, int Ad_user_ID, string SubscriptionType, string accessKey) {
            return base.Channel.GetRelatedProduct(M_Product_ID, Ad_user_ID, SubscriptionType, accessKey);
        }
        
        public System.Threading.Tasks.Task<string> GetRelatedProductAsync(int M_Product_ID, int Ad_user_ID, string SubscriptionType, string accessKey) {
            return base.Channel.GetRelatedProductAsync(M_Product_ID, Ad_user_ID, SubscriptionType, accessKey);
        }
        
        public string GetCustomerAccountDetail(int Ad_User_ID, string accessKey) {
            return base.Channel.GetCustomerAccountDetail(Ad_User_ID, accessKey);
        }
        
        public System.Threading.Tasks.Task<string> GetCustomerAccountDetailAsync(int Ad_User_ID, string accessKey) {
            return base.Channel.GetCustomerAccountDetailAsync(Ad_User_ID, accessKey);
        }
        
        public string GetRelatedProductM1(int AD_User_ID, string accessKey) {
            return base.Channel.GetRelatedProductM1(AD_User_ID, accessKey);
        }
        
        public System.Threading.Tasks.Task<string> GetRelatedProductM1Async(int AD_User_ID, string accessKey) {
            return base.Channel.GetRelatedProductM1Async(AD_User_ID, accessKey);
        }
        
        public string SetCustomerAccountDetail(int Ad_user_id, string cardName, string CSVNumber, int cardNumber, int ExpiryDate, int ExpiryMonth, int ExpiryYear, char cardType, string address, string city, string zip, int Country_id, string accessKey) {
            return base.Channel.SetCustomerAccountDetail(Ad_user_id, cardName, CSVNumber, cardNumber, ExpiryDate, ExpiryMonth, ExpiryYear, cardType, address, city, zip, Country_id, accessKey);
        }
        
        public System.Threading.Tasks.Task<string> SetCustomerAccountDetailAsync(int Ad_user_id, string cardName, string CSVNumber, int cardNumber, int ExpiryDate, int ExpiryMonth, int ExpiryYear, char cardType, string address, string city, string zip, int Country_id, string accessKey) {
            return base.Channel.SetCustomerAccountDetailAsync(Ad_user_id, cardName, CSVNumber, cardNumber, ExpiryDate, ExpiryMonth, ExpiryYear, cardType, address, city, zip, Country_id, accessKey);
        }
        
        public string GetCustomerNotification(int Ad_User_ID, string accessKey) {
            return base.Channel.GetCustomerNotification(Ad_User_ID, accessKey);
        }
        
        public System.Threading.Tasks.Task<string> GetCustomerNotificationAsync(int Ad_User_ID, string accessKey) {
            return base.Channel.GetCustomerNotificationAsync(Ad_User_ID, accessKey);
        }
        
        public string GetCustomerNotificationM1(int Ad_Note_ID, string accessKey) {
            return base.Channel.GetCustomerNotificationM1(Ad_Note_ID, accessKey);
        }
        
        public System.Threading.Tasks.Task<string> GetCustomerNotificationM1Async(int Ad_Note_ID, string accessKey) {
            return base.Channel.GetCustomerNotificationM1Async(Ad_Note_ID, accessKey);
        }
        
        public string AcknowledgeCustomerNotification(int Ad_note_ID, string accessKey) {
            return base.Channel.AcknowledgeCustomerNotification(Ad_note_ID, accessKey);
        }
        
        public System.Threading.Tasks.Task<string> AcknowledgeCustomerNotificationAsync(int Ad_note_ID, string accessKey) {
            return base.Channel.AcknowledgeCustomerNotificationAsync(Ad_note_ID, accessKey);
        }
        
        public string GetCustomerCompanyDetail(int AD_User_ID, string accessKey) {
            return base.Channel.GetCustomerCompanyDetail(AD_User_ID, accessKey);
        }
        
        public System.Threading.Tasks.Task<string> GetCustomerCompanyDetailAsync(int AD_User_ID, string accessKey) {
            return base.Channel.GetCustomerCompanyDetailAsync(AD_User_ID, accessKey);
        }
        
        public string Login(string username, string password, string accessKey) {
            return base.Channel.Login(username, password, accessKey);
        }
        
        public System.Threading.Tasks.Task<string> LoginAsync(string username, string password, string accessKey) {
            return base.Channel.LoginAsync(username, password, accessKey);
        }
        
        public string LoginFromMobile(string username, string password, string accessKey) {
            return base.Channel.LoginFromMobile(username, password, accessKey);
        }
        
        public System.Threading.Tasks.Task<string> LoginFromMobileAsync(string username, string password, string accessKey) {
            return base.Channel.LoginFromMobileAsync(username, password, accessKey);
        }
        
        public string VLogin(string username, string password, string accessKey) {
            return base.Channel.VLogin(username, password, accessKey);
        }
        
        public System.Threading.Tasks.Task<string> VLoginAsync(string username, string password, string accessKey) {
            return base.Channel.VLoginAsync(username, password, accessKey);
        }
        
        public string IsFreeProduct(int Ad_User_ID, string accessKey) {
            return base.Channel.IsFreeProduct(Ad_User_ID, accessKey);
        }
        
        public System.Threading.Tasks.Task<string> IsFreeProductAsync(int Ad_User_ID, string accessKey) {
            return base.Channel.IsFreeProductAsync(Ad_User_ID, accessKey);
        }
        
        public string CheckUserVerifiedM1(int Ad_User_ID, string accessKey) {
            return base.Channel.CheckUserVerifiedM1(Ad_User_ID, accessKey);
        }
        
        public System.Threading.Tasks.Task<string> CheckUserVerifiedM1Async(int Ad_User_ID, string accessKey) {
            return base.Channel.CheckUserVerifiedM1Async(Ad_User_ID, accessKey);
        }
        
        public string CheckUserVerifiedM2(string username, string password, string accessKey) {
            return base.Channel.CheckUserVerifiedM2(username, password, accessKey);
        }
        
        public System.Threading.Tasks.Task<string> CheckUserVerifiedM2Async(string username, string password, string accessKey) {
            return base.Channel.CheckUserVerifiedM2Async(username, password, accessKey);
        }
        
        public string GetCustomerDBBackUp(int Ad_User_ID, string accessKey) {
            return base.Channel.GetCustomerDBBackUp(Ad_User_ID, accessKey);
        }
        
        public System.Threading.Tasks.Task<string> GetCustomerDBBackUpAsync(int Ad_User_ID, string accessKey) {
            return base.Channel.GetCustomerDBBackUpAsync(Ad_User_ID, accessKey);
        }
        
        public string RestoreDBBackUp(int Ad_User_ID, string fileName, string ipaddress, string accessKey) {
            return base.Channel.RestoreDBBackUp(Ad_User_ID, fileName, ipaddress, accessKey);
        }
        
        public System.Threading.Tasks.Task<string> RestoreDBBackUpAsync(int Ad_User_ID, string fileName, string ipaddress, string accessKey) {
            return base.Channel.RestoreDBBackUpAsync(Ad_User_ID, fileName, ipaddress, accessKey);
        }
        
        public string VerifyUserM2(int Ad_user_ID, string accessKey) {
            return base.Channel.VerifyUserM2(Ad_user_ID, accessKey);
        }
        
        public System.Threading.Tasks.Task<string> VerifyUserM2Async(int Ad_user_ID, string accessKey) {
            return base.Channel.VerifyUserM2Async(Ad_user_ID, accessKey);
        }
        
        public string VerifyUserM3(string userName, string password, string accessKey) {
            return base.Channel.VerifyUserM3(userName, password, accessKey);
        }
        
        public System.Threading.Tasks.Task<string> VerifyUserM3Async(string userName, string password, string accessKey) {
            return base.Channel.VerifyUserM3Async(userName, password, accessKey);
        }
        
        public string VerifyUserM4(string LicenseKey, string accessKey) {
            return base.Channel.VerifyUserM4(LicenseKey, accessKey);
        }
        
        public System.Threading.Tasks.Task<string> VerifyUserM4Async(string LicenseKey, string accessKey) {
            return base.Channel.VerifyUserM4Async(LicenseKey, accessKey);
        }
        
        public string DeleteDBBackUp(int AD_User_ID, string FileName, int R_Request_ID, string ipaddress, string accessKey) {
            return base.Channel.DeleteDBBackUp(AD_User_ID, FileName, R_Request_ID, ipaddress, accessKey);
        }
        
        public System.Threading.Tasks.Task<string> DeleteDBBackUpAsync(int AD_User_ID, string FileName, int R_Request_ID, string ipaddress, string accessKey) {
            return base.Channel.DeleteDBBackUpAsync(AD_User_ID, FileName, R_Request_ID, ipaddress, accessKey);
        }
        
        public string CreateBackUp(int AD_User_ID, string Comment, string ipaddress, string accessKey) {
            return base.Channel.CreateBackUp(AD_User_ID, Comment, ipaddress, accessKey);
        }
        
        public System.Threading.Tasks.Task<string> CreateBackUpAsync(int AD_User_ID, string Comment, string ipaddress, string accessKey) {
            return base.Channel.CreateBackUpAsync(AD_User_ID, Comment, ipaddress, accessKey);
        }
        
        public string ChangeAdminPasswordOnClientERP(string username, string newPassword, int AD_User_ID, int Tenant_ID, int AdminUser_ID, string accessKey) {
            return base.Channel.ChangeAdminPasswordOnClientERP(username, newPassword, AD_User_ID, Tenant_ID, AdminUser_ID, accessKey);
        }
        
        public System.Threading.Tasks.Task<string> ChangeAdminPasswordOnClientERPAsync(string username, string newPassword, int AD_User_ID, int Tenant_ID, int AdminUser_ID, string accessKey) {
            return base.Channel.ChangeAdminPasswordOnClientERPAsync(username, newPassword, AD_User_ID, Tenant_ID, AdminUser_ID, accessKey);
        }
        
        public string GetCustomerZoneCode(int AD_User_ID, string accessKey) {
            return base.Channel.GetCustomerZoneCode(AD_User_ID, accessKey);
        }
        
        public System.Threading.Tasks.Task<string> GetCustomerZoneCodeAsync(int AD_User_ID, string accessKey) {
            return base.Channel.GetCustomerZoneCodeAsync(AD_User_ID, accessKey);
        }
        
        public string ForgetPassword(string UserEmail, int AD_User_ID, int AdminUser_ID, string accessKey) {
            return base.Channel.ForgetPassword(UserEmail, AD_User_ID, AdminUser_ID, accessKey);
        }
        
        public System.Threading.Tasks.Task<string> ForgetPasswordAsync(string UserEmail, int AD_User_ID, int AdminUser_ID, string accessKey) {
            return base.Channel.ForgetPasswordAsync(UserEmail, AD_User_ID, AdminUser_ID, accessKey);
        }
        
        public string VForgetPassword(string UserEmail, int AD_User_ID, int AdminUser_ID, string accessKey) {
            return base.Channel.VForgetPassword(UserEmail, AD_User_ID, AdminUser_ID, accessKey);
        }
        
        public System.Threading.Tasks.Task<string> VForgetPasswordAsync(string UserEmail, int AD_User_ID, int AdminUser_ID, string accessKey) {
            return base.Channel.VForgetPasswordAsync(UserEmail, AD_User_ID, AdminUser_ID, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        VIS.CloudService.UpdateAssetResponse VIS.CloudService.ServiceSoap.UpdateAsset(VIS.CloudService.UpdateAssetRequest request) {
            return base.Channel.UpdateAsset(request);
        }
        
        public string UpdateAsset(int A_Asset_ID, System.Nullable<bool> isAppServerCreated, System.Nullable<bool> isDBServerCreated, bool ISPSServerCreated, string fileVersion, string accessKey) {
            VIS.CloudService.UpdateAssetRequest inValue = new VIS.CloudService.UpdateAssetRequest();
            inValue.A_Asset_ID = A_Asset_ID;
            inValue.isAppServerCreated = isAppServerCreated;
            inValue.isDBServerCreated = isDBServerCreated;
            inValue.ISPSServerCreated = ISPSServerCreated;
            inValue.fileVersion = fileVersion;
            inValue.accessKey = accessKey;
            VIS.CloudService.UpdateAssetResponse retVal = ((VIS.CloudService.ServiceSoap)(this)).UpdateAsset(inValue);
            return retVal.UpdateAssetResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<VIS.CloudService.UpdateAssetResponse> VIS.CloudService.ServiceSoap.UpdateAssetAsync(VIS.CloudService.UpdateAssetRequest request) {
            return base.Channel.UpdateAssetAsync(request);
        }
        
        public System.Threading.Tasks.Task<VIS.CloudService.UpdateAssetResponse> UpdateAssetAsync(int A_Asset_ID, System.Nullable<bool> isAppServerCreated, System.Nullable<bool> isDBServerCreated, bool ISPSServerCreated, string fileVersion, string accessKey) {
            VIS.CloudService.UpdateAssetRequest inValue = new VIS.CloudService.UpdateAssetRequest();
            inValue.A_Asset_ID = A_Asset_ID;
            inValue.isAppServerCreated = isAppServerCreated;
            inValue.isDBServerCreated = isDBServerCreated;
            inValue.ISPSServerCreated = ISPSServerCreated;
            inValue.fileVersion = fileVersion;
            inValue.accessKey = accessKey;
            return ((VIS.CloudService.ServiceSoap)(this)).UpdateAssetAsync(inValue);
        }
        
        public string GetAllCurrency(string accessKey) {
            return base.Channel.GetAllCurrency(accessKey);
        }
        
        public System.Threading.Tasks.Task<string> GetAllCurrencyAsync(string accessKey) {
            return base.Channel.GetAllCurrencyAsync(accessKey);
        }
        
        public string GetAllCurrencyFromMobile(string accessKey) {
            return base.Channel.GetAllCurrencyFromMobile(accessKey);
        }
        
        public System.Threading.Tasks.Task<string> GetAllCurrencyFromMobileAsync(string accessKey) {
            return base.Channel.GetAllCurrencyFromMobileAsync(accessKey);
        }
        
        public string CreateTenant(int A_Asset_ID, string zoneCode, string accessKey) {
            return base.Channel.CreateTenant(A_Asset_ID, zoneCode, accessKey);
        }
        
        public System.Threading.Tasks.Task<string> CreateTenantAsync(int A_Asset_ID, string zoneCode, string accessKey) {
            return base.Channel.CreateTenantAsync(A_Asset_ID, zoneCode, accessKey);
        }
        
        public VIS.CloudService.BackupInfo GetAllDBBackupRequest(string zoneCode, string accessKey) {
            return base.Channel.GetAllDBBackupRequest(zoneCode, accessKey);
        }
        
        public System.Threading.Tasks.Task<VIS.CloudService.BackupInfo> GetAllDBBackupRequestAsync(string zoneCode, string accessKey) {
            return base.Channel.GetAllDBBackupRequestAsync(zoneCode, accessKey);
        }
        
        public string CloseRequest(int R_Request_ID, string accessKey) {
            return base.Channel.CloseRequest(R_Request_ID, accessKey);
        }
        
        public System.Threading.Tasks.Task<string> CloseRequestAsync(int R_Request_ID, string accessKey) {
            return base.Channel.CloseRequestAsync(R_Request_ID, accessKey);
        }
        
        public string FailedRequest(int R_Request_ID, string accessKey) {
            return base.Channel.FailedRequest(R_Request_ID, accessKey);
        }
        
        public System.Threading.Tasks.Task<string> FailedRequestAsync(int R_Request_ID, string accessKey) {
            return base.Channel.FailedRequestAsync(R_Request_ID, accessKey);
        }
        
        public string GetCustomerSpaceM1(int AD_User_ID, string accessKey) {
            return base.Channel.GetCustomerSpaceM1(AD_User_ID, accessKey);
        }
        
        public System.Threading.Tasks.Task<string> GetCustomerSpaceM1Async(int AD_User_ID, string accessKey) {
            return base.Channel.GetCustomerSpaceM1Async(AD_User_ID, accessKey);
        }
        
        public string GetCustomerSpaceM2(int A_Asset_ID, string accessKey) {
            return base.Channel.GetCustomerSpaceM2(A_Asset_ID, accessKey);
        }
        
        public System.Threading.Tasks.Task<string> GetCustomerSpaceM2Async(int A_Asset_ID, string accessKey) {
            return base.Channel.GetCustomerSpaceM2Async(A_Asset_ID, accessKey);
        }
        
        public string SetCustomerSpace(int A_Asset_ID, int ASUsedSpace, int DBSUsedSpace, int PSUsedSpace, int DBBackupSize, string accessKey) {
            return base.Channel.SetCustomerSpace(A_Asset_ID, ASUsedSpace, DBSUsedSpace, PSUsedSpace, DBBackupSize, accessKey);
        }
        
        public System.Threading.Tasks.Task<string> SetCustomerSpaceAsync(int A_Asset_ID, int ASUsedSpace, int DBSUsedSpace, int PSUsedSpace, int DBBackupSize, string accessKey) {
            return base.Channel.SetCustomerSpaceAsync(A_Asset_ID, ASUsedSpace, DBSUsedSpace, PSUsedSpace, DBBackupSize, accessKey);
        }
        
        public VIS.CloudService.BackupInfo GetAllDBDeleteRequest(string zoneCode, string accessKey) {
            return base.Channel.GetAllDBDeleteRequest(zoneCode, accessKey);
        }
        
        public System.Threading.Tasks.Task<VIS.CloudService.BackupInfo> GetAllDBDeleteRequestAsync(string zoneCode, string accessKey) {
            return base.Channel.GetAllDBDeleteRequestAsync(zoneCode, accessKey);
        }
        
        public VIS.CloudService.BackupInfo GetAllDBRestoreRequest(string zoneCode, string accessKey) {
            return base.Channel.GetAllDBRestoreRequest(zoneCode, accessKey);
        }
        
        public System.Threading.Tasks.Task<VIS.CloudService.BackupInfo> GetAllDBRestoreRequestAsync(string zoneCode, string accessKey) {
            return base.Channel.GetAllDBRestoreRequestAsync(zoneCode, accessKey);
        }
        
        public string CreateCustomerUser(string url, int adminUserID, string adminUserName, int tenantID, int count, bool isLoginUser, bool isDeleted, string accessKey) {
            return base.Channel.CreateCustomerUser(url, adminUserID, adminUserName, tenantID, count, isLoginUser, isDeleted, accessKey);
        }
        
        public System.Threading.Tasks.Task<string> CreateCustomerUserAsync(string url, int adminUserID, string adminUserName, int tenantID, int count, bool isLoginUser, bool isDeleted, string accessKey) {
            return base.Channel.CreateCustomerUserAsync(url, adminUserID, adminUserName, tenantID, count, isLoginUser, isDeleted, accessKey);
        }
        
        public string VerifyTenantCreated(int Ad_user_ID, string accessKey) {
            return base.Channel.VerifyTenantCreated(Ad_user_ID, accessKey);
        }
        
        public System.Threading.Tasks.Task<string> VerifyTenantCreatedAsync(int Ad_user_ID, string accessKey) {
            return base.Channel.VerifyTenantCreatedAsync(Ad_user_ID, accessKey);
        }
        
        public string VerifyTenantCreatedFromMobile(int Ad_user_ID, string accessKey) {
            return base.Channel.VerifyTenantCreatedFromMobile(Ad_user_ID, accessKey);
        }
        
        public System.Threading.Tasks.Task<string> VerifyTenantCreatedFromMobileAsync(int Ad_user_ID, string accessKey) {
            return base.Channel.VerifyTenantCreatedFromMobileAsync(Ad_user_ID, accessKey);
        }
        
        public string GetAllZoneMasterServer(string accessKey) {
            return base.Channel.GetAllZoneMasterServer(accessKey);
        }
        
        public System.Threading.Tasks.Task<string> GetAllZoneMasterServerAsync(string accessKey) {
            return base.Channel.GetAllZoneMasterServerAsync(accessKey);
        }
        
        public string GetAllZoneMasterServerFromMobile(string accessKey) {
            return base.Channel.GetAllZoneMasterServerFromMobile(accessKey);
        }
        
        public System.Threading.Tasks.Task<string> GetAllZoneMasterServerFromMobileAsync(string accessKey) {
            return base.Channel.GetAllZoneMasterServerFromMobileAsync(accessKey);
        }
        
        public VIS.CloudService.DBMigrationInfo GetTenantforDBMigration(int AssetID, string zoneCode, string accessKey) {
            return base.Channel.GetTenantforDBMigration(AssetID, zoneCode, accessKey);
        }
        
        public System.Threading.Tasks.Task<VIS.CloudService.DBMigrationInfo> GetTenantforDBMigrationAsync(int AssetID, string zoneCode, string accessKey) {
            return base.Channel.GetTenantforDBMigrationAsync(AssetID, zoneCode, accessKey);
        }
        
        public VIS.CloudService.MigrationRecordAndServerInfo GetTenantforDBMigrationWithServerInfo(int AssetID, string zoneCode, string accessKey) {
            return base.Channel.GetTenantforDBMigrationWithServerInfo(AssetID, zoneCode, accessKey);
        }
        
        public System.Threading.Tasks.Task<VIS.CloudService.MigrationRecordAndServerInfo> GetTenantforDBMigrationWithServerInfoAsync(int AssetID, string zoneCode, string accessKey) {
            return base.Channel.GetTenantforDBMigrationWithServerInfoAsync(AssetID, zoneCode, accessKey);
        }
        
        public string SetDBTempMigrationInProcess(int tenantDBTempInfoID, char value, string accessKey) {
            return base.Channel.SetDBTempMigrationInProcess(tenantDBTempInfoID, value, accessKey);
        }
        
        public System.Threading.Tasks.Task<string> SetDBTempMigrationInProcessAsync(int tenantDBTempInfoID, char value, string accessKey) {
            return base.Channel.SetDBTempMigrationInProcessAsync(tenantDBTempInfoID, value, accessKey);
        }
        
        public string SetIsDBTempMigrated(int tenantDBTempInfoID, string accessKey) {
            return base.Channel.SetIsDBTempMigrated(tenantDBTempInfoID, accessKey);
        }
        
        public System.Threading.Tasks.Task<string> SetIsDBTempMigratedAsync(int tenantDBTempInfoID, string accessKey) {
            return base.Channel.SetIsDBTempMigratedAsync(tenantDBTempInfoID, accessKey);
        }
        
        public string SetAliseCardNo(int AD_User_ID, string aliseCardNo, string accessKey) {
            return base.Channel.SetAliseCardNo(AD_User_ID, aliseCardNo, accessKey);
        }
        
        public System.Threading.Tasks.Task<string> SetAliseCardNoAsync(int AD_User_ID, string aliseCardNo, string accessKey) {
            return base.Channel.SetAliseCardNoAsync(AD_User_ID, aliseCardNo, accessKey);
        }
        
        public string GetAliseCardNo(int ad_user_id, string accessKey) {
            return base.Channel.GetAliseCardNo(ad_user_id, accessKey);
        }
        
        public System.Threading.Tasks.Task<string> GetAliseCardNoAsync(int ad_user_id, string accessKey) {
            return base.Channel.GetAliseCardNoAsync(ad_user_id, accessKey);
        }
        
        public string SetLastLogin(int tenant_ID, string url, string date, string accessKey) {
            return base.Channel.SetLastLogin(tenant_ID, url, date, accessKey);
        }
        
        public System.Threading.Tasks.Task<string> SetLastLoginAsync(int tenant_ID, string url, string date, string accessKey) {
            return base.Channel.SetLastLoginAsync(tenant_ID, url, date, accessKey);
        }
        
        public string CheckCustomerUserSpaceM1(int A_Asset_ID, string accessKey) {
            return base.Channel.CheckCustomerUserSpaceM1(A_Asset_ID, accessKey);
        }
        
        public System.Threading.Tasks.Task<string> CheckCustomerUserSpaceM1Async(int A_Asset_ID, string accessKey) {
            return base.Channel.CheckCustomerUserSpaceM1Async(A_Asset_ID, accessKey);
        }
        
        public string CheckCustomerUserSpaceM2(int AD_User_ID, string accessKey) {
            return base.Channel.CheckCustomerUserSpaceM2(AD_User_ID, accessKey);
        }
        
        public System.Threading.Tasks.Task<string> CheckCustomerUserSpaceM2Async(int AD_User_ID, string accessKey) {
            return base.Channel.CheckCustomerUserSpaceM2Async(AD_User_ID, accessKey);
        }
        
        public string CheckCustomerUserSpaceM3(string url, string accessKey) {
            return base.Channel.CheckCustomerUserSpaceM3(url, accessKey);
        }
        
        public System.Threading.Tasks.Task<string> CheckCustomerUserSpaceM3Async(string url, string accessKey) {
            return base.Channel.CheckCustomerUserSpaceM3Async(url, accessKey);
        }
        
        public string isAllowedToContinue(string url, string accessKey) {
            return base.Channel.isAllowedToContinue(url, accessKey);
        }
        
        public System.Threading.Tasks.Task<string> isAllowedToContinueAsync(string url, string accessKey) {
            return base.Channel.isAllowedToContinueAsync(url, accessKey);
        }
        
        public string BuyMoreSpace(int AD_user_ID, int Space, string accessKey) {
            return base.Channel.BuyMoreSpace(AD_user_ID, Space, accessKey);
        }
        
        public System.Threading.Tasks.Task<string> BuyMoreSpaceAsync(int AD_user_ID, int Space, string accessKey) {
            return base.Channel.BuyMoreSpaceAsync(AD_user_ID, Space, accessKey);
        }
        
        public string GetBillingInfo(int AD_User_ID, string accessKey) {
            return base.Channel.GetBillingInfo(AD_User_ID, accessKey);
        }
        
        public System.Threading.Tasks.Task<string> GetBillingInfoAsync(int AD_User_ID, string accessKey) {
            return base.Channel.GetBillingInfoAsync(AD_User_ID, accessKey);
        }
        
        public string GetUnBilledInfo(int AD_User_ID, string accessKey) {
            return base.Channel.GetUnBilledInfo(AD_User_ID, accessKey);
        }
        
        public System.Threading.Tasks.Task<string> GetUnBilledInfoAsync(int AD_User_ID, string accessKey) {
            return base.Channel.GetUnBilledInfoAsync(AD_User_ID, accessKey);
        }
        
        public VIS.CloudService.DNSInfo GetAllTenantforDNS(string zoneCode, string accessKey) {
            return base.Channel.GetAllTenantforDNS(zoneCode, accessKey);
        }
        
        public System.Threading.Tasks.Task<VIS.CloudService.DNSInfo> GetAllTenantforDNSAsync(string zoneCode, string accessKey) {
            return base.Channel.GetAllTenantforDNSAsync(zoneCode, accessKey);
        }
        
        public string UpdateDNSStatus(int A_Asset_ID, string serverType, string accessKey) {
            return base.Channel.UpdateDNSStatus(A_Asset_ID, serverType, accessKey);
        }
        
        public System.Threading.Tasks.Task<string> UpdateDNSStatusAsync(int A_Asset_ID, string serverType, string accessKey) {
            return base.Channel.UpdateDNSStatusAsync(A_Asset_ID, serverType, accessKey);
        }
        
        public string UpdateCustomerSpace(string zoneCode, string accessKey) {
            return base.Channel.UpdateCustomerSpace(zoneCode, accessKey);
        }
        
        public System.Threading.Tasks.Task<string> UpdateCustomerSpaceAsync(string zoneCode, string accessKey) {
            return base.Channel.UpdateCustomerSpaceAsync(zoneCode, accessKey);
        }
        
        public string ScheduleBackup(int numberOfDay, int AD_User_ID, string ipaddress, string accessKey) {
            return base.Channel.ScheduleBackup(numberOfDay, AD_User_ID, ipaddress, accessKey);
        }
        
        public System.Threading.Tasks.Task<string> ScheduleBackupAsync(int numberOfDay, int AD_User_ID, string ipaddress, string accessKey) {
            return base.Channel.ScheduleBackupAsync(numberOfDay, AD_User_ID, ipaddress, accessKey);
        }
        
        public string SetCustomerPersonalDetail(int AD_User_ID, string fullName, string userName, string email, string companyName, string mobile, string city, string accessKey) {
            return base.Channel.SetCustomerPersonalDetail(AD_User_ID, fullName, userName, email, companyName, mobile, city, accessKey);
        }
        
        public System.Threading.Tasks.Task<string> SetCustomerPersonalDetailAsync(int AD_User_ID, string fullName, string userName, string email, string companyName, string mobile, string city, string accessKey) {
            return base.Channel.SetCustomerPersonalDetailAsync(AD_User_ID, fullName, userName, email, companyName, mobile, city, accessKey);
        }
        
        public string GetCustomerPersonalDetail(int AD_User_ID, string accessKey) {
            return base.Channel.GetCustomerPersonalDetail(AD_User_ID, accessKey);
        }
        
        public System.Threading.Tasks.Task<string> GetCustomerPersonalDetailAsync(int AD_User_ID, string accessKey) {
            return base.Channel.GetCustomerPersonalDetailAsync(AD_User_ID, accessKey);
        }
        
        public string GetCustomerBillingSummary(int AD_User_ID, string accessKey) {
            return base.Channel.GetCustomerBillingSummary(AD_User_ID, accessKey);
        }
        
        public System.Threading.Tasks.Task<string> GetCustomerBillingSummaryAsync(int AD_User_ID, string accessKey) {
            return base.Channel.GetCustomerBillingSummaryAsync(AD_User_ID, accessKey);
        }
    }
}
