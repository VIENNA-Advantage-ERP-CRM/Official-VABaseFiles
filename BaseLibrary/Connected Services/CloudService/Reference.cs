//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BaseLibrary.CloudService {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CloudService.ServiceSoap")]
    public interface ServiceSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetNews", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetNews(string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetNews", ReplyAction="*")]
        System.IAsyncResult BeginGetNews(string accessKey, System.AsyncCallback callback, object asyncState);
        
        string EndGetNews(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCustomerOpenTickets", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetCustomerOpenTickets(int Ad_user_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetCustomerOpenTickets", ReplyAction="*")]
        System.IAsyncResult BeginGetCustomerOpenTickets(int Ad_user_ID, string accessKey, System.AsyncCallback callback, object asyncState);
        
        string EndGetCustomerOpenTickets(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPartnerLeads", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetPartnerLeads(int Ad_User_ID, int CountryID, int statusID, string orderBy, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetPartnerLeads", ReplyAction="*")]
        System.IAsyncResult BeginGetPartnerLeads(int Ad_User_ID, int CountryID, int statusID, string orderBy, string accessKey, System.AsyncCallback callback, object asyncState);
        
        string EndGetPartnerLeads(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PartnerLogin", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string PartnerLogin(string username, string password, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/PartnerLogin", ReplyAction="*")]
        System.IAsyncResult BeginPartnerLogin(string username, string password, string accessKey, System.AsyncCallback callback, object asyncState);
        
        string EndPartnerLogin(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetDetailedCustomer", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetDetailedCustomer(int Ad_user_ID, string orderBy, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetDetailedCustomer", ReplyAction="*")]
        System.IAsyncResult BeginGetDetailedCustomer(int Ad_user_ID, string orderBy, string accessKey, System.AsyncCallback callback, object asyncState);
        
        string EndGetDetailedCustomer(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCustomerProspectList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetCustomerProspectList(int Ad_user_ID, string orderBy, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetCustomerProspectList", ReplyAction="*")]
        System.IAsyncResult BeginGetCustomerProspectList(int Ad_user_ID, string orderBy, string accessKey, System.AsyncCallback callback, object asyncState);
        
        string EndGetCustomerProspectList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPartnerRecentTickets", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetPartnerRecentTickets(int Ad_user_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetPartnerRecentTickets", ReplyAction="*")]
        System.IAsyncResult BeginGetPartnerRecentTickets(int Ad_user_ID, string accessKey, System.AsyncCallback callback, object asyncState);
        
        string EndGetPartnerRecentTickets(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SetCustomerAssociationWithPartner", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SetCustomerAssociationWithPartner(int R_Request_ID, string Action, string Remarks, int AD_User_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/SetCustomerAssociationWithPartner", ReplyAction="*")]
        System.IAsyncResult BeginSetCustomerAssociationWithPartner(int R_Request_ID, string Action, string Remarks, int AD_User_ID, string accessKey, System.AsyncCallback callback, object asyncState);
        
        string EndSetCustomerAssociationWithPartner(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCustomerBillingDetail", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetCustomerBillingDetail(int Customer_ID, int AD_user_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetCustomerBillingDetail", ReplyAction="*")]
        System.IAsyncResult BeginGetCustomerBillingDetail(int Customer_ID, int AD_user_ID, string accessKey, System.AsyncCallback callback, object asyncState);
        
        string EndGetCustomerBillingDetail(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPartnerLinks", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetPartnerLinks(int PartnerID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetPartnerLinks", ReplyAction="*")]
        System.IAsyncResult BeginGetPartnerLinks(int PartnerID, string accessKey, System.AsyncCallback callback, object asyncState);
        
        string EndGetPartnerLinks(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCustomerDetailedView", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetCustomerDetailedView(int Customer_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetCustomerDetailedView", ReplyAction="*")]
        System.IAsyncResult BeginGetCustomerDetailedView(int Customer_ID, string accessKey, System.AsyncCallback callback, object asyncState);
        
        string EndGetCustomerDetailedView(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetVCustomerDetailsView", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetVCustomerDetailsView(int AD_User_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetVCustomerDetailsView", ReplyAction="*")]
        System.IAsyncResult BeginGetVCustomerDetailsView(int AD_User_ID, string accessKey, System.AsyncCallback callback, object asyncState);
        
        string EndGetVCustomerDetailsView(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetProductPrice", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetProductPrice(string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetProductPrice", ReplyAction="*")]
        System.IAsyncResult BeginGetProductPrice(string accessKey, System.AsyncCallback callback, object asyncState);
        
        string EndGetProductPrice(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetProfessionalProductPrice", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetProfessionalProductPrice(int AD_User_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetProfessionalProductPrice", ReplyAction="*")]
        System.IAsyncResult BeginGetProfessionalProductPrice(int AD_User_ID, string accessKey, System.AsyncCallback callback, object asyncState);
        
        string EndGetProfessionalProductPrice(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetTotalCurrentUser", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetTotalCurrentUser(int AD_User_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetTotalCurrentUser", ReplyAction="*")]
        System.IAsyncResult BeginGetTotalCurrentUser(int AD_User_ID, string accessKey, System.AsyncCallback callback, object asyncState);
        
        string EndGetTotalCurrentUser(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpgradeOrRenewVCustomerSubscription", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string UpgradeOrRenewVCustomerSubscription(int AD_User_ID, int PlanID, string CardType, string NameOnCard, string CardNumber, int ExpiryDay, int ExpiryMonth, int ExpiryYear, int CVNumber, string ipAddress, string TrxID, int NoOfUser, bool IsNew, decimal priceEntered, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/UpgradeOrRenewVCustomerSubscription", ReplyAction="*")]
        System.IAsyncResult BeginUpgradeOrRenewVCustomerSubscription(
                    int AD_User_ID, 
                    int PlanID, 
                    string CardType, 
                    string NameOnCard, 
                    string CardNumber, 
                    int ExpiryDay, 
                    int ExpiryMonth, 
                    int ExpiryYear, 
                    int CVNumber, 
                    string ipAddress, 
                    string TrxID, 
                    int NoOfUser, 
                    bool IsNew, 
                    decimal priceEntered, 
                    string accessKey, 
                    System.AsyncCallback callback, 
                    object asyncState);
        
        string EndUpgradeOrRenewVCustomerSubscription(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPartnerDetailsView", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetPartnerDetailsView(int Partner_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetPartnerDetailsView", ReplyAction="*")]
        System.IAsyncResult BeginGetPartnerDetailsView(int Partner_ID, string accessKey, System.AsyncCallback callback, object asyncState);
        
        string EndGetPartnerDetailsView(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AddNewLinkofPartner", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string AddNewLinkofPartner(int partnerID, string username, string password, string url, string description, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/AddNewLinkofPartner", ReplyAction="*")]
        System.IAsyncResult BeginAddNewLinkofPartner(int partnerID, string username, string password, string url, string description, string accessKey, System.AsyncCallback callback, object asyncState);
        
        string EndAddNewLinkofPartner(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetDetailsViewPartnerSubscription", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetDetailsViewPartnerSubscription(int PartnerID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetDetailsViewPartnerSubscription", ReplyAction="*")]
        System.IAsyncResult BeginGetDetailsViewPartnerSubscription(int PartnerID, string accessKey, System.AsyncCallback callback, object asyncState);
        
        string EndGetDetailsViewPartnerSubscription(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetDetailsViewCustomerSubscription", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetDetailsViewCustomerSubscription(int AD_User_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetDetailsViewCustomerSubscription", ReplyAction="*")]
        System.IAsyncResult BeginGetDetailsViewCustomerSubscription(int AD_User_ID, string accessKey, System.AsyncCallback callback, object asyncState);
        
        string EndGetDetailsViewCustomerSubscription(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpgradeOrRenewSubscription", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string UpgradeOrRenewSubscription(int AD_User_ID, int PlanID, string CardType, string NameOnCard, string CardNumber, int ExpiryDay, int ExpiryMonth, int ExpiryYear, int CVNumber, string TrxID, string ipAddress, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/UpgradeOrRenewSubscription", ReplyAction="*")]
        System.IAsyncResult BeginUpgradeOrRenewSubscription(int AD_User_ID, int PlanID, string CardType, string NameOnCard, string CardNumber, int ExpiryDay, int ExpiryMonth, int ExpiryYear, int CVNumber, string TrxID, string ipAddress, string accessKey, System.AsyncCallback callback, object asyncState);
        
        string EndUpgradeOrRenewSubscription(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPartnerCustomer", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetPartnerCustomer(int AD_User_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetPartnerCustomer", ReplyAction="*")]
        System.IAsyncResult BeginGetPartnerCustomer(int AD_User_ID, string accessKey, System.AsyncCallback callback, object asyncState);
        
        string EndGetPartnerCustomer(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCustomerFilteredTickets", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetCustomerFilteredTickets(int Partner_ID, int CustomerID, int statusID, string orderBy, int pendingDays, bool isforwarded, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetCustomerFilteredTickets", ReplyAction="*")]
        System.IAsyncResult BeginGetCustomerFilteredTickets(int Partner_ID, int CustomerID, int statusID, string orderBy, int pendingDays, bool isforwarded, string accessKey, System.AsyncCallback callback, object asyncState);
        
        string EndGetCustomerFilteredTickets(System.IAsyncResult result);
        
        // CODEGEN: Parameter 'Attachment' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SetForwardTickets", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        BaseLibrary.CloudService.SetForwardTicketsResponse SetForwardTickets(BaseLibrary.CloudService.SetForwardTicketsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/SetForwardTickets", ReplyAction="*")]
        System.IAsyncResult BeginSetForwardTickets(BaseLibrary.CloudService.SetForwardTicketsRequest request, System.AsyncCallback callback, object asyncState);
        
        BaseLibrary.CloudService.SetForwardTicketsResponse EndSetForwardTickets(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPartnerFilteredTickets", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetPartnerFilteredTickets(int AD_User_ID, int StatusID, int PendingDays, string OrderBy, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetPartnerFilteredTickets", ReplyAction="*")]
        System.IAsyncResult BeginGetPartnerFilteredTickets(int AD_User_ID, int StatusID, int PendingDays, string OrderBy, string accessKey, System.AsyncCallback callback, object asyncState);
        
        string EndGetPartnerFilteredTickets(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetLeadStatus", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetLeadStatus(string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetLeadStatus", ReplyAction="*")]
        System.IAsyncResult BeginGetLeadStatus(string accessKey, System.AsyncCallback callback, object asyncState);
        
        string EndGetLeadStatus(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCustomerAddOns", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetCustomerAddOns(int AD_user_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetCustomerAddOns", ReplyAction="*")]
        System.IAsyncResult BeginGetCustomerAddOns(int AD_user_ID, string accessKey, System.AsyncCallback callback, object asyncState);
        
        string EndGetCustomerAddOns(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SetPartnerAccountInformation", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SetPartnerAccountInformation(int AD_User_ID, string Fullname, string Title, string Phone, string Fax, string WebsiteURL, string city, string Address, int CountryID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/SetPartnerAccountInformation", ReplyAction="*")]
        System.IAsyncResult BeginSetPartnerAccountInformation(int AD_User_ID, string Fullname, string Title, string Phone, string Fax, string WebsiteURL, string city, string Address, int CountryID, string accessKey, System.AsyncCallback callback, object asyncState);
        
        string EndSetPartnerAccountInformation(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SetCustomerAccountInformation", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SetCustomerAccountInformation(int AD_User_ID, string Fullname, string Title, string Phone, string Fax, string WebsiteURL, string city, string Address, int CountryID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/SetCustomerAccountInformation", ReplyAction="*")]
        System.IAsyncResult BeginSetCustomerAccountInformation(int AD_User_ID, string Fullname, string Title, string Phone, string Fax, string WebsiteURL, string city, string Address, int CountryID, string accessKey, System.AsyncCallback callback, object asyncState);
        
        string EndSetCustomerAccountInformation(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SetLeadStatus", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SetLeadStatus(int LeadID, int StatusID, string Request, string Comment, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/SetLeadStatus", ReplyAction="*")]
        System.IAsyncResult BeginSetLeadStatus(int LeadID, int StatusID, string Request, string Comment, string accessKey, System.AsyncCallback callback, object asyncState);
        
        string EndSetLeadStatus(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPartnerPlans", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetPartnerPlans(int AD_User_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetPartnerPlans", ReplyAction="*")]
        System.IAsyncResult BeginGetPartnerPlans(int AD_User_ID, string accessKey, System.AsyncCallback callback, object asyncState);
        
        string EndGetPartnerPlans(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPartnerListing", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetPartnerListing(int CountryID, int AD_User_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetPartnerListing", ReplyAction="*")]
        System.IAsyncResult BeginGetPartnerListing(int CountryID, int AD_User_ID, string accessKey, System.AsyncCallback callback, object asyncState);
        
        string EndGetPartnerListing(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPartnerFilteredListing", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetPartnerFilteredListing(int RegionID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetPartnerFilteredListing", ReplyAction="*")]
        System.IAsyncResult BeginGetPartnerFilteredListing(int RegionID, string accessKey, System.AsyncCallback callback, object asyncState);
        
        string EndGetPartnerFilteredListing(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPartnerLeadDetails", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetPartnerLeadDetails(int C_Lead_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetPartnerLeadDetails", ReplyAction="*")]
        System.IAsyncResult BeginGetPartnerLeadDetails(int C_Lead_ID, string accessKey, System.AsyncCallback callback, object asyncState);
        
        string EndGetPartnerLeadDetails(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CancellAssociationRequest", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string CancellAssociationRequest(int R_Request_ID, string Remarks, int AD_User_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/CancellAssociationRequest", ReplyAction="*")]
        System.IAsyncResult BeginCancellAssociationRequest(int R_Request_ID, string Remarks, int AD_User_ID, string accessKey, System.AsyncCallback callback, object asyncState);
        
        string EndCancellAssociationRequest(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeletePartnerLink", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string DeletePartnerLink(int DemoLinkID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/DeletePartnerLink", ReplyAction="*")]
        System.IAsyncResult BeginDeletePartnerLink(int DemoLinkID, string accessKey, System.AsyncCallback callback, object asyncState);
        
        string EndDeletePartnerLink(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/partnerAssociationRequest", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string partnerAssociationRequest(int partner_ID, int AD_user_ID, string remarks, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/partnerAssociationRequest", ReplyAction="*")]
        System.IAsyncResult BeginpartnerAssociationRequest(int partner_ID, int AD_user_ID, string remarks, string accessKey, System.AsyncCallback callback, object asyncState);
        
        string EndpartnerAssociationRequest(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPartnerCountries", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetPartnerCountries(string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetPartnerCountries", ReplyAction="*")]
        System.IAsyncResult BeginGetPartnerCountries(string accessKey, System.AsyncCallback callback, object asyncState);
        
        string EndGetPartnerCountries(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAssociatedSP", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetAssociatedSP(int AD_User_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetAssociatedSP", ReplyAction="*")]
        System.IAsyncResult BeginGetAssociatedSP(int AD_User_ID, string accessKey, System.AsyncCallback callback, object asyncState);
        
        string EndGetAssociatedSP(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Aboutvienna", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        BaseLibrary.CloudService.AboutUs Aboutvienna(string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/Aboutvienna", ReplyAction="*")]
        System.IAsyncResult BeginAboutvienna(string accessKey, System.AsyncCallback callback, object asyncState);
        
        BaseLibrary.CloudService.AboutUs EndAboutvienna(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetSupportTicketStatus", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetSupportTicketStatus(string AccessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetSupportTicketStatus", ReplyAction="*")]
        System.IAsyncResult BeginGetSupportTicketStatus(string AccessKey, System.AsyncCallback callback, object asyncState);
        
        string EndGetSupportTicketStatus(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCustomerStatusSupportTicket", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetCustomerStatusSupportTicket(int r_status_id, int ad_user_id, string orderby, string AccessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetCustomerStatusSupportTicket", ReplyAction="*")]
        System.IAsyncResult BeginGetCustomerStatusSupportTicket(int r_status_id, int ad_user_id, string orderby, string AccessKey, System.AsyncCallback callback, object asyncState);
        
        string EndGetCustomerStatusSupportTicket(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCustomerSupportTickets", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetCustomerSupportTickets(int ad_user_id, string AccessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetCustomerSupportTickets", ReplyAction="*")]
        System.IAsyncResult BeginGetCustomerSupportTickets(int ad_user_id, string AccessKey, System.AsyncCallback callback, object asyncState);
        
        string EndGetCustomerSupportTickets(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCustomerHistoryLines", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetCustomerHistoryLines(int documentNo, string AccessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetCustomerHistoryLines", ReplyAction="*")]
        System.IAsyncResult BeginGetCustomerHistoryLines(int documentNo, string AccessKey, System.AsyncCallback callback, object asyncState);
        
        string EndGetCustomerHistoryLines(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCustomerTicketPriority", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetCustomerTicketPriority(string AccessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetCustomerTicketPriority", ReplyAction="*")]
        System.IAsyncResult BeginGetCustomerTicketPriority(string AccessKey, System.AsyncCallback callback, object asyncState);
        
        string EndGetCustomerTicketPriority(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCustomerTicketRequestType", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetCustomerTicketRequestType(string AccessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetCustomerTicketRequestType", ReplyAction="*")]
        System.IAsyncResult BeginGetCustomerTicketRequestType(string AccessKey, System.AsyncCallback callback, object asyncState);
        
        string EndGetCustomerTicketRequestType(System.IAsyncResult result);
        
        // CODEGEN: Parameter 'file' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SetCustomerNewTicket", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        BaseLibrary.CloudService.SetCustomerNewTicketResponse SetCustomerNewTicket(BaseLibrary.CloudService.SetCustomerNewTicketRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/SetCustomerNewTicket", ReplyAction="*")]
        System.IAsyncResult BeginSetCustomerNewTicket(BaseLibrary.CloudService.SetCustomerNewTicketRequest request, System.AsyncCallback callback, object asyncState);
        
        BaseLibrary.CloudService.SetCustomerNewTicketResponse EndSetCustomerNewTicket(System.IAsyncResult result);
        
        // CODEGEN: Parameter 'file' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SetCustomerTicketHistoryLines", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        BaseLibrary.CloudService.SetCustomerTicketHistoryLinesResponse SetCustomerTicketHistoryLines(BaseLibrary.CloudService.SetCustomerTicketHistoryLinesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/SetCustomerTicketHistoryLines", ReplyAction="*")]
        System.IAsyncResult BeginSetCustomerTicketHistoryLines(BaseLibrary.CloudService.SetCustomerTicketHistoryLinesRequest request, System.AsyncCallback callback, object asyncState);
        
        BaseLibrary.CloudService.SetCustomerTicketHistoryLinesResponse EndSetCustomerTicketHistoryLines(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCustomerTicketDetails", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetCustomerTicketDetails(int DocNo, string AccessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetCustomerTicketDetails", ReplyAction="*")]
        System.IAsyncResult BeginGetCustomerTicketDetails(int DocNo, string AccessKey, System.AsyncCallback callback, object asyncState);
        
        string EndGetCustomerTicketDetails(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SetDBRestore", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SetDBRestore(int A_Asset_ID, char value, string AccessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/SetDBRestore", ReplyAction="*")]
        System.IAsyncResult BeginSetDBRestore(int A_Asset_ID, char value, string AccessKey, System.AsyncCallback callback, object asyncState);
        
        string EndSetDBRestore(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetVUnBilledInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetVUnBilledInfo(int AD_User_ID, string AccessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetVUnBilledInfo", ReplyAction="*")]
        System.IAsyncResult BeginGetVUnBilledInfo(int AD_User_ID, string AccessKey, System.AsyncCallback callback, object asyncState);
        
        string EndGetVUnBilledInfo(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetVCustomerBillingSummary", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetVCustomerBillingSummary(int AD_User_ID, string AccessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetVCustomerBillingSummary", ReplyAction="*")]
        System.IAsyncResult BeginGetVCustomerBillingSummary(int AD_User_ID, string AccessKey, System.AsyncCallback callback, object asyncState);
        
        string EndGetVCustomerBillingSummary(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetVBillingInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetVBillingInfo(int AD_User_ID, string AccessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetVBillingInfo", ReplyAction="*")]
        System.IAsyncResult BeginGetVBillingInfo(int AD_User_ID, string AccessKey, System.AsyncCallback callback, object asyncState);
        
        string EndGetVBillingInfo(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SetLead", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SetLead(
                    string CompanyName, 
                    string name, 
                    string title, 
                    string email, 
                    string phone, 
                    string web_url, 
                    int no_of_emp, 
                    int c_Currency_id, 
                    int r_source_id, 
                    int industry_ID, 
                    string city, 
                    int country_ID, 
                    string cur_solution, 
                    string pur_timeline, 
                    string comments, 
                    string year_sell_erp, 
                    string support, 
                    int bpgroup_ID, 
                    int C_Campaign_ID, 
                    int R_STATUS_ID, 
                    int C_Region_ID, 
                    int CreatedBy, 
                    int salesrep_id, 
                    int ad_org_id, 
                    int ad_client_id, 
                    int UpdatedBy, 
                    string AccessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/SetLead", ReplyAction="*")]
        System.IAsyncResult BeginSetLead(
                    string CompanyName, 
                    string name, 
                    string title, 
                    string email, 
                    string phone, 
                    string web_url, 
                    int no_of_emp, 
                    int c_Currency_id, 
                    int r_source_id, 
                    int industry_ID, 
                    string city, 
                    int country_ID, 
                    string cur_solution, 
                    string pur_timeline, 
                    string comments, 
                    string year_sell_erp, 
                    string support, 
                    int bpgroup_ID, 
                    int C_Campaign_ID, 
                    int R_STATUS_ID, 
                    int C_Region_ID, 
                    int CreatedBy, 
                    int salesrep_id, 
                    int ad_org_id, 
                    int ad_client_id, 
                    int UpdatedBy, 
                    string AccessKey, 
                    System.AsyncCallback callback, 
                    object asyncState);
        
        string EndSetLead(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetTopicInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetTopicInfo(out string error, string url, bool isInitConfig, string langCode, string searchText, string option);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetTopicInfo", ReplyAction="*")]
        System.IAsyncResult BeginGetTopicInfo(string url, bool isInitConfig, string langCode, string searchText, string option, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndGetTopicInfo(out string error, System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetInstruction", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetInstruction(out string error, int K_TopicInfo_ID, string langCode, string optional);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetInstruction", ReplyAction="*")]
        System.IAsyncResult BeginGetInstruction(int K_TopicInfo_ID, string langCode, string optional, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndGetInstruction(out string error, System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/serverInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string serverInfo();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/serverInfo", ReplyAction="*")]
        System.IAsyncResult BeginserverInfo(System.AsyncCallback callback, object asyncState);
        
        string EndserverInfo(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetOldIncomleteDB", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        BaseLibrary.CloudService.InCompleteDBInfo GetOldIncomleteDB(string ZoneCode, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetOldIncomleteDB", ReplyAction="*")]
        System.IAsyncResult BeginGetOldIncomleteDB(string ZoneCode, string accessKey, System.AsyncCallback callback, object asyncState);
        
        BaseLibrary.CloudService.InCompleteDBInfo EndGetOldIncomleteDB(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeleteDBEntry", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool DeleteDBEntry(int databaseID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/DeleteDBEntry", ReplyAction="*")]
        System.IAsyncResult BeginDeleteDBEntry(int databaseID, string accessKey, System.AsyncCallback callback, object asyncState);
        
        bool EndDeleteDBEntry(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAssetNotInUse", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        BaseLibrary.CloudService.AssetNotInUse[] GetAssetNotInUse(string zoneCode, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetAssetNotInUse", ReplyAction="*")]
        System.IAsyncResult BeginGetAssetNotInUse(string zoneCode, string accessKey, System.AsyncCallback callback, object asyncState);
        
        BaseLibrary.CloudService.AssetNotInUse[] EndGetAssetNotInUse(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SendNotice", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SendNotice(int[] A_Asset_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/SendNotice", ReplyAction="*")]
        System.IAsyncResult BeginSendNotice(int[] A_Asset_ID, string accessKey, System.AsyncCallback callback, object asyncState);
        
        string EndSendNotice(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SendReminderExpMail", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SendReminderExpMail(string RemindLoginAskExpdays, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/SendReminderExpMail", ReplyAction="*")]
        System.IAsyncResult BeginSendReminderExpMail(string RemindLoginAskExpdays, string accessKey, System.AsyncCallback callback, object asyncState);
        
        string EndSendReminderExpMail(System.IAsyncResult result);
        
        // CODEGEN: Parameter 'DownloadFileResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DownloadFile", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        BaseLibrary.CloudService.DownloadFileResponse DownloadFile(BaseLibrary.CloudService.DownloadFileRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/DownloadFile", ReplyAction="*")]
        System.IAsyncResult BeginDownloadFile(BaseLibrary.CloudService.DownloadFileRequest request, System.AsyncCallback callback, object asyncState);
        
        BaseLibrary.CloudService.DownloadFileResponse EndDownloadFile(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CheckUserFiles", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string CheckUserFiles(int UserID, string licenceKey, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/CheckUserFiles", ReplyAction="*")]
        System.IAsyncResult BeginCheckUserFiles(int UserID, string licenceKey, string accessKey, System.AsyncCallback callback, object asyncState);
        
        string EndCheckUserFiles(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCurrentRunningTenant", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetCurrentRunningTenant(string zoneCode, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetCurrentRunningTenant", ReplyAction="*")]
        System.IAsyncResult BeginGetCurrentRunningTenant(string zoneCode, string accessKey, System.AsyncCallback callback, object asyncState);
        
        string EndGetCurrentRunningTenant(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ModuleInstallationRequest", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string ModuleInstallationRequest(int AD_User_ID, int AD_ModuleInfo_ID, string ipAddress, int[] clients, string[] languages, string versionNo, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ModuleInstallationRequest", ReplyAction="*")]
        System.IAsyncResult BeginModuleInstallationRequest(int AD_User_ID, int AD_ModuleInfo_ID, string ipAddress, int[] clients, string[] languages, string versionNo, string accessKey, System.AsyncCallback callback, object asyncState);
        
        string EndModuleInstallationRequest(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetRequestToInstallModule", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        BaseLibrary.CloudService.RequestedModuleInfo[] GetRequestToInstallModule(string ZoneCode, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetRequestToInstallModule", ReplyAction="*")]
        System.IAsyncResult BeginGetRequestToInstallModule(string ZoneCode, string accessKey, System.AsyncCallback callback, object asyncState);
        
        BaseLibrary.CloudService.RequestedModuleInfo[] EndGetRequestToInstallModule(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCustomerPServerInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        BaseLibrary.CloudService.CustomerPServerInfo GetCustomerPServerInfo(string ZoneCode, int A_Asset_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetCustomerPServerInfo", ReplyAction="*")]
        System.IAsyncResult BeginGetCustomerPServerInfo(string ZoneCode, int A_Asset_ID, string accessKey, System.AsyncCallback callback, object asyncState);
        
        BaseLibrary.CloudService.CustomerPServerInfo EndGetCustomerPServerInfo(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetSubscriptionDays", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetSubscriptionDays(string url, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetSubscriptionDays", ReplyAction="*")]
        System.IAsyncResult BeginGetSubscriptionDays(string url, string accessKey, System.AsyncCallback callback, object asyncState);
        
        string EndGetSubscriptionDays(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PackageEntryIntoItemMasterTest", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void PackageEntryIntoItemMasterTest(string pdata);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/PackageEntryIntoItemMasterTest", ReplyAction="*")]
        System.IAsyncResult BeginPackageEntryIntoItemMasterTest(string pdata, System.AsyncCallback callback, object asyncState);
        
        void EndPackageEntryIntoItemMasterTest(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PackageEntryIntoItemMaster", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool PackageEntryIntoItemMaster(string pdata);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/PackageEntryIntoItemMaster", ReplyAction="*")]
        System.IAsyncResult BeginPackageEntryIntoItemMaster(string pdata, System.AsyncCallback callback, object asyncState);
        
        bool EndPackageEntryIntoItemMaster(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AuthenticateHardware", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool AuthenticateHardware(BaseLibrary.CloudService.ConfigurationData cd);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/AuthenticateHardware", ReplyAction="*")]
        System.IAsyncResult BeginAuthenticateHardware(BaseLibrary.CloudService.ConfigurationData cd, System.AsyncCallback callback, object asyncState);
        
        bool EndAuthenticateHardware(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IsHardwareActivated", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool IsHardwareActivated(string o, string s);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IsHardwareActivated", ReplyAction="*")]
        System.IAsyncResult BeginIsHardwareActivated(string o, string s, System.AsyncCallback callback, object asyncState);
        
        bool EndIsHardwareActivated(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SOTCSetting", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SOTCSetting(string sotcdata);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/SOTCSetting", ReplyAction="*")]
        System.IAsyncResult BeginSOTCSetting(string sotcdata, System.AsyncCallback callback, object asyncState);
        
        string EndSOTCSetting(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SK", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SK(BaseLibrary.CloudService.ConfigurationData cd);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/SK", ReplyAction="*")]
        System.IAsyncResult BeginSK(BaseLibrary.CloudService.ConfigurationData cd, System.AsyncCallback callback, object asyncState);
        
        string EndSK(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CreadientialsWork", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string CreadientialsWork(string sotcdata);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/CreadientialsWork", ReplyAction="*")]
        System.IAsyncResult BeginCreadientialsWork(string sotcdata, System.AsyncCallback callback, object asyncState);
        
        string EndCreadientialsWork(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SavePrinterList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SavePrinterList(string sotcdata);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/SavePrinterList", ReplyAction="*")]
        System.IAsyncResult BeginSavePrinterList(string sotcdata, System.AsyncCallback callback, object asyncState);
        
        string EndSavePrinterList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPrinterList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetPrinterList(string sotcdata);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetPrinterList", ReplyAction="*")]
        System.IAsyncResult BeginGetPrinterList(string sotcdata, System.AsyncCallback callback, object asyncState);
        
        string EndGetPrinterList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CheckUpdate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string CheckUpdate(string sotcdata);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/CheckUpdate", ReplyAction="*")]
        System.IAsyncResult BeginCheckUpdate(string sotcdata, System.AsyncCallback callback, object asyncState);
        
        string EndCheckUpdate(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetUserUpdateTimeSettings", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void GetUserUpdateTimeSettings(BaseLibrary.CloudService.ConfigurationData cd);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetUserUpdateTimeSettings", ReplyAction="*")]
        System.IAsyncResult BeginGetUserUpdateTimeSettings(BaseLibrary.CloudService.ConfigurationData cd, System.AsyncCallback callback, object asyncState);
        
        void EndGetUserUpdateTimeSettings(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetUserLSSettings", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void GetUserLSSettings(BaseLibrary.CloudService.ConfigurationData cd);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetUserLSSettings", ReplyAction="*")]
        System.IAsyncResult BeginGetUserLSSettings(BaseLibrary.CloudService.ConfigurationData cd, System.AsyncCallback callback, object asyncState);
        
        void EndGetUserLSSettings(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MarkReady", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string MarkReady(string sotcdata);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/MarkReady", ReplyAction="*")]
        System.IAsyncResult BeginMarkReady(string sotcdata, System.AsyncCallback callback, object asyncState);
        
        string EndMarkReady(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InsertUpdateConfig", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool InsertUpdateConfig(BaseLibrary.CloudService.ConfigurationData cd);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/InsertUpdateConfig", ReplyAction="*")]
        System.IAsyncResult BeginInsertUpdateConfig(BaseLibrary.CloudService.ConfigurationData cd, System.AsyncCallback callback, object asyncState);
        
        bool EndInsertUpdateConfig(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/EmailToUser", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void EmailToUser(BaseLibrary.CloudService.ConfigurationData cd);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/EmailToUser", ReplyAction="*")]
        System.IAsyncResult BeginEmailToUser(BaseLibrary.CloudService.ConfigurationData cd, System.AsyncCallback callback, object asyncState);
        
        void EndEmailToUser(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetUserUpdateTimeSettingsDemo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void GetUserUpdateTimeSettingsDemo(string sotcdata);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetUserUpdateTimeSettingsDemo", ReplyAction="*")]
        System.IAsyncResult BeginGetUserUpdateTimeSettingsDemo(string sotcdata, System.AsyncCallback callback, object asyncState);
        
        void EndGetUserUpdateTimeSettingsDemo(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetHardwares", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetHardwares(string hardwaredata);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetHardwares", ReplyAction="*")]
        System.IAsyncResult BeginGetHardwares(string hardwaredata, System.AsyncCallback callback, object asyncState);
        
        string EndGetHardwares(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ActivateUpdateHardware", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string ActivateUpdateHardware(string hardwaredata);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ActivateUpdateHardware", ReplyAction="*")]
        System.IAsyncResult BeginActivateUpdateHardware(string hardwaredata, System.AsyncCallback callback, object asyncState);
        
        string EndActivateUpdateHardware(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetConsoles", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetConsoles(string printerdata);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetConsoles", ReplyAction="*")]
        System.IAsyncResult BeginGetConsoles(string printerdata, System.AsyncCallback callback, object asyncState);
        
        string EndGetConsoles(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetModelBrandDriver", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetModelBrandDriver(string printerdata);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetModelBrandDriver", ReplyAction="*")]
        System.IAsyncResult BeginGetModelBrandDriver(string printerdata, System.AsyncCallback callback, object asyncState);
        
        string EndGetModelBrandDriver(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetSetPrinters", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetSetPrinters(string printerdata);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetSetPrinters", ReplyAction="*")]
        System.IAsyncResult BeginGetSetPrinters(string printerdata, System.AsyncCallback callback, object asyncState);
        
        string EndGetSetPrinters(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPrinters", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetPrinters(string printerdata);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetPrinters", ReplyAction="*")]
        System.IAsyncResult BeginGetPrinters(string printerdata, System.AsyncCallback callback, object asyncState);
        
        string EndGetPrinters(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetSetLocalServers", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetSetLocalServers(string localserverdata);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetSetLocalServers", ReplyAction="*")]
        System.IAsyncResult BeginGetSetLocalServers(string localserverdata, System.AsyncCallback callback, object asyncState);
        
        string EndGetSetLocalServers(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetSetUpdateTimeSettings", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetSetUpdateTimeSettings(string consoledata);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetSetUpdateTimeSettings", ReplyAction="*")]
        System.IAsyncResult BeginGetSetUpdateTimeSettings(string consoledata, System.AsyncCallback callback, object asyncState);
        
        string EndGetSetUpdateTimeSettings(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetSiteInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        BaseLibrary.CloudService.Site[] GetSiteInfo(string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetSiteInfo", ReplyAction="*")]
        System.IAsyncResult BeginGetSiteInfo(string accessKey, System.AsyncCallback callback, object asyncState);
        
        BaseLibrary.CloudService.Site[] EndGetSiteInfo(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetSiteZoneInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        BaseLibrary.CloudService.SiteZone[] GetSiteZoneInfo(string accessKey, int SiteID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetSiteZoneInfo", ReplyAction="*")]
        System.IAsyncResult BeginGetSiteZoneInfo(string accessKey, int SiteID, System.AsyncCallback callback, object asyncState);
        
        BaseLibrary.CloudService.SiteZone[] EndGetSiteZoneInfo(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetSiteProductInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        BaseLibrary.CloudService.SiteProduct[] GetSiteProductInfo(string accessKey, int SiteID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetSiteProductInfo", ReplyAction="*")]
        System.IAsyncResult BeginGetSiteProductInfo(string accessKey, int SiteID, System.AsyncCallback callback, object asyncState);
        
        BaseLibrary.CloudService.SiteProduct[] EndGetSiteProductInfo(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Hello", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Hello(string abc);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/Hello", ReplyAction="*")]
        System.IAsyncResult BeginHello(string abc, System.AsyncCallback callback, object asyncState);
        
        string EndHello(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveCustomerTenentInfoM1", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SaveCustomerTenentInfoM1(string domainName, string tenentName, string orgName, string adminUserName, int currency_ID, int country_ID, string city, int regionID, int AD_User_ID, int CS_ZoneMasterServer_ID, string ipaddress, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/SaveCustomerTenentInfoM1", ReplyAction="*")]
        System.IAsyncResult BeginSaveCustomerTenentInfoM1(string domainName, string tenentName, string orgName, string adminUserName, int currency_ID, int country_ID, string city, int regionID, int AD_User_ID, int CS_ZoneMasterServer_ID, string ipaddress, string accessKey, System.AsyncCallback callback, object asyncState);
        
        string EndSaveCustomerTenentInfoM1(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveCustomerTenentInfoM1fromMobile", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SaveCustomerTenentInfoM1fromMobile(string domainName, string tenentName, string orgName, string adminUserName, int currency_ID, int country_ID, string city, int regionID, int AD_User_ID, int CS_ZoneMasterServer_ID, string ipaddress, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/SaveCustomerTenentInfoM1fromMobile", ReplyAction="*")]
        System.IAsyncResult BeginSaveCustomerTenentInfoM1fromMobile(string domainName, string tenentName, string orgName, string adminUserName, int currency_ID, int country_ID, string city, int regionID, int AD_User_ID, int CS_ZoneMasterServer_ID, string ipaddress, string accessKey, System.AsyncCallback callback, object asyncState);
        
        string EndSaveCustomerTenentInfoM1fromMobile(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveCustomerTenentInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SaveCustomerTenentInfo(string tenentName, string orgName, string adminUserName, int currency_ID, int country_ID, string city, int regionID, int AD_User_ID, int CS_ZoneMasterServer_ID, string ipaddress, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/SaveCustomerTenentInfo", ReplyAction="*")]
        System.IAsyncResult BeginSaveCustomerTenentInfo(string tenentName, string orgName, string adminUserName, int currency_ID, int country_ID, string city, int regionID, int AD_User_ID, int CS_ZoneMasterServer_ID, string ipaddress, string accessKey, System.AsyncCallback callback, object asyncState);
        
        string EndSaveCustomerTenentInfo(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IsDomainExist", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string IsDomainExist(string domainName, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IsDomainExist", ReplyAction="*")]
        System.IAsyncResult BeginIsDomainExist(string domainName, string accessKey, System.AsyncCallback callback, object asyncState);
        
        string EndIsDomainExist(System.IAsyncResult result);
        
        // CODEGEN: Parameter 'Campaign_ID' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/RegisterInfoFromModule", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        BaseLibrary.CloudService.RegisterInfoFromModuleResponse RegisterInfoFromModule(BaseLibrary.CloudService.RegisterInfoFromModuleRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/RegisterInfoFromModule", ReplyAction="*")]
        System.IAsyncResult BeginRegisterInfoFromModule(BaseLibrary.CloudService.RegisterInfoFromModuleRequest request, System.AsyncCallback callback, object asyncState);
        
        BaseLibrary.CloudService.RegisterInfoFromModuleResponse EndRegisterInfoFromModule(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetVideosFromDMS", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetVideosFromDMS(string AD_Client_ID, string AD_User_ID, string C_BPartner_ID, int C_Lead_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetVideosFromDMS", ReplyAction="*")]
        System.IAsyncResult BeginGetVideosFromDMS(string AD_Client_ID, string AD_User_ID, string C_BPartner_ID, int C_Lead_ID, string accessKey, System.AsyncCallback callback, object asyncState);
        
        string EndGetVideosFromDMS(System.IAsyncResult result);
        
        // CODEGEN: Parameter 'countryid' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/RegisterTempInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        BaseLibrary.CloudService.RegisterTempInfoResponse RegisterTempInfo(BaseLibrary.CloudService.RegisterTempInfoRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/RegisterTempInfo", ReplyAction="*")]
        System.IAsyncResult BeginRegisterTempInfo(BaseLibrary.CloudService.RegisterTempInfoRequest request, System.AsyncCallback callback, object asyncState);
        
        BaseLibrary.CloudService.RegisterTempInfoResponse EndRegisterTempInfo(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/RegisterInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string RegisterInfo(
                    string userName, 
                    string pwd, 
                    string companyName, 
                    string fullName, 
                    string mobile, 
                    string phone, 
                    string emailid, 
                    string address, 
                    int countryid, 
                    int regionid, 
                    string city, 
                    int productID, 
                    string productName, 
                    string cardType, 
                    string cardNumber, 
                    string csvNumber, 
                    string cardName, 
                    int expiryDay, 
                    int expiryMonth, 
                    int expiryYear, 
                    string billingAddress, 
                    string billingCity, 
                    string billingZip, 
                    int billingCountryID, 
                    string domainUserID, 
                    string domainUserLink, 
                    string domainName, 
                    string gender, 
                    int birthDay, 
                    int birthMonth, 
                    int birthYear, 
                    string ipAddress, 
                    int Campaign_ID, 
                    string accessKey, 
                    string firstName, 
                    string lastName, 
                    string originFrom);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/RegisterInfo", ReplyAction="*")]
        System.IAsyncResult BeginRegisterInfo(
                    string userName, 
                    string pwd, 
                    string companyName, 
                    string fullName, 
                    string mobile, 
                    string phone, 
                    string emailid, 
                    string address, 
                    int countryid, 
                    int regionid, 
                    string city, 
                    int productID, 
                    string productName, 
                    string cardType, 
                    string cardNumber, 
                    string csvNumber, 
                    string cardName, 
                    int expiryDay, 
                    int expiryMonth, 
                    int expiryYear, 
                    string billingAddress, 
                    string billingCity, 
                    string billingZip, 
                    int billingCountryID, 
                    string domainUserID, 
                    string domainUserLink, 
                    string domainName, 
                    string gender, 
                    int birthDay, 
                    int birthMonth, 
                    int birthYear, 
                    string ipAddress, 
                    int Campaign_ID, 
                    string accessKey, 
                    string firstName, 
                    string lastName, 
                    string originFrom, 
                    System.AsyncCallback callback, 
                    object asyncState);
        
        string EndRegisterInfo(System.IAsyncResult result);
        
        // CODEGEN: Parameter 'countryid' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/VRegisterInfoT", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        BaseLibrary.CloudService.VRegisterInfoTResponse VRegisterInfoT(BaseLibrary.CloudService.VRegisterInfoTRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/VRegisterInfoT", ReplyAction="*")]
        System.IAsyncResult BeginVRegisterInfoT(BaseLibrary.CloudService.VRegisterInfoTRequest request, System.AsyncCallback callback, object asyncState);
        
        BaseLibrary.CloudService.VRegisterInfoTResponse EndVRegisterInfoT(System.IAsyncResult result);
        
        // CODEGEN: Parameter 'CampaignID' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/VRegisterInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        BaseLibrary.CloudService.VRegisterInfoResponse VRegisterInfo(BaseLibrary.CloudService.VRegisterInfoRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/VRegisterInfo", ReplyAction="*")]
        System.IAsyncResult BeginVRegisterInfo(BaseLibrary.CloudService.VRegisterInfoRequest request, System.AsyncCallback callback, object asyncState);
        
        BaseLibrary.CloudService.VRegisterInfoResponse EndVRegisterInfo(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCustomerServerAndFTPInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        BaseLibrary.CloudService.ServerAndFtpInfo GetCustomerServerAndFTPInfo(int A_Asset_ID, int CS_ZoneMasterServer_ID, int M_Product_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetCustomerServerAndFTPInfo", ReplyAction="*")]
        System.IAsyncResult BeginGetCustomerServerAndFTPInfo(int A_Asset_ID, int CS_ZoneMasterServer_ID, int M_Product_ID, string accessKey, System.AsyncCallback callback, object asyncState);
        
        BaseLibrary.CloudService.ServerAndFtpInfo EndGetCustomerServerAndFTPInfo(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCustomerServerInfoM1", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        BaseLibrary.CloudService.ServerInfo GetCustomerServerInfoM1(int A_Asset_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetCustomerServerInfoM1", ReplyAction="*")]
        System.IAsyncResult BeginGetCustomerServerInfoM1(int A_Asset_ID, string accessKey, System.AsyncCallback callback, object asyncState);
        
        BaseLibrary.CloudService.ServerInfo EndGetCustomerServerInfoM1(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCustomerServerInfoM2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        BaseLibrary.CloudService.ServerInfo GetCustomerServerInfoM2(int tanent_ID, string url, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetCustomerServerInfoM2", ReplyAction="*")]
        System.IAsyncResult BeginGetCustomerServerInfoM2(int tanent_ID, string url, string accessKey, System.AsyncCallback callback, object asyncState);
        
        BaseLibrary.CloudService.ServerInfo EndGetCustomerServerInfoM2(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCustomerServerInfoM3", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        BaseLibrary.CloudService.ServerInfo GetCustomerServerInfoM3(int AD_User_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetCustomerServerInfoM3", ReplyAction="*")]
        System.IAsyncResult BeginGetCustomerServerInfoM3(int AD_User_ID, string accessKey, System.AsyncCallback callback, object asyncState);
        
        BaseLibrary.CloudService.ServerInfo EndGetCustomerServerInfoM3(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCustomerServerInfoM4", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        BaseLibrary.CloudService.ServerInfo GetCustomerServerInfoM4(string value, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetCustomerServerInfoM4", ReplyAction="*")]
        System.IAsyncResult BeginGetCustomerServerInfoM4(string value, string accessKey, System.AsyncCallback callback, object asyncState);
        
        BaseLibrary.CloudService.ServerInfo EndGetCustomerServerInfoM4(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/VerifyUserM1", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string VerifyUserM1(string userKey, string accessKey, string originFrom);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/VerifyUserM1", ReplyAction="*")]
        System.IAsyncResult BeginVerifyUserM1(string userKey, string accessKey, string originFrom, System.AsyncCallback callback, object asyncState);
        
        string EndVerifyUserM1(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetUniqueUserKey", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetUniqueUserKey(string EMail, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetUniqueUserKey", ReplyAction="*")]
        System.IAsyncResult BeginGetUniqueUserKey(string EMail, string accessKey, System.AsyncCallback callback, object asyncState);
        
        string EndGetUniqueUserKey(System.IAsyncResult result);
        
        // CODEGEN: Parameter 'GetAmountResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAmount", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        BaseLibrary.CloudService.GetAmountResponse GetAmount(BaseLibrary.CloudService.GetAmountRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetAmount", ReplyAction="*")]
        System.IAsyncResult BeginGetAmount(BaseLibrary.CloudService.GetAmountRequest request, System.AsyncCallback callback, object asyncState);
        
        BaseLibrary.CloudService.GetAmountResponse EndGetAmount(System.IAsyncResult result);
        
        // CODEGEN: Parameter 'backupAfter' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SubscribeProduct", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        BaseLibrary.CloudService.SubscribeProductResponse SubscribeProduct(BaseLibrary.CloudService.SubscribeProductRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/SubscribeProduct", ReplyAction="*")]
        System.IAsyncResult BeginSubscribeProduct(BaseLibrary.CloudService.SubscribeProductRequest request, System.AsyncCallback callback, object asyncState);
        
        BaseLibrary.CloudService.SubscribeProductResponse EndSubscribeProduct(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UnSubscribeProduct", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string UnSubscribeProduct(int AD_User_ID, int M_Product_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/UnSubscribeProduct", ReplyAction="*")]
        System.IAsyncResult BeginUnSubscribeProduct(int AD_User_ID, int M_Product_ID, string accessKey, System.AsyncCallback callback, object asyncState);
        
        string EndUnSubscribeProduct(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetFTPInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        BaseLibrary.CloudService.FTPInfo GetFTPInfo(int CS_ZoneMasterServer_ID, int M_Product_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetFTPInfo", ReplyAction="*")]
        System.IAsyncResult BeginGetFTPInfo(int CS_ZoneMasterServer_ID, int M_Product_ID, string accessKey, System.AsyncCallback callback, object asyncState);
        
        BaseLibrary.CloudService.FTPInfo EndGetFTPInfo(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAllCountries", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetAllCountries(string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetAllCountries", ReplyAction="*")]
        System.IAsyncResult BeginGetAllCountries(string accessKey, System.AsyncCallback callback, object asyncState);
        
        string EndGetAllCountries(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAllCountriesFromMobile", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetAllCountriesFromMobile(string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetAllCountriesFromMobile", ReplyAction="*")]
        System.IAsyncResult BeginGetAllCountriesFromMobile(string accessKey, System.AsyncCallback callback, object asyncState);
        
        string EndGetAllCountriesFromMobile(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetNewTenant", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        BaseLibrary.CloudService.AssetInfo GetNewTenant(string zoneCode, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetNewTenant", ReplyAction="*")]
        System.IAsyncResult BeginGetNewTenant(string zoneCode, string accessKey, System.AsyncCallback callback, object asyncState);
        
        BaseLibrary.CloudService.AssetInfo EndGetNewTenant(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetRelatedProduct", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetRelatedProduct(int M_Product_ID, int Ad_user_ID, string SubscriptionType, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetRelatedProduct", ReplyAction="*")]
        System.IAsyncResult BeginGetRelatedProduct(int M_Product_ID, int Ad_user_ID, string SubscriptionType, string accessKey, System.AsyncCallback callback, object asyncState);
        
        string EndGetRelatedProduct(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCustomerAccountDetail", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetCustomerAccountDetail(int Ad_User_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetCustomerAccountDetail", ReplyAction="*")]
        System.IAsyncResult BeginGetCustomerAccountDetail(int Ad_User_ID, string accessKey, System.AsyncCallback callback, object asyncState);
        
        string EndGetCustomerAccountDetail(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetRelatedProductM1", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetRelatedProductM1(int AD_User_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetRelatedProductM1", ReplyAction="*")]
        System.IAsyncResult BeginGetRelatedProductM1(int AD_User_ID, string accessKey, System.AsyncCallback callback, object asyncState);
        
        string EndGetRelatedProductM1(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SetCustomerAccountDetail", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SetCustomerAccountDetail(int Ad_user_id, string cardName, string CSVNumber, int cardNumber, int ExpiryDate, int ExpiryMonth, int ExpiryYear, char cardType, string address, string city, string zip, int Country_id, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/SetCustomerAccountDetail", ReplyAction="*")]
        System.IAsyncResult BeginSetCustomerAccountDetail(int Ad_user_id, string cardName, string CSVNumber, int cardNumber, int ExpiryDate, int ExpiryMonth, int ExpiryYear, char cardType, string address, string city, string zip, int Country_id, string accessKey, System.AsyncCallback callback, object asyncState);
        
        string EndSetCustomerAccountDetail(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCustomerNotification", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetCustomerNotification(int Ad_User_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetCustomerNotification", ReplyAction="*")]
        System.IAsyncResult BeginGetCustomerNotification(int Ad_User_ID, string accessKey, System.AsyncCallback callback, object asyncState);
        
        string EndGetCustomerNotification(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCustomerNotificationM1", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetCustomerNotificationM1(int Ad_Note_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetCustomerNotificationM1", ReplyAction="*")]
        System.IAsyncResult BeginGetCustomerNotificationM1(int Ad_Note_ID, string accessKey, System.AsyncCallback callback, object asyncState);
        
        string EndGetCustomerNotificationM1(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AcknowledgeCustomerNotification", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string AcknowledgeCustomerNotification(int Ad_note_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/AcknowledgeCustomerNotification", ReplyAction="*")]
        System.IAsyncResult BeginAcknowledgeCustomerNotification(int Ad_note_ID, string accessKey, System.AsyncCallback callback, object asyncState);
        
        string EndAcknowledgeCustomerNotification(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCustomerCompanyDetail", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetCustomerCompanyDetail(int AD_User_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetCustomerCompanyDetail", ReplyAction="*")]
        System.IAsyncResult BeginGetCustomerCompanyDetail(int AD_User_ID, string accessKey, System.AsyncCallback callback, object asyncState);
        
        string EndGetCustomerCompanyDetail(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Login", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Login(string username, string password, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/Login", ReplyAction="*")]
        System.IAsyncResult BeginLogin(string username, string password, string accessKey, System.AsyncCallback callback, object asyncState);
        
        string EndLogin(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/LoginFromMobile", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string LoginFromMobile(string username, string password, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/LoginFromMobile", ReplyAction="*")]
        System.IAsyncResult BeginLoginFromMobile(string username, string password, string accessKey, System.AsyncCallback callback, object asyncState);
        
        string EndLoginFromMobile(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/VLogin", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string VLogin(string username, string password, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/VLogin", ReplyAction="*")]
        System.IAsyncResult BeginVLogin(string username, string password, string accessKey, System.AsyncCallback callback, object asyncState);
        
        string EndVLogin(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IsFreeProduct", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string IsFreeProduct(int Ad_User_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IsFreeProduct", ReplyAction="*")]
        System.IAsyncResult BeginIsFreeProduct(int Ad_User_ID, string accessKey, System.AsyncCallback callback, object asyncState);
        
        string EndIsFreeProduct(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CheckUserVerifiedM1", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string CheckUserVerifiedM1(int Ad_User_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/CheckUserVerifiedM1", ReplyAction="*")]
        System.IAsyncResult BeginCheckUserVerifiedM1(int Ad_User_ID, string accessKey, System.AsyncCallback callback, object asyncState);
        
        string EndCheckUserVerifiedM1(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CheckUserVerifiedM2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string CheckUserVerifiedM2(string username, string password, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/CheckUserVerifiedM2", ReplyAction="*")]
        System.IAsyncResult BeginCheckUserVerifiedM2(string username, string password, string accessKey, System.AsyncCallback callback, object asyncState);
        
        string EndCheckUserVerifiedM2(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCustomerDBBackUp", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetCustomerDBBackUp(int Ad_User_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetCustomerDBBackUp", ReplyAction="*")]
        System.IAsyncResult BeginGetCustomerDBBackUp(int Ad_User_ID, string accessKey, System.AsyncCallback callback, object asyncState);
        
        string EndGetCustomerDBBackUp(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/RestoreDBBackUp", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string RestoreDBBackUp(int Ad_User_ID, string fileName, string ipaddress, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/RestoreDBBackUp", ReplyAction="*")]
        System.IAsyncResult BeginRestoreDBBackUp(int Ad_User_ID, string fileName, string ipaddress, string accessKey, System.AsyncCallback callback, object asyncState);
        
        string EndRestoreDBBackUp(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/VerifyUserM2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string VerifyUserM2(int Ad_user_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/VerifyUserM2", ReplyAction="*")]
        System.IAsyncResult BeginVerifyUserM2(int Ad_user_ID, string accessKey, System.AsyncCallback callback, object asyncState);
        
        string EndVerifyUserM2(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/VerifyUserM3", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string VerifyUserM3(string userName, string password, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/VerifyUserM3", ReplyAction="*")]
        System.IAsyncResult BeginVerifyUserM3(string userName, string password, string accessKey, System.AsyncCallback callback, object asyncState);
        
        string EndVerifyUserM3(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/VerifyUserM4", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string VerifyUserM4(string LicenseKey, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/VerifyUserM4", ReplyAction="*")]
        System.IAsyncResult BeginVerifyUserM4(string LicenseKey, string accessKey, System.AsyncCallback callback, object asyncState);
        
        string EndVerifyUserM4(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeleteDBBackUp", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string DeleteDBBackUp(int AD_User_ID, string FileName, int R_Request_ID, string ipaddress, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/DeleteDBBackUp", ReplyAction="*")]
        System.IAsyncResult BeginDeleteDBBackUp(int AD_User_ID, string FileName, int R_Request_ID, string ipaddress, string accessKey, System.AsyncCallback callback, object asyncState);
        
        string EndDeleteDBBackUp(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CreateBackUp", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string CreateBackUp(int AD_User_ID, string Comment, string ipaddress, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/CreateBackUp", ReplyAction="*")]
        System.IAsyncResult BeginCreateBackUp(int AD_User_ID, string Comment, string ipaddress, string accessKey, System.AsyncCallback callback, object asyncState);
        
        string EndCreateBackUp(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ChangeAdminPasswordOnClientERP", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string ChangeAdminPasswordOnClientERP(string username, string newPassword, int AD_User_ID, int Tenant_ID, int AdminUser_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ChangeAdminPasswordOnClientERP", ReplyAction="*")]
        System.IAsyncResult BeginChangeAdminPasswordOnClientERP(string username, string newPassword, int AD_User_ID, int Tenant_ID, int AdminUser_ID, string accessKey, System.AsyncCallback callback, object asyncState);
        
        string EndChangeAdminPasswordOnClientERP(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCustomerZoneCode", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetCustomerZoneCode(int AD_User_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetCustomerZoneCode", ReplyAction="*")]
        System.IAsyncResult BeginGetCustomerZoneCode(int AD_User_ID, string accessKey, System.AsyncCallback callback, object asyncState);
        
        string EndGetCustomerZoneCode(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ForgetPassword", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string ForgetPassword(string UserEmail, int AD_User_ID, int AdminUser_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ForgetPassword", ReplyAction="*")]
        System.IAsyncResult BeginForgetPassword(string UserEmail, int AD_User_ID, int AdminUser_ID, string accessKey, System.AsyncCallback callback, object asyncState);
        
        string EndForgetPassword(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/VForgetPassword", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string VForgetPassword(string UserEmail, int AD_User_ID, int AdminUser_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/VForgetPassword", ReplyAction="*")]
        System.IAsyncResult BeginVForgetPassword(string UserEmail, int AD_User_ID, int AdminUser_ID, string accessKey, System.AsyncCallback callback, object asyncState);
        
        string EndVForgetPassword(System.IAsyncResult result);
        
        // CODEGEN: Parameter 'isAppServerCreated' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateAsset", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        BaseLibrary.CloudService.UpdateAssetResponse UpdateAsset(BaseLibrary.CloudService.UpdateAssetRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/UpdateAsset", ReplyAction="*")]
        System.IAsyncResult BeginUpdateAsset(BaseLibrary.CloudService.UpdateAssetRequest request, System.AsyncCallback callback, object asyncState);
        
        BaseLibrary.CloudService.UpdateAssetResponse EndUpdateAsset(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAllCurrency", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetAllCurrency(string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetAllCurrency", ReplyAction="*")]
        System.IAsyncResult BeginGetAllCurrency(string accessKey, System.AsyncCallback callback, object asyncState);
        
        string EndGetAllCurrency(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAllCurrencyFromMobile", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetAllCurrencyFromMobile(string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetAllCurrencyFromMobile", ReplyAction="*")]
        System.IAsyncResult BeginGetAllCurrencyFromMobile(string accessKey, System.AsyncCallback callback, object asyncState);
        
        string EndGetAllCurrencyFromMobile(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CreateTenant", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string CreateTenant(int A_Asset_ID, string zoneCode, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/CreateTenant", ReplyAction="*")]
        System.IAsyncResult BeginCreateTenant(int A_Asset_ID, string zoneCode, string accessKey, System.AsyncCallback callback, object asyncState);
        
        string EndCreateTenant(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAllDBBackupRequest", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        BaseLibrary.CloudService.BackupInfo GetAllDBBackupRequest(string zoneCode, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetAllDBBackupRequest", ReplyAction="*")]
        System.IAsyncResult BeginGetAllDBBackupRequest(string zoneCode, string accessKey, System.AsyncCallback callback, object asyncState);
        
        BaseLibrary.CloudService.BackupInfo EndGetAllDBBackupRequest(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CloseRequest", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string CloseRequest(int R_Request_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/CloseRequest", ReplyAction="*")]
        System.IAsyncResult BeginCloseRequest(int R_Request_ID, string accessKey, System.AsyncCallback callback, object asyncState);
        
        string EndCloseRequest(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/FailedRequest", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string FailedRequest(int R_Request_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/FailedRequest", ReplyAction="*")]
        System.IAsyncResult BeginFailedRequest(int R_Request_ID, string accessKey, System.AsyncCallback callback, object asyncState);
        
        string EndFailedRequest(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCustomerSpaceM1", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetCustomerSpaceM1(int AD_User_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetCustomerSpaceM1", ReplyAction="*")]
        System.IAsyncResult BeginGetCustomerSpaceM1(int AD_User_ID, string accessKey, System.AsyncCallback callback, object asyncState);
        
        string EndGetCustomerSpaceM1(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCustomerSpaceM2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetCustomerSpaceM2(int A_Asset_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetCustomerSpaceM2", ReplyAction="*")]
        System.IAsyncResult BeginGetCustomerSpaceM2(int A_Asset_ID, string accessKey, System.AsyncCallback callback, object asyncState);
        
        string EndGetCustomerSpaceM2(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SetCustomerSpace", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SetCustomerSpace(int A_Asset_ID, int ASUsedSpace, int DBSUsedSpace, int PSUsedSpace, int DBBackupSize, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/SetCustomerSpace", ReplyAction="*")]
        System.IAsyncResult BeginSetCustomerSpace(int A_Asset_ID, int ASUsedSpace, int DBSUsedSpace, int PSUsedSpace, int DBBackupSize, string accessKey, System.AsyncCallback callback, object asyncState);
        
        string EndSetCustomerSpace(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAllDBDeleteRequest", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        BaseLibrary.CloudService.BackupInfo GetAllDBDeleteRequest(string zoneCode, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetAllDBDeleteRequest", ReplyAction="*")]
        System.IAsyncResult BeginGetAllDBDeleteRequest(string zoneCode, string accessKey, System.AsyncCallback callback, object asyncState);
        
        BaseLibrary.CloudService.BackupInfo EndGetAllDBDeleteRequest(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAllDBRestoreRequest", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        BaseLibrary.CloudService.BackupInfo GetAllDBRestoreRequest(string zoneCode, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetAllDBRestoreRequest", ReplyAction="*")]
        System.IAsyncResult BeginGetAllDBRestoreRequest(string zoneCode, string accessKey, System.AsyncCallback callback, object asyncState);
        
        BaseLibrary.CloudService.BackupInfo EndGetAllDBRestoreRequest(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CreateCustomerUser", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string CreateCustomerUser(string url, int adminUserID, string adminUserName, int tenantID, int count, bool isLoginUser, bool isDeleted, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/CreateCustomerUser", ReplyAction="*")]
        System.IAsyncResult BeginCreateCustomerUser(string url, int adminUserID, string adminUserName, int tenantID, int count, bool isLoginUser, bool isDeleted, string accessKey, System.AsyncCallback callback, object asyncState);
        
        string EndCreateCustomerUser(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/VerifyTenantCreated", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string VerifyTenantCreated(int Ad_user_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/VerifyTenantCreated", ReplyAction="*")]
        System.IAsyncResult BeginVerifyTenantCreated(int Ad_user_ID, string accessKey, System.AsyncCallback callback, object asyncState);
        
        string EndVerifyTenantCreated(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/VerifyTenantCreatedFromMobile", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string VerifyTenantCreatedFromMobile(int Ad_user_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/VerifyTenantCreatedFromMobile", ReplyAction="*")]
        System.IAsyncResult BeginVerifyTenantCreatedFromMobile(int Ad_user_ID, string accessKey, System.AsyncCallback callback, object asyncState);
        
        string EndVerifyTenantCreatedFromMobile(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAllZoneMasterServer", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetAllZoneMasterServer(string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetAllZoneMasterServer", ReplyAction="*")]
        System.IAsyncResult BeginGetAllZoneMasterServer(string accessKey, System.AsyncCallback callback, object asyncState);
        
        string EndGetAllZoneMasterServer(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAllZoneMasterServerFromMobile", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetAllZoneMasterServerFromMobile(string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetAllZoneMasterServerFromMobile", ReplyAction="*")]
        System.IAsyncResult BeginGetAllZoneMasterServerFromMobile(string accessKey, System.AsyncCallback callback, object asyncState);
        
        string EndGetAllZoneMasterServerFromMobile(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetTenantforDBMigration", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        BaseLibrary.CloudService.DBMigrationInfo GetTenantforDBMigration(int AssetID, string zoneCode, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetTenantforDBMigration", ReplyAction="*")]
        System.IAsyncResult BeginGetTenantforDBMigration(int AssetID, string zoneCode, string accessKey, System.AsyncCallback callback, object asyncState);
        
        BaseLibrary.CloudService.DBMigrationInfo EndGetTenantforDBMigration(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetTenantforDBMigrationWithServerInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        BaseLibrary.CloudService.MigrationRecordAndServerInfo GetTenantforDBMigrationWithServerInfo(int AssetID, string zoneCode, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetTenantforDBMigrationWithServerInfo", ReplyAction="*")]
        System.IAsyncResult BeginGetTenantforDBMigrationWithServerInfo(int AssetID, string zoneCode, string accessKey, System.AsyncCallback callback, object asyncState);
        
        BaseLibrary.CloudService.MigrationRecordAndServerInfo EndGetTenantforDBMigrationWithServerInfo(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SetDBTempMigrationInProcess", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SetDBTempMigrationInProcess(int tenantDBTempInfoID, char value, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/SetDBTempMigrationInProcess", ReplyAction="*")]
        System.IAsyncResult BeginSetDBTempMigrationInProcess(int tenantDBTempInfoID, char value, string accessKey, System.AsyncCallback callback, object asyncState);
        
        string EndSetDBTempMigrationInProcess(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SetIsDBTempMigrated", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SetIsDBTempMigrated(int tenantDBTempInfoID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/SetIsDBTempMigrated", ReplyAction="*")]
        System.IAsyncResult BeginSetIsDBTempMigrated(int tenantDBTempInfoID, string accessKey, System.AsyncCallback callback, object asyncState);
        
        string EndSetIsDBTempMigrated(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SetAliseCardNo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SetAliseCardNo(int AD_User_ID, string aliseCardNo, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/SetAliseCardNo", ReplyAction="*")]
        System.IAsyncResult BeginSetAliseCardNo(int AD_User_ID, string aliseCardNo, string accessKey, System.AsyncCallback callback, object asyncState);
        
        string EndSetAliseCardNo(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAliseCardNo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetAliseCardNo(int ad_user_id, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetAliseCardNo", ReplyAction="*")]
        System.IAsyncResult BeginGetAliseCardNo(int ad_user_id, string accessKey, System.AsyncCallback callback, object asyncState);
        
        string EndGetAliseCardNo(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SetLastLogin", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SetLastLogin(int tenant_ID, string url, string date, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/SetLastLogin", ReplyAction="*")]
        System.IAsyncResult BeginSetLastLogin(int tenant_ID, string url, string date, string accessKey, System.AsyncCallback callback, object asyncState);
        
        string EndSetLastLogin(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CheckCustomerUserSpaceM1", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string CheckCustomerUserSpaceM1(int A_Asset_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/CheckCustomerUserSpaceM1", ReplyAction="*")]
        System.IAsyncResult BeginCheckCustomerUserSpaceM1(int A_Asset_ID, string accessKey, System.AsyncCallback callback, object asyncState);
        
        string EndCheckCustomerUserSpaceM1(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CheckCustomerUserSpaceM2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string CheckCustomerUserSpaceM2(int AD_User_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/CheckCustomerUserSpaceM2", ReplyAction="*")]
        System.IAsyncResult BeginCheckCustomerUserSpaceM2(int AD_User_ID, string accessKey, System.AsyncCallback callback, object asyncState);
        
        string EndCheckCustomerUserSpaceM2(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CheckCustomerUserSpaceM3", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string CheckCustomerUserSpaceM3(string url, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/CheckCustomerUserSpaceM3", ReplyAction="*")]
        System.IAsyncResult BeginCheckCustomerUserSpaceM3(string url, string accessKey, System.AsyncCallback callback, object asyncState);
        
        string EndCheckCustomerUserSpaceM3(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/isAllowedToContinue", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string isAllowedToContinue(string url, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/isAllowedToContinue", ReplyAction="*")]
        System.IAsyncResult BeginisAllowedToContinue(string url, string accessKey, System.AsyncCallback callback, object asyncState);
        
        string EndisAllowedToContinue(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/BuyMoreSpace", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string BuyMoreSpace(int AD_user_ID, int Space, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/BuyMoreSpace", ReplyAction="*")]
        System.IAsyncResult BeginBuyMoreSpace(int AD_user_ID, int Space, string accessKey, System.AsyncCallback callback, object asyncState);
        
        string EndBuyMoreSpace(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetBillingInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetBillingInfo(int AD_User_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetBillingInfo", ReplyAction="*")]
        System.IAsyncResult BeginGetBillingInfo(int AD_User_ID, string accessKey, System.AsyncCallback callback, object asyncState);
        
        string EndGetBillingInfo(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetUnBilledInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetUnBilledInfo(int AD_User_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetUnBilledInfo", ReplyAction="*")]
        System.IAsyncResult BeginGetUnBilledInfo(int AD_User_ID, string accessKey, System.AsyncCallback callback, object asyncState);
        
        string EndGetUnBilledInfo(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAllTenantforDNS", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        BaseLibrary.CloudService.DNSInfo GetAllTenantforDNS(string zoneCode, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetAllTenantforDNS", ReplyAction="*")]
        System.IAsyncResult BeginGetAllTenantforDNS(string zoneCode, string accessKey, System.AsyncCallback callback, object asyncState);
        
        BaseLibrary.CloudService.DNSInfo EndGetAllTenantforDNS(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateDNSStatus", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string UpdateDNSStatus(int A_Asset_ID, string serverType, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/UpdateDNSStatus", ReplyAction="*")]
        System.IAsyncResult BeginUpdateDNSStatus(int A_Asset_ID, string serverType, string accessKey, System.AsyncCallback callback, object asyncState);
        
        string EndUpdateDNSStatus(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateCustomerSpace", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string UpdateCustomerSpace(string zoneCode, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/UpdateCustomerSpace", ReplyAction="*")]
        System.IAsyncResult BeginUpdateCustomerSpace(string zoneCode, string accessKey, System.AsyncCallback callback, object asyncState);
        
        string EndUpdateCustomerSpace(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ScheduleBackup", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string ScheduleBackup(int numberOfDay, int AD_User_ID, string ipaddress, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ScheduleBackup", ReplyAction="*")]
        System.IAsyncResult BeginScheduleBackup(int numberOfDay, int AD_User_ID, string ipaddress, string accessKey, System.AsyncCallback callback, object asyncState);
        
        string EndScheduleBackup(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SetCustomerPersonalDetail", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SetCustomerPersonalDetail(int AD_User_ID, string fullName, string userName, string email, string companyName, string mobile, string city, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/SetCustomerPersonalDetail", ReplyAction="*")]
        System.IAsyncResult BeginSetCustomerPersonalDetail(int AD_User_ID, string fullName, string userName, string email, string companyName, string mobile, string city, string accessKey, System.AsyncCallback callback, object asyncState);
        
        string EndSetCustomerPersonalDetail(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCustomerPersonalDetail", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetCustomerPersonalDetail(int AD_User_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetCustomerPersonalDetail", ReplyAction="*")]
        System.IAsyncResult BeginGetCustomerPersonalDetail(int AD_User_ID, string accessKey, System.AsyncCallback callback, object asyncState);
        
        string EndGetCustomerPersonalDetail(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCustomerBillingSummary", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetCustomerBillingSummary(int AD_User_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetCustomerBillingSummary", ReplyAction="*")]
        System.IAsyncResult BeginGetCustomerBillingSummary(int AD_User_ID, string accessKey, System.AsyncCallback callback, object asyncState);
        
        string EndGetCustomerBillingSummary(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetUserID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetUserID(string username, string password, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetUserID", ReplyAction="*")]
        System.IAsyncResult BeginGetUserID(string username, string password, string accessKey, System.AsyncCallback callback, object asyncState);
        
        string EndGetUserID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetUserInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetUserInfo(string userID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetUserInfo", ReplyAction="*")]
        System.IAsyncResult BeginGetUserInfo(string userID, string accessKey, System.AsyncCallback callback, object asyncState);
        
        string EndGetUserInfo(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ForgotPortalPassword", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string ForgotPortalPassword(string userName, string userEmail, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ForgotPortalPassword", ReplyAction="*")]
        System.IAsyncResult BeginForgotPortalPassword(string userName, string userEmail, string accessKey, System.AsyncCallback callback, object asyncState);
        
        string EndForgotPortalPassword(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/VForgotPortalPassword", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string VForgotPortalPassword(string userName, string userEmail, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/VForgotPortalPassword", ReplyAction="*")]
        System.IAsyncResult BeginVForgotPortalPassword(string userName, string userEmail, string accessKey, System.AsyncCallback callback, object asyncState);
        
        string EndVForgotPortalPassword(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PForgotPortalPassword", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string PForgotPortalPassword(string userName, string userEmail, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/PForgotPortalPassword", ReplyAction="*")]
        System.IAsyncResult BeginPForgotPortalPassword(string userName, string userEmail, string accessKey, System.AsyncCallback callback, object asyncState);
        
        string EndPForgotPortalPassword(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/NotifyServerCreated", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string NotifyServerCreated(int A_Asset_ID, int client_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/NotifyServerCreated", ReplyAction="*")]
        System.IAsyncResult BeginNotifyServerCreated(int A_Asset_ID, int client_ID, string accessKey, System.AsyncCallback callback, object asyncState);
        
        string EndNotifyServerCreated(System.IAsyncResult result);
        
        // CODEGEN: Parameter 'CS_CustomerTenantInfo_ID' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveErrorLog", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        BaseLibrary.CloudService.SaveErrorLogResponse SaveErrorLog(BaseLibrary.CloudService.SaveErrorLogRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/SaveErrorLog", ReplyAction="*")]
        System.IAsyncResult BeginSaveErrorLog(BaseLibrary.CloudService.SaveErrorLogRequest request, System.AsyncCallback callback, object asyncState);
        
        BaseLibrary.CloudService.SaveErrorLogResponse EndSaveErrorLog(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveErrorInLog", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SaveErrorInLog(string customerValue, int errorNumber, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/SaveErrorInLog", ReplyAction="*")]
        System.IAsyncResult BeginSaveErrorInLog(string customerValue, int errorNumber, string accessKey, System.AsyncCallback callback, object asyncState);
        
        string EndSaveErrorInLog(System.IAsyncResult result);
        
        // CODEGEN: Parameter 'R_Request_ID' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveErrorInLogM1", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        BaseLibrary.CloudService.SaveErrorInLogM1Response SaveErrorInLogM1(BaseLibrary.CloudService.SaveErrorInLogM1Request request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/SaveErrorInLogM1", ReplyAction="*")]
        System.IAsyncResult BeginSaveErrorInLogM1(BaseLibrary.CloudService.SaveErrorInLogM1Request request, System.AsyncCallback callback, object asyncState);
        
        BaseLibrary.CloudService.SaveErrorInLogM1Response EndSaveErrorInLogM1(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TestProccesorConnection", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string TestProccesorConnection(string zoneCode, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/TestProccesorConnection", ReplyAction="*")]
        System.IAsyncResult BeginTestProccesorConnection(string zoneCode, string accessKey, System.AsyncCallback callback, object asyncState);
        
        string EndTestProccesorConnection(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CreateProcessServer", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string CreateProcessServer(int AssetID, string zoneCode, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/CreateProcessServer", ReplyAction="*")]
        System.IAsyncResult BeginCreateProcessServer(int AssetID, string zoneCode, string accessKey, System.AsyncCallback callback, object asyncState);
        
        string EndCreateProcessServer(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeleteProcessServer", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string DeleteProcessServer(int AssetID, string zoneCode, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/DeleteProcessServer", ReplyAction="*")]
        System.IAsyncResult BeginDeleteProcessServer(int AssetID, string zoneCode, string accessKey, System.AsyncCallback callback, object asyncState);
        
        string EndDeleteProcessServer(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CardVerifyPayment", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string CardVerifyPayment(int AD_User_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/CardVerifyPayment", ReplyAction="*")]
        System.IAsyncResult BeginCardVerifyPayment(int AD_User_ID, string accessKey, System.AsyncCallback callback, object asyncState);
        
        string EndCardVerifyPayment(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IsCustomerAddMoreCompany", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string IsCustomerAddMoreCompany(int AD_User_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IsCustomerAddMoreCompany", ReplyAction="*")]
        System.IAsyncResult BeginIsCustomerAddMoreCompany(int AD_User_ID, string accessKey, System.AsyncCallback callback, object asyncState);
        
        string EndIsCustomerAddMoreCompany(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCustomerDomainName", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetCustomerDomainName(int AD_User_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetCustomerDomainName", ReplyAction="*")]
        System.IAsyncResult BeginGetCustomerDomainName(int AD_User_ID, string accessKey, System.AsyncCallback callback, object asyncState);
        
        string EndGetCustomerDomainName(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/StartAndStopProcessor", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string StartAndStopProcessor(int A_Asset_ID, bool startServer, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/StartAndStopProcessor", ReplyAction="*")]
        System.IAsyncResult BeginStartAndStopProcessor(int A_Asset_ID, bool startServer, string accessKey, System.AsyncCallback callback, object asyncState);
        
        string EndStartAndStopProcessor(System.IAsyncResult result);
        
        // CODEGEN: Parameter 'DownloadDumpResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DownloadDump", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        BaseLibrary.CloudService.DownloadDumpResponse DownloadDump(BaseLibrary.CloudService.DownloadDumpRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/DownloadDump", ReplyAction="*")]
        System.IAsyncResult BeginDownloadDump(BaseLibrary.CloudService.DownloadDumpRequest request, System.AsyncCallback callback, object asyncState);
        
        BaseLibrary.CloudService.DownloadDumpResponse EndDownloadDump(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ChangeLoginUserPassword", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string ChangeLoginUserPassword(int AD_User_ID, string oldPassword, string newPassword, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ChangeLoginUserPassword", ReplyAction="*")]
        System.IAsyncResult BeginChangeLoginUserPassword(int AD_User_ID, string oldPassword, string newPassword, string accessKey, System.AsyncCallback callback, object asyncState);
        
        string EndChangeLoginUserPassword(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SetApplicationStatusM1", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SetApplicationStatusM1(int AD_User_ID, char value, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/SetApplicationStatusM1", ReplyAction="*")]
        System.IAsyncResult BeginSetApplicationStatusM1(int AD_User_ID, char value, string accessKey, System.AsyncCallback callback, object asyncState);
        
        string EndSetApplicationStatusM1(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SetApplicationStatusM2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SetApplicationStatusM2(int AD_User_ID, char value, int createdBy, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/SetApplicationStatusM2", ReplyAction="*")]
        System.IAsyncResult BeginSetApplicationStatusM2(int AD_User_ID, char value, int createdBy, string accessKey, System.AsyncCallback callback, object asyncState);
        
        string EndSetApplicationStatusM2(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAllAppDeleteRequest", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        BaseLibrary.CloudService.BackupInfo GetAllAppDeleteRequest(string zoneCode, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetAllAppDeleteRequest", ReplyAction="*")]
        System.IAsyncResult BeginGetAllAppDeleteRequest(string zoneCode, string accessKey, System.AsyncCallback callback, object asyncState);
        
        BaseLibrary.CloudService.BackupInfo EndGetAllAppDeleteRequest(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AssignServerIPToCustomerTenant", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string AssignServerIPToCustomerTenant(int CS_CustomerTenentInfo_ID, string value, int CS_ZoneMasterServer_ID, int M_Product_ID, int A_Asset_ID, int AD_User_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/AssignServerIPToCustomerTenant", ReplyAction="*")]
        System.IAsyncResult BeginAssignServerIPToCustomerTenant(int CS_CustomerTenentInfo_ID, string value, int CS_ZoneMasterServer_ID, int M_Product_ID, int A_Asset_ID, int AD_User_ID, string accessKey, System.AsyncCallback callback, object asyncState);
        
        string EndAssignServerIPToCustomerTenant(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetIpAssignRequest", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        BaseLibrary.CloudService.GetUnassignedIp GetIpAssignRequest(string zoneCode, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetIpAssignRequest", ReplyAction="*")]
        System.IAsyncResult BeginGetIpAssignRequest(string zoneCode, string accessKey, System.AsyncCallback callback, object asyncState);
        
        BaseLibrary.CloudService.GetUnassignedIp EndGetIpAssignRequest(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/StartAndStopZoneServers", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string StartAndStopZoneServers(string zoneCode, bool isStart, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/StartAndStopZoneServers", ReplyAction="*")]
        System.IAsyncResult BeginStartAndStopZoneServers(string zoneCode, bool isStart, string accessKey, System.AsyncCallback callback, object asyncState);
        
        string EndStartAndStopZoneServers(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SetAssetDeleted", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SetAssetDeleted(int A_Asset_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/SetAssetDeleted", ReplyAction="*")]
        System.IAsyncResult BeginSetAssetDeleted(int A_Asset_ID, string accessKey, System.AsyncCallback callback, object asyncState);
        
        string EndSetAssetDeleted(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetUserUrl", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetUserUrl(int AD_User_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetUserUrl", ReplyAction="*")]
        System.IAsyncResult BeginGetUserUrl(int AD_User_ID, string accessKey, System.AsyncCallback callback, object asyncState);
        
        string EndGetUserUrl(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetUserProduct", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetUserProduct(int AD_user_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetUserProduct", ReplyAction="*")]
        System.IAsyncResult BeginGetUserProduct(int AD_user_ID, string accessKey, System.AsyncCallback callback, object asyncState);
        
        string EndGetUserProduct(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ResendEmail", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string ResendEmail(string type, int Ad_User_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ResendEmail", ReplyAction="*")]
        System.IAsyncResult BeginResendEmail(string type, int Ad_User_ID, string accessKey, System.AsyncCallback callback, object asyncState);
        
        string EndResendEmail(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CreateAdditionalDataBase", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string CreateAdditionalDataBase(string zoneCode, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/CreateAdditionalDataBase", ReplyAction="*")]
        System.IAsyncResult BeginCreateAdditionalDataBase(string zoneCode, string accessKey, System.AsyncCallback callback, object asyncState);
        
        string EndCreateAdditionalDataBase(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetDummyDataBaseInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        BaseLibrary.CloudService.DummyDBMigrationInfo GetDummyDataBaseInfo(int zoneClientServerID, string zoneCode, int product_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetDummyDataBaseInfo", ReplyAction="*")]
        System.IAsyncResult BeginGetDummyDataBaseInfo(int zoneClientServerID, string zoneCode, int product_ID, string accessKey, System.AsyncCallback callback, object asyncState);
        
        BaseLibrary.CloudService.DummyDBMigrationInfo EndGetDummyDataBaseInfo(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateDataBaseEntry", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string UpdateDataBaseEntry(int CS_DataBase_ID, bool isDatabaseImported, bool istenantCreated, bool isMigrationDone, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/UpdateDataBaseEntry", ReplyAction="*")]
        System.IAsyncResult BeginUpdateDataBaseEntry(int CS_DataBase_ID, bool isDatabaseImported, bool istenantCreated, bool isMigrationDone, string accessKey, System.AsyncCallback callback, object asyncState);
        
        string EndUpdateDataBaseEntry(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAdminIDForMigraration", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        BaseLibrary.CloudService.DBMigrationInfo GetAdminIDForMigraration(int CS_DataBase_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetAdminIDForMigraration", ReplyAction="*")]
        System.IAsyncResult BeginGetAdminIDForMigraration(int CS_DataBase_ID, string accessKey, System.AsyncCallback callback, object asyncState);
        
        BaseLibrary.CloudService.DBMigrationInfo EndGetAdminIDForMigraration(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CreateDummyTenant", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string CreateDummyTenant(
                    string clientName, 
                    string orgName, 
                    string adminUser, 
                    string city, 
                    int countryID, 
                    string countryCode, 
                    int regionID, 
                    int currencyID, 
                    string currencyName, 
                    int zoneMasterServerID, 
                    string globalIP, 
                    string dbUserName, 
                    string dbPwd, 
                    string dbPort, 
                    string dbService, 
                    int CS_DataBase_ID, 
                    string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/CreateDummyTenant", ReplyAction="*")]
        System.IAsyncResult BeginCreateDummyTenant(
                    string clientName, 
                    string orgName, 
                    string adminUser, 
                    string city, 
                    int countryID, 
                    string countryCode, 
                    int regionID, 
                    int currencyID, 
                    string currencyName, 
                    int zoneMasterServerID, 
                    string globalIP, 
                    string dbUserName, 
                    string dbPwd, 
                    string dbPort, 
                    string dbService, 
                    int CS_DataBase_ID, 
                    string accessKey, 
                    System.AsyncCallback callback, 
                    object asyncState);
        
        string EndCreateDummyTenant(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetRequestsToCreateDB", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        BaseLibrary.CloudService.DBInfo GetRequestsToCreateDB(string zoneCode, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetRequestsToCreateDB", ReplyAction="*")]
        System.IAsyncResult BeginGetRequestsToCreateDB(string zoneCode, string accessKey, System.AsyncCallback callback, object asyncState);
        
        BaseLibrary.CloudService.DBInfo EndGetRequestsToCreateDB(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetRequestsToCreateDBWithFtpInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        BaseLibrary.CloudService.DummyDBWithFTpInfo GetRequestsToCreateDBWithFtpInfo(string zoneCode, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetRequestsToCreateDBWithFtpInfo", ReplyAction="*")]
        System.IAsyncResult BeginGetRequestsToCreateDBWithFtpInfo(string zoneCode, string accessKey, System.AsyncCallback callback, object asyncState);
        
        BaseLibrary.CloudService.DummyDBWithFTpInfo EndGetRequestsToCreateDBWithFtpInfo(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MarkMailServerCreated", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string MarkMailServerCreated(int A_Asset_ID, bool isMailServerCreated, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/MarkMailServerCreated", ReplyAction="*")]
        System.IAsyncResult BeginMarkMailServerCreated(int A_Asset_ID, bool isMailServerCreated, string accessKey, System.AsyncCallback callback, object asyncState);
        
        string EndMarkMailServerCreated(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetUserInfoOfTokenKey", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetUserInfoOfTokenKey(string tokenKey, string msg, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetUserInfoOfTokenKey", ReplyAction="*")]
        System.IAsyncResult BeginGetUserInfoOfTokenKey(string tokenKey, string msg, string accessKey, System.AsyncCallback callback, object asyncState);
        
        string EndGetUserInfoOfTokenKey(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetBIUserCredential", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        BaseLibrary.CloudService.CustomerBISetting GetBIUserCredential(string Url, int AD_Client_ID, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetBIUserCredential", ReplyAction="*")]
        System.IAsyncResult BeginGetBIUserCredential(string Url, int AD_Client_ID, string accessKey, System.AsyncCallback callback, object asyncState);
        
        BaseLibrary.CloudService.CustomerBISetting EndGetBIUserCredential(System.IAsyncResult result);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetForwardTickets", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class SetForwardTicketsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int AD_User_ID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public int R_Request_ID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string remarks;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] Attachment;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public int docno;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=5)]
        public string fileName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=6)]
        public string accessKey;
        
        public SetForwardTicketsRequest() {
        }
        
        public SetForwardTicketsRequest(int AD_User_ID, int R_Request_ID, string remarks, byte[] Attachment, int docno, string fileName, string accessKey) {
            this.AD_User_ID = AD_User_ID;
            this.R_Request_ID = R_Request_ID;
            this.remarks = remarks;
            this.Attachment = Attachment;
            this.docno = docno;
            this.fileName = fileName;
            this.accessKey = accessKey;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetForwardTicketsResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class SetForwardTicketsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string SetForwardTicketsResult;
        
        public SetForwardTicketsResponse() {
        }
        
        public SetForwardTicketsResponse(string SetForwardTicketsResult) {
            this.SetForwardTicketsResult = SetForwardTicketsResult;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class AboutUs : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string descriptionField;
        
        private string description1Field;
        
        private byte[] logoField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
                this.RaisePropertyChanged("Description");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Description1 {
            get {
                return this.description1Field;
            }
            set {
                this.description1Field = value;
                this.RaisePropertyChanged("Description1");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary", Order=2)]
        public byte[] Logo {
            get {
                return this.logoField;
            }
            set {
                this.logoField = value;
                this.RaisePropertyChanged("Logo");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class CustomerBISetting : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string serverUrlField;
        
        private string bIUserNameField;
        
        private string bIPasswordField;
        
        private int allocatedUserField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string ServerUrl {
            get {
                return this.serverUrlField;
            }
            set {
                this.serverUrlField = value;
                this.RaisePropertyChanged("ServerUrl");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string BIUserName {
            get {
                return this.bIUserNameField;
            }
            set {
                this.bIUserNameField = value;
                this.RaisePropertyChanged("BIUserName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string BIPassword {
            get {
                return this.bIPasswordField;
            }
            set {
                this.bIPasswordField = value;
                this.RaisePropertyChanged("BIPassword");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public int AllocatedUser {
            get {
                return this.allocatedUserField;
            }
            set {
                this.allocatedUserField = value;
                this.RaisePropertyChanged("AllocatedUser");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class DummyDBInfo : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string hostIPField;
        
        private string systemUserNameField;
        
        private string systemPasswordField;
        
        private string dBSystemUserNameField;
        
        private string dBSystemPasswordField;
        
        private string newDBUserField;
        
        private string newDBPasswordField;
        
        private string dBPortField;
        
        private string dBServiceField;
        
        private string cS_ZoneMasterServer_IDField;
        
        private string m_Product_IDField;
        
        private string cS_ZoneClientServer_IDField;
        
        private string cS_DataBase_IDField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string HostIP {
            get {
                return this.hostIPField;
            }
            set {
                this.hostIPField = value;
                this.RaisePropertyChanged("HostIP");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string SystemUserName {
            get {
                return this.systemUserNameField;
            }
            set {
                this.systemUserNameField = value;
                this.RaisePropertyChanged("SystemUserName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string SystemPassword {
            get {
                return this.systemPasswordField;
            }
            set {
                this.systemPasswordField = value;
                this.RaisePropertyChanged("SystemPassword");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string DBSystemUserName {
            get {
                return this.dBSystemUserNameField;
            }
            set {
                this.dBSystemUserNameField = value;
                this.RaisePropertyChanged("DBSystemUserName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string DBSystemPassword {
            get {
                return this.dBSystemPasswordField;
            }
            set {
                this.dBSystemPasswordField = value;
                this.RaisePropertyChanged("DBSystemPassword");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string NewDBUser {
            get {
                return this.newDBUserField;
            }
            set {
                this.newDBUserField = value;
                this.RaisePropertyChanged("NewDBUser");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string NewDBPassword {
            get {
                return this.newDBPasswordField;
            }
            set {
                this.newDBPasswordField = value;
                this.RaisePropertyChanged("NewDBPassword");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public string DBPort {
            get {
                return this.dBPortField;
            }
            set {
                this.dBPortField = value;
                this.RaisePropertyChanged("DBPort");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public string DBService {
            get {
                return this.dBServiceField;
            }
            set {
                this.dBServiceField = value;
                this.RaisePropertyChanged("DBService");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public string CS_ZoneMasterServer_ID {
            get {
                return this.cS_ZoneMasterServer_IDField;
            }
            set {
                this.cS_ZoneMasterServer_IDField = value;
                this.RaisePropertyChanged("CS_ZoneMasterServer_ID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public string M_Product_ID {
            get {
                return this.m_Product_IDField;
            }
            set {
                this.m_Product_IDField = value;
                this.RaisePropertyChanged("M_Product_ID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=11)]
        public string CS_ZoneClientServer_ID {
            get {
                return this.cS_ZoneClientServer_IDField;
            }
            set {
                this.cS_ZoneClientServer_IDField = value;
                this.RaisePropertyChanged("CS_ZoneClientServer_ID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=12)]
        public string CS_DataBase_ID {
            get {
                return this.cS_DataBase_IDField;
            }
            set {
                this.cS_DataBase_IDField = value;
                this.RaisePropertyChanged("CS_DataBase_ID");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class DummyDBWithFTpInfo : object, System.ComponentModel.INotifyPropertyChanged {
        
        private DummyDBInfo customerDBInfoField;
        
        private FTPInfo customerFTPInfoField;
        
        private string errorMsgField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public DummyDBInfo CustomerDBInfo {
            get {
                return this.customerDBInfoField;
            }
            set {
                this.customerDBInfoField = value;
                this.RaisePropertyChanged("CustomerDBInfo");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public FTPInfo CustomerFTPInfo {
            get {
                return this.customerFTPInfoField;
            }
            set {
                this.customerFTPInfoField = value;
                this.RaisePropertyChanged("CustomerFTPInfo");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string ErrorMsg {
            get {
                return this.errorMsgField;
            }
            set {
                this.errorMsgField = value;
                this.RaisePropertyChanged("ErrorMsg");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class FTPInfo : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string fTPAddressField;
        
        private string fTPUserNameField;
        
        private string fTPPasswordField;
        
        private string aPPFileFolderNameField;
        
        private string dBFileFolderNameField;
        
        private string pSFileFolderNameField;
        
        private string appFileNameField;
        
        private string dBFileNameField;
        
        private string pSFileNameField;
        
        private string mailServerFileNameField;
        
        private string tDUserNameField;
        
        private string tDPasswordField;
        
        private string fTPGlobalIPAddressField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string FTPAddress {
            get {
                return this.fTPAddressField;
            }
            set {
                this.fTPAddressField = value;
                this.RaisePropertyChanged("FTPAddress");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string FTPUserName {
            get {
                return this.fTPUserNameField;
            }
            set {
                this.fTPUserNameField = value;
                this.RaisePropertyChanged("FTPUserName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string FTPPassword {
            get {
                return this.fTPPasswordField;
            }
            set {
                this.fTPPasswordField = value;
                this.RaisePropertyChanged("FTPPassword");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string APPFileFolderName {
            get {
                return this.aPPFileFolderNameField;
            }
            set {
                this.aPPFileFolderNameField = value;
                this.RaisePropertyChanged("APPFileFolderName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string DBFileFolderName {
            get {
                return this.dBFileFolderNameField;
            }
            set {
                this.dBFileFolderNameField = value;
                this.RaisePropertyChanged("DBFileFolderName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string PSFileFolderName {
            get {
                return this.pSFileFolderNameField;
            }
            set {
                this.pSFileFolderNameField = value;
                this.RaisePropertyChanged("PSFileFolderName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string AppFileName {
            get {
                return this.appFileNameField;
            }
            set {
                this.appFileNameField = value;
                this.RaisePropertyChanged("AppFileName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public string DBFileName {
            get {
                return this.dBFileNameField;
            }
            set {
                this.dBFileNameField = value;
                this.RaisePropertyChanged("DBFileName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public string PSFileName {
            get {
                return this.pSFileNameField;
            }
            set {
                this.pSFileNameField = value;
                this.RaisePropertyChanged("PSFileName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public string MailServerFileName {
            get {
                return this.mailServerFileNameField;
            }
            set {
                this.mailServerFileNameField = value;
                this.RaisePropertyChanged("MailServerFileName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public string TDUserName {
            get {
                return this.tDUserNameField;
            }
            set {
                this.tDUserNameField = value;
                this.RaisePropertyChanged("TDUserName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=11)]
        public string TDPassword {
            get {
                return this.tDPasswordField;
            }
            set {
                this.tDPasswordField = value;
                this.RaisePropertyChanged("TDPassword");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=12)]
        public string FTPGlobalIPAddress {
            get {
                return this.fTPGlobalIPAddressField;
            }
            set {
                this.fTPGlobalIPAddressField = value;
                this.RaisePropertyChanged("FTPGlobalIPAddress");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class DBInfo : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string[] hostIPField;
        
        private string[] systemUserNameField;
        
        private string[] systemPasswordField;
        
        private string[] dBSystemUserNameField;
        
        private string[] dBSystemPasswordField;
        
        private string[] newDBUserField;
        
        private string[] newDBPasswordField;
        
        private string[] dBPortField;
        
        private string[] dBServiceField;
        
        private string[] cS_ZoneMasterServer_IDField;
        
        private string[] m_Product_IDField;
        
        private string[] cS_ZoneClientServer_IDField;
        
        private string[] cS_DataBase_IDField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=0)]
        public string[] HostIP {
            get {
                return this.hostIPField;
            }
            set {
                this.hostIPField = value;
                this.RaisePropertyChanged("HostIP");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=1)]
        public string[] SystemUserName {
            get {
                return this.systemUserNameField;
            }
            set {
                this.systemUserNameField = value;
                this.RaisePropertyChanged("SystemUserName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=2)]
        public string[] SystemPassword {
            get {
                return this.systemPasswordField;
            }
            set {
                this.systemPasswordField = value;
                this.RaisePropertyChanged("SystemPassword");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=3)]
        public string[] DBSystemUserName {
            get {
                return this.dBSystemUserNameField;
            }
            set {
                this.dBSystemUserNameField = value;
                this.RaisePropertyChanged("DBSystemUserName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=4)]
        public string[] DBSystemPassword {
            get {
                return this.dBSystemPasswordField;
            }
            set {
                this.dBSystemPasswordField = value;
                this.RaisePropertyChanged("DBSystemPassword");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=5)]
        public string[] NewDBUser {
            get {
                return this.newDBUserField;
            }
            set {
                this.newDBUserField = value;
                this.RaisePropertyChanged("NewDBUser");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=6)]
        public string[] NewDBPassword {
            get {
                return this.newDBPasswordField;
            }
            set {
                this.newDBPasswordField = value;
                this.RaisePropertyChanged("NewDBPassword");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=7)]
        public string[] DBPort {
            get {
                return this.dBPortField;
            }
            set {
                this.dBPortField = value;
                this.RaisePropertyChanged("DBPort");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=8)]
        public string[] DBService {
            get {
                return this.dBServiceField;
            }
            set {
                this.dBServiceField = value;
                this.RaisePropertyChanged("DBService");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=9)]
        public string[] CS_ZoneMasterServer_ID {
            get {
                return this.cS_ZoneMasterServer_IDField;
            }
            set {
                this.cS_ZoneMasterServer_IDField = value;
                this.RaisePropertyChanged("CS_ZoneMasterServer_ID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=10)]
        public string[] M_Product_ID {
            get {
                return this.m_Product_IDField;
            }
            set {
                this.m_Product_IDField = value;
                this.RaisePropertyChanged("M_Product_ID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=11)]
        public string[] CS_ZoneClientServer_ID {
            get {
                return this.cS_ZoneClientServer_IDField;
            }
            set {
                this.cS_ZoneClientServer_IDField = value;
                this.RaisePropertyChanged("CS_ZoneClientServer_ID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=12)]
        public string[] CS_DataBase_ID {
            get {
                return this.cS_DataBase_IDField;
            }
            set {
                this.cS_DataBase_IDField = value;
                this.RaisePropertyChanged("CS_DataBase_ID");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class DummyDBMigrationInfo : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string importServiceAddressField;
        
        private string tempDBUserNameField;
        
        private string tempDBPasswordField;
        
        private string migrationServiceAdressField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string ImportServiceAddress {
            get {
                return this.importServiceAddressField;
            }
            set {
                this.importServiceAddressField = value;
                this.RaisePropertyChanged("ImportServiceAddress");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string TempDBUserName {
            get {
                return this.tempDBUserNameField;
            }
            set {
                this.tempDBUserNameField = value;
                this.RaisePropertyChanged("TempDBUserName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string TempDBPassword {
            get {
                return this.tempDBPasswordField;
            }
            set {
                this.tempDBPasswordField = value;
                this.RaisePropertyChanged("TempDBPassword");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string MigrationServiceAdress {
            get {
                return this.migrationServiceAdressField;
            }
            set {
                this.migrationServiceAdressField = value;
                this.RaisePropertyChanged("MigrationServiceAdress");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class GetUnassignedIp : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string[] cS_CustomerTenantIDField;
        
        private string[] valueField;
        
        private string[] zoneMasterIDField;
        
        private string[] m_Product_IDField;
        
        private string[] a_Asset_IDField;
        
        private string[] aD_User_IDField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=0)]
        public string[] CS_CustomerTenantID {
            get {
                return this.cS_CustomerTenantIDField;
            }
            set {
                this.cS_CustomerTenantIDField = value;
                this.RaisePropertyChanged("CS_CustomerTenantID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=1)]
        public string[] value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
                this.RaisePropertyChanged("value");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=2)]
        public string[] zoneMasterID {
            get {
                return this.zoneMasterIDField;
            }
            set {
                this.zoneMasterIDField = value;
                this.RaisePropertyChanged("zoneMasterID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=3)]
        public string[] M_Product_ID {
            get {
                return this.m_Product_IDField;
            }
            set {
                this.m_Product_IDField = value;
                this.RaisePropertyChanged("M_Product_ID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=4)]
        public string[] A_Asset_ID {
            get {
                return this.a_Asset_IDField;
            }
            set {
                this.a_Asset_IDField = value;
                this.RaisePropertyChanged("A_Asset_ID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=5)]
        public string[] AD_User_ID {
            get {
                return this.aD_User_IDField;
            }
            set {
                this.aD_User_IDField = value;
                this.RaisePropertyChanged("AD_User_ID");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class DNSInfo : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string[] valueField;
        
        private string[] globalIpField;
        
        private int[] a_Asset_IDField;
        
        private string[] serverTypeField;
        
        private string[] isDeletedField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=0)]
        public string[] value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
                this.RaisePropertyChanged("value");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=1)]
        public string[] GlobalIp {
            get {
                return this.globalIpField;
            }
            set {
                this.globalIpField = value;
                this.RaisePropertyChanged("GlobalIp");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=2)]
        public int[] A_Asset_ID {
            get {
                return this.a_Asset_IDField;
            }
            set {
                this.a_Asset_IDField = value;
                this.RaisePropertyChanged("A_Asset_ID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=3)]
        public string[] ServerType {
            get {
                return this.serverTypeField;
            }
            set {
                this.serverTypeField = value;
                this.RaisePropertyChanged("ServerType");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=4)]
        public string[] IsDeleted {
            get {
                return this.isDeletedField;
            }
            set {
                this.isDeletedField = value;
                this.RaisePropertyChanged("IsDeleted");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class MigrationRecordAndServerInfo : object, System.ComponentModel.INotifyPropertyChanged {
        
        private DBMigrationInfo customerDBInfoField;
        
        private ServerInfo customerServerInfoField;
        
        private string errorMsgField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public DBMigrationInfo CustomerDBInfo {
            get {
                return this.customerDBInfoField;
            }
            set {
                this.customerDBInfoField = value;
                this.RaisePropertyChanged("CustomerDBInfo");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public ServerInfo CustomerServerInfo {
            get {
                return this.customerServerInfoField;
            }
            set {
                this.customerServerInfoField = value;
                this.RaisePropertyChanged("CustomerServerInfo");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string ErrorMsg {
            get {
                return this.errorMsgField;
            }
            set {
                this.errorMsgField = value;
                this.RaisePropertyChanged("ErrorMsg");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class DBMigrationInfo : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string productIDField;
        
        private string assetIDField;
        
        private string userIDField;
        
        private string zoneServerMasterIDField;
        
        private string adminRoleIDField;
        
        private string adminUserField;
        
        private string adminUserIDField;
        
        private string adminUserPwdField;
        
        private string orgIDField;
        
        private string orgNameField;
        
        private string clientNameField;
        
        private string clientIDField;
        
        private string globalIPField;
        
        private string localIPField;
        
        private string tempDBUserNameField;
        
        private string tempDbPasswordField;
        
        private string dBTypeField;
        
        private string dBServiceField;
        
        private string dBPortField;
        
        private string tenantDBInfoIDField;
        
        private string errorMsgField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string ProductID {
            get {
                return this.productIDField;
            }
            set {
                this.productIDField = value;
                this.RaisePropertyChanged("ProductID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string AssetID {
            get {
                return this.assetIDField;
            }
            set {
                this.assetIDField = value;
                this.RaisePropertyChanged("AssetID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string UserID {
            get {
                return this.userIDField;
            }
            set {
                this.userIDField = value;
                this.RaisePropertyChanged("UserID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string ZoneServerMasterID {
            get {
                return this.zoneServerMasterIDField;
            }
            set {
                this.zoneServerMasterIDField = value;
                this.RaisePropertyChanged("ZoneServerMasterID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string AdminRoleID {
            get {
                return this.adminRoleIDField;
            }
            set {
                this.adminRoleIDField = value;
                this.RaisePropertyChanged("AdminRoleID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string AdminUser {
            get {
                return this.adminUserField;
            }
            set {
                this.adminUserField = value;
                this.RaisePropertyChanged("AdminUser");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string AdminUserID {
            get {
                return this.adminUserIDField;
            }
            set {
                this.adminUserIDField = value;
                this.RaisePropertyChanged("AdminUserID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public string AdminUserPwd {
            get {
                return this.adminUserPwdField;
            }
            set {
                this.adminUserPwdField = value;
                this.RaisePropertyChanged("AdminUserPwd");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public string OrgID {
            get {
                return this.orgIDField;
            }
            set {
                this.orgIDField = value;
                this.RaisePropertyChanged("OrgID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public string OrgName {
            get {
                return this.orgNameField;
            }
            set {
                this.orgNameField = value;
                this.RaisePropertyChanged("OrgName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public string ClientName {
            get {
                return this.clientNameField;
            }
            set {
                this.clientNameField = value;
                this.RaisePropertyChanged("ClientName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=11)]
        public string ClientID {
            get {
                return this.clientIDField;
            }
            set {
                this.clientIDField = value;
                this.RaisePropertyChanged("ClientID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=12)]
        public string GlobalIP {
            get {
                return this.globalIPField;
            }
            set {
                this.globalIPField = value;
                this.RaisePropertyChanged("GlobalIP");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=13)]
        public string LocalIP {
            get {
                return this.localIPField;
            }
            set {
                this.localIPField = value;
                this.RaisePropertyChanged("LocalIP");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=14)]
        public string TempDBUserName {
            get {
                return this.tempDBUserNameField;
            }
            set {
                this.tempDBUserNameField = value;
                this.RaisePropertyChanged("TempDBUserName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=15)]
        public string TempDbPassword {
            get {
                return this.tempDbPasswordField;
            }
            set {
                this.tempDbPasswordField = value;
                this.RaisePropertyChanged("TempDbPassword");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=16)]
        public string DBType {
            get {
                return this.dBTypeField;
            }
            set {
                this.dBTypeField = value;
                this.RaisePropertyChanged("DBType");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=17)]
        public string DBService {
            get {
                return this.dBServiceField;
            }
            set {
                this.dBServiceField = value;
                this.RaisePropertyChanged("DBService");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=18)]
        public string DBPort {
            get {
                return this.dBPortField;
            }
            set {
                this.dBPortField = value;
                this.RaisePropertyChanged("DBPort");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=19)]
        public string TenantDBInfoID {
            get {
                return this.tenantDBInfoIDField;
            }
            set {
                this.tenantDBInfoIDField = value;
                this.RaisePropertyChanged("TenantDBInfoID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=20)]
        public string ErrorMsg {
            get {
                return this.errorMsgField;
            }
            set {
                this.errorMsgField = value;
                this.RaisePropertyChanged("ErrorMsg");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ServerInfo : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string customerWebSiteUrlField;
        
        private string customerDBUserNameField;
        
        private string customerDBPasswordField;
        
        private string customerAppFolderNameField;
        
        private string customerDBFolderNameField;
        
        private string customerProcessFolderNameField;
        
        private string customerValueField;
        
        private string appFilePathField;
        
        private string dBFilePathField;
        
        private string processFilePathField;
        
        private string customerAppServerLocalIpAddressField;
        
        private string customerAppServerGlobalIpAddressField;
        
        private string customerDBServerLocalIpAddressField;
        
        private string customerDBServerGlobalIpAddressField;
        
        private string customerProcessServerLocalIpAddressField;
        
        private string customerProcessServerGlobalIpAddressField;
        
        private string serverTypeField;
        
        private string dataBaseTypeField;
        
        private string dataBaseServiceField;
        
        private string customerAppServerSystemUserNameField;
        
        private string customerDBServerSystemUserNameField;
        
        private string customerProcessServerSystemUserNameField;
        
        private string customerAppServerSystemPasswordField;
        
        private string customerDBServerSystemPasswordField;
        
        private string customerProcessServerSystemPasswordField;
        
        private string appPortNumberField;
        
        private string dBPortNumberField;
        
        private string processPortNumberField;
        
        private string appFolderNameField;
        
        private string dBFolderNameField;
        
        private string processFolderNameField;
        
        private string dBSystemUserNameField;
        
        private string dBSystemPasswordField;
        
        private bool isUseLocalIPForProcessServerField;
        
        private bool isUseLocalIPForDBServerField;
        
        private bool isUseLocalIPForAppServerField;
        
        private string processWebServiceAddressField;
        
        private string impDBWebServiceAddressField;
        
        private string appWebServiceAddressField;
        
        private string expDBWebServiceAddressField;
        
        private string dBWebServiceAddressField;
        
        private string customerProcessServerUrlField;
        
        private string mailServerUrlField;
        
        private bool isPSServerCreatedField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string CustomerWebSiteUrl {
            get {
                return this.customerWebSiteUrlField;
            }
            set {
                this.customerWebSiteUrlField = value;
                this.RaisePropertyChanged("CustomerWebSiteUrl");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string CustomerDBUserName {
            get {
                return this.customerDBUserNameField;
            }
            set {
                this.customerDBUserNameField = value;
                this.RaisePropertyChanged("CustomerDBUserName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string CustomerDBPassword {
            get {
                return this.customerDBPasswordField;
            }
            set {
                this.customerDBPasswordField = value;
                this.RaisePropertyChanged("CustomerDBPassword");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string CustomerAppFolderName {
            get {
                return this.customerAppFolderNameField;
            }
            set {
                this.customerAppFolderNameField = value;
                this.RaisePropertyChanged("CustomerAppFolderName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string CustomerDBFolderName {
            get {
                return this.customerDBFolderNameField;
            }
            set {
                this.customerDBFolderNameField = value;
                this.RaisePropertyChanged("CustomerDBFolderName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string CustomerProcessFolderName {
            get {
                return this.customerProcessFolderNameField;
            }
            set {
                this.customerProcessFolderNameField = value;
                this.RaisePropertyChanged("CustomerProcessFolderName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string CustomerValue {
            get {
                return this.customerValueField;
            }
            set {
                this.customerValueField = value;
                this.RaisePropertyChanged("CustomerValue");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public string AppFilePath {
            get {
                return this.appFilePathField;
            }
            set {
                this.appFilePathField = value;
                this.RaisePropertyChanged("AppFilePath");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public string DBFilePath {
            get {
                return this.dBFilePathField;
            }
            set {
                this.dBFilePathField = value;
                this.RaisePropertyChanged("DBFilePath");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public string ProcessFilePath {
            get {
                return this.processFilePathField;
            }
            set {
                this.processFilePathField = value;
                this.RaisePropertyChanged("ProcessFilePath");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public string CustomerAppServerLocalIpAddress {
            get {
                return this.customerAppServerLocalIpAddressField;
            }
            set {
                this.customerAppServerLocalIpAddressField = value;
                this.RaisePropertyChanged("CustomerAppServerLocalIpAddress");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=11)]
        public string CustomerAppServerGlobalIpAddress {
            get {
                return this.customerAppServerGlobalIpAddressField;
            }
            set {
                this.customerAppServerGlobalIpAddressField = value;
                this.RaisePropertyChanged("CustomerAppServerGlobalIpAddress");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=12)]
        public string CustomerDBServerLocalIpAddress {
            get {
                return this.customerDBServerLocalIpAddressField;
            }
            set {
                this.customerDBServerLocalIpAddressField = value;
                this.RaisePropertyChanged("CustomerDBServerLocalIpAddress");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=13)]
        public string CustomerDBServerGlobalIpAddress {
            get {
                return this.customerDBServerGlobalIpAddressField;
            }
            set {
                this.customerDBServerGlobalIpAddressField = value;
                this.RaisePropertyChanged("CustomerDBServerGlobalIpAddress");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=14)]
        public string CustomerProcessServerLocalIpAddress {
            get {
                return this.customerProcessServerLocalIpAddressField;
            }
            set {
                this.customerProcessServerLocalIpAddressField = value;
                this.RaisePropertyChanged("CustomerProcessServerLocalIpAddress");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=15)]
        public string CustomerProcessServerGlobalIpAddress {
            get {
                return this.customerProcessServerGlobalIpAddressField;
            }
            set {
                this.customerProcessServerGlobalIpAddressField = value;
                this.RaisePropertyChanged("CustomerProcessServerGlobalIpAddress");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=16)]
        public string ServerType {
            get {
                return this.serverTypeField;
            }
            set {
                this.serverTypeField = value;
                this.RaisePropertyChanged("ServerType");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=17)]
        public string DataBaseType {
            get {
                return this.dataBaseTypeField;
            }
            set {
                this.dataBaseTypeField = value;
                this.RaisePropertyChanged("DataBaseType");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=18)]
        public string DataBaseService {
            get {
                return this.dataBaseServiceField;
            }
            set {
                this.dataBaseServiceField = value;
                this.RaisePropertyChanged("DataBaseService");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=19)]
        public string CustomerAppServerSystemUserName {
            get {
                return this.customerAppServerSystemUserNameField;
            }
            set {
                this.customerAppServerSystemUserNameField = value;
                this.RaisePropertyChanged("CustomerAppServerSystemUserName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=20)]
        public string CustomerDBServerSystemUserName {
            get {
                return this.customerDBServerSystemUserNameField;
            }
            set {
                this.customerDBServerSystemUserNameField = value;
                this.RaisePropertyChanged("CustomerDBServerSystemUserName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=21)]
        public string CustomerProcessServerSystemUserName {
            get {
                return this.customerProcessServerSystemUserNameField;
            }
            set {
                this.customerProcessServerSystemUserNameField = value;
                this.RaisePropertyChanged("CustomerProcessServerSystemUserName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=22)]
        public string CustomerAppServerSystemPassword {
            get {
                return this.customerAppServerSystemPasswordField;
            }
            set {
                this.customerAppServerSystemPasswordField = value;
                this.RaisePropertyChanged("CustomerAppServerSystemPassword");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=23)]
        public string CustomerDBServerSystemPassword {
            get {
                return this.customerDBServerSystemPasswordField;
            }
            set {
                this.customerDBServerSystemPasswordField = value;
                this.RaisePropertyChanged("CustomerDBServerSystemPassword");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=24)]
        public string CustomerProcessServerSystemPassword {
            get {
                return this.customerProcessServerSystemPasswordField;
            }
            set {
                this.customerProcessServerSystemPasswordField = value;
                this.RaisePropertyChanged("CustomerProcessServerSystemPassword");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=25)]
        public string AppPortNumber {
            get {
                return this.appPortNumberField;
            }
            set {
                this.appPortNumberField = value;
                this.RaisePropertyChanged("AppPortNumber");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=26)]
        public string DBPortNumber {
            get {
                return this.dBPortNumberField;
            }
            set {
                this.dBPortNumberField = value;
                this.RaisePropertyChanged("DBPortNumber");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=27)]
        public string ProcessPortNumber {
            get {
                return this.processPortNumberField;
            }
            set {
                this.processPortNumberField = value;
                this.RaisePropertyChanged("ProcessPortNumber");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=28)]
        public string AppFolderName {
            get {
                return this.appFolderNameField;
            }
            set {
                this.appFolderNameField = value;
                this.RaisePropertyChanged("AppFolderName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=29)]
        public string DBFolderName {
            get {
                return this.dBFolderNameField;
            }
            set {
                this.dBFolderNameField = value;
                this.RaisePropertyChanged("DBFolderName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=30)]
        public string ProcessFolderName {
            get {
                return this.processFolderNameField;
            }
            set {
                this.processFolderNameField = value;
                this.RaisePropertyChanged("ProcessFolderName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=31)]
        public string DBSystemUserName {
            get {
                return this.dBSystemUserNameField;
            }
            set {
                this.dBSystemUserNameField = value;
                this.RaisePropertyChanged("DBSystemUserName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=32)]
        public string DBSystemPassword {
            get {
                return this.dBSystemPasswordField;
            }
            set {
                this.dBSystemPasswordField = value;
                this.RaisePropertyChanged("DBSystemPassword");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=33)]
        public bool IsUseLocalIPForProcessServer {
            get {
                return this.isUseLocalIPForProcessServerField;
            }
            set {
                this.isUseLocalIPForProcessServerField = value;
                this.RaisePropertyChanged("IsUseLocalIPForProcessServer");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=34)]
        public bool IsUseLocalIPForDBServer {
            get {
                return this.isUseLocalIPForDBServerField;
            }
            set {
                this.isUseLocalIPForDBServerField = value;
                this.RaisePropertyChanged("IsUseLocalIPForDBServer");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=35)]
        public bool IsUseLocalIPForAppServer {
            get {
                return this.isUseLocalIPForAppServerField;
            }
            set {
                this.isUseLocalIPForAppServerField = value;
                this.RaisePropertyChanged("IsUseLocalIPForAppServer");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=36)]
        public string ProcessWebServiceAddress {
            get {
                return this.processWebServiceAddressField;
            }
            set {
                this.processWebServiceAddressField = value;
                this.RaisePropertyChanged("ProcessWebServiceAddress");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=37)]
        public string ImpDBWebServiceAddress {
            get {
                return this.impDBWebServiceAddressField;
            }
            set {
                this.impDBWebServiceAddressField = value;
                this.RaisePropertyChanged("ImpDBWebServiceAddress");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=38)]
        public string AppWebServiceAddress {
            get {
                return this.appWebServiceAddressField;
            }
            set {
                this.appWebServiceAddressField = value;
                this.RaisePropertyChanged("AppWebServiceAddress");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=39)]
        public string ExpDBWebServiceAddress {
            get {
                return this.expDBWebServiceAddressField;
            }
            set {
                this.expDBWebServiceAddressField = value;
                this.RaisePropertyChanged("ExpDBWebServiceAddress");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=40)]
        public string DBWebServiceAddress {
            get {
                return this.dBWebServiceAddressField;
            }
            set {
                this.dBWebServiceAddressField = value;
                this.RaisePropertyChanged("DBWebServiceAddress");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=41)]
        public string CustomerProcessServerUrl {
            get {
                return this.customerProcessServerUrlField;
            }
            set {
                this.customerProcessServerUrlField = value;
                this.RaisePropertyChanged("CustomerProcessServerUrl");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=42)]
        public string MailServerUrl {
            get {
                return this.mailServerUrlField;
            }
            set {
                this.mailServerUrlField = value;
                this.RaisePropertyChanged("MailServerUrl");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=43)]
        public bool IsPSServerCreated {
            get {
                return this.isPSServerCreatedField;
            }
            set {
                this.isPSServerCreatedField = value;
                this.RaisePropertyChanged("IsPSServerCreated");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class BackupInfo : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string[] fileNameField;
        
        private int[] requestIDField;
        
        private int[] assetIDField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=0)]
        public string[] FileName {
            get {
                return this.fileNameField;
            }
            set {
                this.fileNameField = value;
                this.RaisePropertyChanged("FileName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=1)]
        public int[] RequestID {
            get {
                return this.requestIDField;
            }
            set {
                this.requestIDField = value;
                this.RaisePropertyChanged("RequestID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=2)]
        public int[] AssetID {
            get {
                return this.assetIDField;
            }
            set {
                this.assetIDField = value;
                this.RaisePropertyChanged("AssetID");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class AssetInfo : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int[] zoneMasterServerField;
        
        private int[] m_Product_IDField;
        
        private int[] a_Asset_IDField;
        
        private bool[] isDBServerCreatedField;
        
        private bool[] isAppServerCreatedField;
        
        private bool[] isPSServerCreatedField;
        
        private bool[] isMailServerCreatedField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=0)]
        public int[] ZoneMasterServer {
            get {
                return this.zoneMasterServerField;
            }
            set {
                this.zoneMasterServerField = value;
                this.RaisePropertyChanged("ZoneMasterServer");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=1)]
        public int[] M_Product_ID {
            get {
                return this.m_Product_IDField;
            }
            set {
                this.m_Product_IDField = value;
                this.RaisePropertyChanged("M_Product_ID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=2)]
        public int[] A_Asset_ID {
            get {
                return this.a_Asset_IDField;
            }
            set {
                this.a_Asset_IDField = value;
                this.RaisePropertyChanged("A_Asset_ID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=3)]
        public bool[] IsDBServerCreated {
            get {
                return this.isDBServerCreatedField;
            }
            set {
                this.isDBServerCreatedField = value;
                this.RaisePropertyChanged("IsDBServerCreated");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=4)]
        public bool[] IsAppServerCreated {
            get {
                return this.isAppServerCreatedField;
            }
            set {
                this.isAppServerCreatedField = value;
                this.RaisePropertyChanged("IsAppServerCreated");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=5)]
        public bool[] IsPSServerCreated {
            get {
                return this.isPSServerCreatedField;
            }
            set {
                this.isPSServerCreatedField = value;
                this.RaisePropertyChanged("IsPSServerCreated");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=6)]
        public bool[] IsMailServerCreated {
            get {
                return this.isMailServerCreatedField;
            }
            set {
                this.isMailServerCreatedField = value;
                this.RaisePropertyChanged("IsMailServerCreated");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ServerAndFtpInfo : object, System.ComponentModel.INotifyPropertyChanged {
        
        private ServerInfo _ServerInfoField;
        
        private FTPInfo _FtpInfoField;
        
        private string errorMsgField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public ServerInfo _ServerInfo {
            get {
                return this._ServerInfoField;
            }
            set {
                this._ServerInfoField = value;
                this.RaisePropertyChanged("_ServerInfo");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public FTPInfo _FtpInfo {
            get {
                return this._FtpInfoField;
            }
            set {
                this._FtpInfoField = value;
                this.RaisePropertyChanged("_FtpInfo");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string ErrorMsg {
            get {
                return this.errorMsgField;
            }
            set {
                this.errorMsgField = value;
                this.RaisePropertyChanged("ErrorMsg");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class SiteProduct : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string productNameField;
        
        private decimal priceField;
        
        private string currencyField;
        
        private int productIDField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string ProductName {
            get {
                return this.productNameField;
            }
            set {
                this.productNameField = value;
                this.RaisePropertyChanged("ProductName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public decimal Price {
            get {
                return this.priceField;
            }
            set {
                this.priceField = value;
                this.RaisePropertyChanged("Price");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string Currency {
            get {
                return this.currencyField;
            }
            set {
                this.currencyField = value;
                this.RaisePropertyChanged("Currency");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public int ProductID {
            get {
                return this.productIDField;
            }
            set {
                this.productIDField = value;
                this.RaisePropertyChanged("ProductID");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class SiteZone : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string zoneNameField;
        
        private string zoneCodeField;
        
        private int zoneServerIDField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string ZoneName {
            get {
                return this.zoneNameField;
            }
            set {
                this.zoneNameField = value;
                this.RaisePropertyChanged("ZoneName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string ZoneCode {
            get {
                return this.zoneCodeField;
            }
            set {
                this.zoneCodeField = value;
                this.RaisePropertyChanged("ZoneCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public int ZoneServerID {
            get {
                return this.zoneServerIDField;
            }
            set {
                this.zoneServerIDField = value;
                this.RaisePropertyChanged("ZoneServerID");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Site : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string nameField;
        
        private string codeField;
        
        private int siteIDField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("Name");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
                this.RaisePropertyChanged("Code");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public int SiteID {
            get {
                return this.siteIDField;
            }
            set {
                this.siteIDField = value;
                this.RaisePropertyChanged("SiteID");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class SOTC : object, System.ComponentModel.INotifyPropertyChanged {
        
        private long updatetimerField;
        
        private string otkField;
        
        private string serialkeyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public long updatetimer {
            get {
                return this.updatetimerField;
            }
            set {
                this.updatetimerField = value;
                this.RaisePropertyChanged("updatetimer");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string otk {
            get {
                return this.otkField;
            }
            set {
                this.otkField = value;
                this.RaisePropertyChanged("otk");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string serialkey {
            get {
                return this.serialkeyField;
            }
            set {
                this.serialkeyField = value;
                this.RaisePropertyChanged("serialkey");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class FTP : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ftpurlusrField;
        
        private string ftpurlpwdField;
        
        private string lsfileurlField;
        
        private string lsfileupdateurlField;
        
        private string qzfileurlField;
        
        private string javafileurlField;
        
        private string tvfileurlField;
        
        private string lsversionField;
        
        private string lsuversionField;
        
        private string qzversionField;
        
        private string javaversionField;
        
        private string tvversionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string ftpurlusr {
            get {
                return this.ftpurlusrField;
            }
            set {
                this.ftpurlusrField = value;
                this.RaisePropertyChanged("ftpurlusr");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string ftpurlpwd {
            get {
                return this.ftpurlpwdField;
            }
            set {
                this.ftpurlpwdField = value;
                this.RaisePropertyChanged("ftpurlpwd");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string lsfileurl {
            get {
                return this.lsfileurlField;
            }
            set {
                this.lsfileurlField = value;
                this.RaisePropertyChanged("lsfileurl");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string lsfileupdateurl {
            get {
                return this.lsfileupdateurlField;
            }
            set {
                this.lsfileupdateurlField = value;
                this.RaisePropertyChanged("lsfileupdateurl");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string qzfileurl {
            get {
                return this.qzfileurlField;
            }
            set {
                this.qzfileurlField = value;
                this.RaisePropertyChanged("qzfileurl");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string javafileurl {
            get {
                return this.javafileurlField;
            }
            set {
                this.javafileurlField = value;
                this.RaisePropertyChanged("javafileurl");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string tvfileurl {
            get {
                return this.tvfileurlField;
            }
            set {
                this.tvfileurlField = value;
                this.RaisePropertyChanged("tvfileurl");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public string lsversion {
            get {
                return this.lsversionField;
            }
            set {
                this.lsversionField = value;
                this.RaisePropertyChanged("lsversion");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public string lsuversion {
            get {
                return this.lsuversionField;
            }
            set {
                this.lsuversionField = value;
                this.RaisePropertyChanged("lsuversion");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public string qzversion {
            get {
                return this.qzversionField;
            }
            set {
                this.qzversionField = value;
                this.RaisePropertyChanged("qzversion");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public string javaversion {
            get {
                return this.javaversionField;
            }
            set {
                this.javaversionField = value;
                this.RaisePropertyChanged("javaversion");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=11)]
        public string tvversion {
            get {
                return this.tvversionField;
            }
            set {
                this.tvversionField = value;
                this.RaisePropertyChanged("tvversion");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class PRINTER : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string[] printernameField;
        
        private string[] printerportField;
        
        private string[] printerportnameField;
        
        private string[] printeripField;
        
        private string[] printerdriverField;
        
        private bool[] printersharedField;
        
        private bool[] printerdefaultField;
        
        private int[] printerbrandField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=0)]
        public string[] printername {
            get {
                return this.printernameField;
            }
            set {
                this.printernameField = value;
                this.RaisePropertyChanged("printername");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=1)]
        public string[] printerport {
            get {
                return this.printerportField;
            }
            set {
                this.printerportField = value;
                this.RaisePropertyChanged("printerport");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=2)]
        public string[] printerportname {
            get {
                return this.printerportnameField;
            }
            set {
                this.printerportnameField = value;
                this.RaisePropertyChanged("printerportname");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=3)]
        public string[] printerip {
            get {
                return this.printeripField;
            }
            set {
                this.printeripField = value;
                this.RaisePropertyChanged("printerip");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=4)]
        public string[] printerdriver {
            get {
                return this.printerdriverField;
            }
            set {
                this.printerdriverField = value;
                this.RaisePropertyChanged("printerdriver");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=5)]
        public bool[] printershared {
            get {
                return this.printersharedField;
            }
            set {
                this.printersharedField = value;
                this.RaisePropertyChanged("printershared");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=6)]
        public bool[] printerdefault {
            get {
                return this.printerdefaultField;
            }
            set {
                this.printerdefaultField = value;
                this.RaisePropertyChanged("printerdefault");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=7)]
        public int[] printerbrand {
            get {
                return this.printerbrandField;
            }
            set {
                this.printerbrandField = value;
                this.RaisePropertyChanged("printerbrand");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class LOG : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Nullable<System.DateTime> lastLoginField;
        
        private System.Nullable<System.DateTime> lastUpdatedField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=0)]
        public System.Nullable<System.DateTime> LastLogin {
            get {
                return this.lastLoginField;
            }
            set {
                this.lastLoginField = value;
                this.RaisePropertyChanged("LastLogin");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=1)]
        public System.Nullable<System.DateTime> LastUpdated {
            get {
                return this.lastUpdatedField;
            }
            set {
                this.lastUpdatedField = value;
                this.RaisePropertyChanged("LastUpdated");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class MyTupleOfStringStringString : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string v1Field;
        
        private string v2Field;
        
        private string v3Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string v1 {
            get {
                return this.v1Field;
            }
            set {
                this.v1Field = value;
                this.RaisePropertyChanged("v1");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string v2 {
            get {
                return this.v2Field;
            }
            set {
                this.v2Field = value;
                this.RaisePropertyChanged("v2");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string v3 {
            get {
                return this.v3Field;
            }
            set {
                this.v3Field = value;
                this.RaisePropertyChanged("v3");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class CON : object, System.ComponentModel.INotifyPropertyChanged {
        
        private char startTypeField;
        
        private long updateTimerField;
        
        private string updateTimeFromField;
        
        private string updateTimeToField;
        
        private bool aLLDoneField;
        
        private bool iISRunningField;
        
        private bool dotnetInstalledField;
        
        private bool tVInstalledField;
        
        private bool tVWorkingField;
        
        private string tVFolderField;
        
        private bool javaInstalledField;
        
        private string javaPathField;
        
        private string javaFolderField;
        
        private string javaVersionField;
        
        private bool javaWorkingField;
        
        private bool javaHasUpdatesField;
        
        private bool qZInstalledField;
        
        private string qZFolderField;
        
        private string qZVersionField;
        
        private bool qZWorkingField;
        
        private bool qZHasUpdatesField;
        
        private int printerInstalledField;
        
        private int printerWorkingField;
        
        private MyTupleOfStringStringString[] printersField;
        
        private string printerNameField;
        
        private string printerPortField;
        
        private string printerStatusField;
        
        private bool lSInstalledField;
        
        private string lSFolderField;
        
        private string lSDataFolderField;
        
        private string lSOrderXMLField;
        
        private string lSVersionField;
        
        private bool lSWorkingField;
        
        private bool lSHasUpdatesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public char StartType {
            get {
                return this.startTypeField;
            }
            set {
                this.startTypeField = value;
                this.RaisePropertyChanged("StartType");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public long UpdateTimer {
            get {
                return this.updateTimerField;
            }
            set {
                this.updateTimerField = value;
                this.RaisePropertyChanged("UpdateTimer");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string UpdateTimeFrom {
            get {
                return this.updateTimeFromField;
            }
            set {
                this.updateTimeFromField = value;
                this.RaisePropertyChanged("UpdateTimeFrom");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string UpdateTimeTo {
            get {
                return this.updateTimeToField;
            }
            set {
                this.updateTimeToField = value;
                this.RaisePropertyChanged("UpdateTimeTo");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public bool ALLDone {
            get {
                return this.aLLDoneField;
            }
            set {
                this.aLLDoneField = value;
                this.RaisePropertyChanged("ALLDone");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public bool IISRunning {
            get {
                return this.iISRunningField;
            }
            set {
                this.iISRunningField = value;
                this.RaisePropertyChanged("IISRunning");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public bool DotnetInstalled {
            get {
                return this.dotnetInstalledField;
            }
            set {
                this.dotnetInstalledField = value;
                this.RaisePropertyChanged("DotnetInstalled");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public bool TVInstalled {
            get {
                return this.tVInstalledField;
            }
            set {
                this.tVInstalledField = value;
                this.RaisePropertyChanged("TVInstalled");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public bool TVWorking {
            get {
                return this.tVWorkingField;
            }
            set {
                this.tVWorkingField = value;
                this.RaisePropertyChanged("TVWorking");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public string TVFolder {
            get {
                return this.tVFolderField;
            }
            set {
                this.tVFolderField = value;
                this.RaisePropertyChanged("TVFolder");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public bool JavaInstalled {
            get {
                return this.javaInstalledField;
            }
            set {
                this.javaInstalledField = value;
                this.RaisePropertyChanged("JavaInstalled");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=11)]
        public string JavaPath {
            get {
                return this.javaPathField;
            }
            set {
                this.javaPathField = value;
                this.RaisePropertyChanged("JavaPath");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=12)]
        public string JavaFolder {
            get {
                return this.javaFolderField;
            }
            set {
                this.javaFolderField = value;
                this.RaisePropertyChanged("JavaFolder");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=13)]
        public string JavaVersion {
            get {
                return this.javaVersionField;
            }
            set {
                this.javaVersionField = value;
                this.RaisePropertyChanged("JavaVersion");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=14)]
        public bool JavaWorking {
            get {
                return this.javaWorkingField;
            }
            set {
                this.javaWorkingField = value;
                this.RaisePropertyChanged("JavaWorking");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=15)]
        public bool JavaHasUpdates {
            get {
                return this.javaHasUpdatesField;
            }
            set {
                this.javaHasUpdatesField = value;
                this.RaisePropertyChanged("JavaHasUpdates");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=16)]
        public bool QZInstalled {
            get {
                return this.qZInstalledField;
            }
            set {
                this.qZInstalledField = value;
                this.RaisePropertyChanged("QZInstalled");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=17)]
        public string QZFolder {
            get {
                return this.qZFolderField;
            }
            set {
                this.qZFolderField = value;
                this.RaisePropertyChanged("QZFolder");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=18)]
        public string QZVersion {
            get {
                return this.qZVersionField;
            }
            set {
                this.qZVersionField = value;
                this.RaisePropertyChanged("QZVersion");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=19)]
        public bool QZWorking {
            get {
                return this.qZWorkingField;
            }
            set {
                this.qZWorkingField = value;
                this.RaisePropertyChanged("QZWorking");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=20)]
        public bool QZHasUpdates {
            get {
                return this.qZHasUpdatesField;
            }
            set {
                this.qZHasUpdatesField = value;
                this.RaisePropertyChanged("QZHasUpdates");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=21)]
        public int PrinterInstalled {
            get {
                return this.printerInstalledField;
            }
            set {
                this.printerInstalledField = value;
                this.RaisePropertyChanged("PrinterInstalled");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=22)]
        public int PrinterWorking {
            get {
                return this.printerWorkingField;
            }
            set {
                this.printerWorkingField = value;
                this.RaisePropertyChanged("PrinterWorking");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=23)]
        public MyTupleOfStringStringString[] Printers {
            get {
                return this.printersField;
            }
            set {
                this.printersField = value;
                this.RaisePropertyChanged("Printers");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=24)]
        public string PrinterName {
            get {
                return this.printerNameField;
            }
            set {
                this.printerNameField = value;
                this.RaisePropertyChanged("PrinterName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=25)]
        public string PrinterPort {
            get {
                return this.printerPortField;
            }
            set {
                this.printerPortField = value;
                this.RaisePropertyChanged("PrinterPort");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=26)]
        public string PrinterStatus {
            get {
                return this.printerStatusField;
            }
            set {
                this.printerStatusField = value;
                this.RaisePropertyChanged("PrinterStatus");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=27)]
        public bool LSInstalled {
            get {
                return this.lSInstalledField;
            }
            set {
                this.lSInstalledField = value;
                this.RaisePropertyChanged("LSInstalled");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=28)]
        public string LSFolder {
            get {
                return this.lSFolderField;
            }
            set {
                this.lSFolderField = value;
                this.RaisePropertyChanged("LSFolder");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=29)]
        public string LSDataFolder {
            get {
                return this.lSDataFolderField;
            }
            set {
                this.lSDataFolderField = value;
                this.RaisePropertyChanged("LSDataFolder");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=30)]
        public string LSOrderXML {
            get {
                return this.lSOrderXMLField;
            }
            set {
                this.lSOrderXMLField = value;
                this.RaisePropertyChanged("LSOrderXML");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=31)]
        public string LSVersion {
            get {
                return this.lSVersionField;
            }
            set {
                this.lSVersionField = value;
                this.RaisePropertyChanged("LSVersion");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=32)]
        public bool LSWorking {
            get {
                return this.lSWorkingField;
            }
            set {
                this.lSWorkingField = value;
                this.RaisePropertyChanged("LSWorking");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=33)]
        public bool LSHasUpdates {
            get {
                return this.lSHasUpdatesField;
            }
            set {
                this.lSHasUpdatesField = value;
                this.RaisePropertyChanged("LSHasUpdates");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class PC : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string systemNameField;
        
        private string ipField;
        
        private string userNameField;
        
        private string mField;
        
        private string cField;
        
        private string cUIDField;
        
        private string oTKField;
        
        private string skField;
        
        private bool isNetworkOnlineField;
        
        private bool isHardwareActivatedField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string SystemName {
            get {
                return this.systemNameField;
            }
            set {
                this.systemNameField = value;
                this.RaisePropertyChanged("SystemName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string IP {
            get {
                return this.ipField;
            }
            set {
                this.ipField = value;
                this.RaisePropertyChanged("IP");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
                this.RaisePropertyChanged("UserName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string M {
            get {
                return this.mField;
            }
            set {
                this.mField = value;
                this.RaisePropertyChanged("M");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string C {
            get {
                return this.cField;
            }
            set {
                this.cField = value;
                this.RaisePropertyChanged("C");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string CUID {
            get {
                return this.cUIDField;
            }
            set {
                this.cUIDField = value;
                this.RaisePropertyChanged("CUID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string OTK {
            get {
                return this.oTKField;
            }
            set {
                this.oTKField = value;
                this.RaisePropertyChanged("OTK");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public string SK {
            get {
                return this.skField;
            }
            set {
                this.skField = value;
                this.RaisePropertyChanged("SK");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public bool IsNetworkOnline {
            get {
                return this.isNetworkOnlineField;
            }
            set {
                this.isNetworkOnlineField = value;
                this.RaisePropertyChanged("IsNetworkOnline");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public bool IsHardwareActivated {
            get {
                return this.isHardwareActivatedField;
            }
            set {
                this.isHardwareActivatedField = value;
                this.RaisePropertyChanged("IsHardwareActivated");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ConfigurationData : object, System.ComponentModel.INotifyPropertyChanged {
        
        private PC pcField;
        
        private CON cONField;
        
        private LOG lOGField;
        
        private PRINTER pRINTERField;
        
        private FTP fTPField;
        
        private SOTC sOTCField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public PC PC {
            get {
                return this.pcField;
            }
            set {
                this.pcField = value;
                this.RaisePropertyChanged("PC");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public CON CON {
            get {
                return this.cONField;
            }
            set {
                this.cONField = value;
                this.RaisePropertyChanged("CON");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public LOG LOG {
            get {
                return this.lOGField;
            }
            set {
                this.lOGField = value;
                this.RaisePropertyChanged("LOG");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public PRINTER PRINTER {
            get {
                return this.pRINTERField;
            }
            set {
                this.pRINTERField = value;
                this.RaisePropertyChanged("PRINTER");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public FTP FTP {
            get {
                return this.fTPField;
            }
            set {
                this.fTPField = value;
                this.RaisePropertyChanged("FTP");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public SOTC SOTC {
            get {
                return this.sOTCField;
            }
            set {
                this.sOTCField = value;
                this.RaisePropertyChanged("SOTC");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class CustomerPServerInfo : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string pServerAddressField;
        
        private string pServerAdminUserField;
        
        private string pServerAdminPwdField;
        
        private string ftpUrlField;
        
        private string ftpUserNameField;
        
        private string ftpPwdField;
        
        private string pSSitePathField;
        
        private string databaseIPField;
        
        private string dbUserNameField;
        
        private string dbPwdField;
        
        private string pServerUrlField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string PServerAddress {
            get {
                return this.pServerAddressField;
            }
            set {
                this.pServerAddressField = value;
                this.RaisePropertyChanged("PServerAddress");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string PServerAdminUser {
            get {
                return this.pServerAdminUserField;
            }
            set {
                this.pServerAdminUserField = value;
                this.RaisePropertyChanged("PServerAdminUser");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string PServerAdminPwd {
            get {
                return this.pServerAdminPwdField;
            }
            set {
                this.pServerAdminPwdField = value;
                this.RaisePropertyChanged("PServerAdminPwd");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string ftpUrl {
            get {
                return this.ftpUrlField;
            }
            set {
                this.ftpUrlField = value;
                this.RaisePropertyChanged("ftpUrl");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string ftpUserName {
            get {
                return this.ftpUserNameField;
            }
            set {
                this.ftpUserNameField = value;
                this.RaisePropertyChanged("ftpUserName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string ftpPwd {
            get {
                return this.ftpPwdField;
            }
            set {
                this.ftpPwdField = value;
                this.RaisePropertyChanged("ftpPwd");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string PSSitePath {
            get {
                return this.pSSitePathField;
            }
            set {
                this.pSSitePathField = value;
                this.RaisePropertyChanged("PSSitePath");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public string databaseIP {
            get {
                return this.databaseIPField;
            }
            set {
                this.databaseIPField = value;
                this.RaisePropertyChanged("databaseIP");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public string dbUserName {
            get {
                return this.dbUserNameField;
            }
            set {
                this.dbUserNameField = value;
                this.RaisePropertyChanged("dbUserName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public string dbPwd {
            get {
                return this.dbPwdField;
            }
            set {
                this.dbPwdField = value;
                this.RaisePropertyChanged("dbPwd");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public string PServerUrl {
            get {
                return this.pServerUrlField;
            }
            set {
                this.pServerUrlField = value;
                this.RaisePropertyChanged("PServerUrl");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class RequestedModuleInfo : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int moduleInfo_IDField;
        
        private string svcPathField;
        
        private int requestIDField;
        
        private int aD_User_IDField;
        
        private string modtypeField;
        
        private int[] aD_Client_IDsField;
        
        private string[] langIDsField;
        
        private string moduleNameField;
        
        private string urlField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int ModuleInfo_ID {
            get {
                return this.moduleInfo_IDField;
            }
            set {
                this.moduleInfo_IDField = value;
                this.RaisePropertyChanged("ModuleInfo_ID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string svcPath {
            get {
                return this.svcPathField;
            }
            set {
                this.svcPathField = value;
                this.RaisePropertyChanged("svcPath");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public int RequestID {
            get {
                return this.requestIDField;
            }
            set {
                this.requestIDField = value;
                this.RaisePropertyChanged("RequestID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public int AD_User_ID {
            get {
                return this.aD_User_IDField;
            }
            set {
                this.aD_User_IDField = value;
                this.RaisePropertyChanged("AD_User_ID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string modtype {
            get {
                return this.modtypeField;
            }
            set {
                this.modtypeField = value;
                this.RaisePropertyChanged("modtype");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=5)]
        public int[] AD_Client_IDs {
            get {
                return this.aD_Client_IDsField;
            }
            set {
                this.aD_Client_IDsField = value;
                this.RaisePropertyChanged("AD_Client_IDs");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=6)]
        public string[] langIDs {
            get {
                return this.langIDsField;
            }
            set {
                this.langIDsField = value;
                this.RaisePropertyChanged("langIDs");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public string ModuleName {
            get {
                return this.moduleNameField;
            }
            set {
                this.moduleNameField = value;
                this.RaisePropertyChanged("ModuleName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public string Url {
            get {
                return this.urlField;
            }
            set {
                this.urlField = value;
                this.RaisePropertyChanged("Url");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class AssetNotInUse : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int a_Asset_IDField;
        
        private System.Nullable<System.DateTime> dateLastLoginField;
        
        private System.Nullable<System.DateTime> dateCreatedField;
        
        private System.Nullable<System.DateTime> dateUpdatedField;
        
        private System.Nullable<System.DateTime> sentNoticeDateField;
        
        private System.Nullable<bool> sendNoticeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int A_Asset_ID {
            get {
                return this.a_Asset_IDField;
            }
            set {
                this.a_Asset_IDField = value;
                this.RaisePropertyChanged("A_Asset_ID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=1)]
        public System.Nullable<System.DateTime> DateLastLogin {
            get {
                return this.dateLastLoginField;
            }
            set {
                this.dateLastLoginField = value;
                this.RaisePropertyChanged("DateLastLogin");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=2)]
        public System.Nullable<System.DateTime> DateCreated {
            get {
                return this.dateCreatedField;
            }
            set {
                this.dateCreatedField = value;
                this.RaisePropertyChanged("DateCreated");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=3)]
        public System.Nullable<System.DateTime> DateUpdated {
            get {
                return this.dateUpdatedField;
            }
            set {
                this.dateUpdatedField = value;
                this.RaisePropertyChanged("DateUpdated");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=4)]
        public System.Nullable<System.DateTime> SentNoticeDate {
            get {
                return this.sentNoticeDateField;
            }
            set {
                this.sentNoticeDateField = value;
                this.RaisePropertyChanged("SentNoticeDate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=5)]
        public System.Nullable<bool> SendNotice {
            get {
                return this.sendNoticeField;
            }
            set {
                this.sendNoticeField = value;
                this.RaisePropertyChanged("SendNotice");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class InCompleteDBInfo : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string systemUserNameField;
        
        private string systemPwdField;
        
        private string dBSystemUserNameField;
        
        private string dBSystemPwdField;
        
        private string dBUserNameField;
        
        private string dBPwdField;
        
        private string dBServiceField;
        
        private string portField;
        
        private string globalIPField;
        
        private int dbIDField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string SystemUserName {
            get {
                return this.systemUserNameField;
            }
            set {
                this.systemUserNameField = value;
                this.RaisePropertyChanged("SystemUserName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string SystemPwd {
            get {
                return this.systemPwdField;
            }
            set {
                this.systemPwdField = value;
                this.RaisePropertyChanged("SystemPwd");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string DBSystemUserName {
            get {
                return this.dBSystemUserNameField;
            }
            set {
                this.dBSystemUserNameField = value;
                this.RaisePropertyChanged("DBSystemUserName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string DBSystemPwd {
            get {
                return this.dBSystemPwdField;
            }
            set {
                this.dBSystemPwdField = value;
                this.RaisePropertyChanged("DBSystemPwd");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string DBUserName {
            get {
                return this.dBUserNameField;
            }
            set {
                this.dBUserNameField = value;
                this.RaisePropertyChanged("DBUserName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string DBPwd {
            get {
                return this.dBPwdField;
            }
            set {
                this.dBPwdField = value;
                this.RaisePropertyChanged("DBPwd");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string DBService {
            get {
                return this.dBServiceField;
            }
            set {
                this.dBServiceField = value;
                this.RaisePropertyChanged("DBService");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public string Port {
            get {
                return this.portField;
            }
            set {
                this.portField = value;
                this.RaisePropertyChanged("Port");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public string GlobalIP {
            get {
                return this.globalIPField;
            }
            set {
                this.globalIPField = value;
                this.RaisePropertyChanged("GlobalIP");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public int dbID {
            get {
                return this.dbIDField;
            }
            set {
                this.dbIDField = value;
                this.RaisePropertyChanged("dbID");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetCustomerNewTicket", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class SetCustomerNewTicketRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int PriorityUser;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] file;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public int ad_user_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public string Summary;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public string FileName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=5)]
        public string AccessKey;
        
        public SetCustomerNewTicketRequest() {
        }
        
        public SetCustomerNewTicketRequest(int PriorityUser, byte[] file, int ad_user_id, string Summary, string FileName, string AccessKey) {
            this.PriorityUser = PriorityUser;
            this.file = file;
            this.ad_user_id = ad_user_id;
            this.Summary = Summary;
            this.FileName = FileName;
            this.AccessKey = AccessKey;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetCustomerNewTicketResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class SetCustomerNewTicketResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string SetCustomerNewTicketResult;
        
        public SetCustomerNewTicketResponse() {
        }
        
        public SetCustomerNewTicketResponse(string SetCustomerNewTicketResult) {
            this.SetCustomerNewTicketResult = SetCustomerNewTicketResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetCustomerTicketHistoryLines", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class SetCustomerTicketHistoryLinesRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int ad_user_ID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] file;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public int documentNo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public string result;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public string FileName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=5)]
        public string AccessKey;
        
        public SetCustomerTicketHistoryLinesRequest() {
        }
        
        public SetCustomerTicketHistoryLinesRequest(int ad_user_ID, byte[] file, int documentNo, string result, string FileName, string AccessKey) {
            this.ad_user_ID = ad_user_ID;
            this.file = file;
            this.documentNo = documentNo;
            this.result = result;
            this.FileName = FileName;
            this.AccessKey = AccessKey;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetCustomerTicketHistoryLinesResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class SetCustomerTicketHistoryLinesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string SetCustomerTicketHistoryLinesResult;
        
        public SetCustomerTicketHistoryLinesResponse() {
        }
        
        public SetCustomerTicketHistoryLinesResponse(string SetCustomerTicketHistoryLinesResult) {
            this.SetCustomerTicketHistoryLinesResult = SetCustomerTicketHistoryLinesResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DownloadFile", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class DownloadFileRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int UserID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string licenceKey;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string accessKey;
        
        public DownloadFileRequest() {
        }
        
        public DownloadFileRequest(int UserID, string licenceKey, string accessKey) {
            this.UserID = UserID;
            this.licenceKey = licenceKey;
            this.accessKey = accessKey;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DownloadFileResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class DownloadFileResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] DownloadFileResult;
        
        public DownloadFileResponse() {
        }
        
        public DownloadFileResponse(byte[] DownloadFileResult) {
            this.DownloadFileResult = DownloadFileResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RegisterInfoFromModule", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class RegisterInfoFromModuleRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string userName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string pwd;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string companyName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public string fullName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public string mobile;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=5)]
        public string phone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=6)]
        public string emailid;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=7)]
        public string address;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=8)]
        public int countryid;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=9)]
        public int regionid;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=10)]
        public string city;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=11)]
        public int productID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=12)]
        public string productName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=13)]
        public string cardType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=14)]
        public string cardNumber;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=15)]
        public string csvNumber;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=16)]
        public string cardName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=17)]
        public int expiryDay;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=18)]
        public int expiryMonth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=19)]
        public int expiryYear;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=20)]
        public string billingAddress;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=21)]
        public string billingCity;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=22)]
        public string billingZip;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=23)]
        public int billingCountryID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=24)]
        public string domainUserID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=25)]
        public string domainUserLink;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=26)]
        public string domainName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=27)]
        public string gender;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=28)]
        public int birthDay;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=29)]
        public int birthMonth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=30)]
        public int birthYear;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=31)]
        public string ipAddress;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=32)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> Campaign_ID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=33)]
        public string accessKey;
        
        public RegisterInfoFromModuleRequest() {
        }
        
        public RegisterInfoFromModuleRequest(
                    string userName, 
                    string pwd, 
                    string companyName, 
                    string fullName, 
                    string mobile, 
                    string phone, 
                    string emailid, 
                    string address, 
                    int countryid, 
                    int regionid, 
                    string city, 
                    int productID, 
                    string productName, 
                    string cardType, 
                    string cardNumber, 
                    string csvNumber, 
                    string cardName, 
                    int expiryDay, 
                    int expiryMonth, 
                    int expiryYear, 
                    string billingAddress, 
                    string billingCity, 
                    string billingZip, 
                    int billingCountryID, 
                    string domainUserID, 
                    string domainUserLink, 
                    string domainName, 
                    string gender, 
                    int birthDay, 
                    int birthMonth, 
                    int birthYear, 
                    string ipAddress, 
                    System.Nullable<int> Campaign_ID, 
                    string accessKey) {
            this.userName = userName;
            this.pwd = pwd;
            this.companyName = companyName;
            this.fullName = fullName;
            this.mobile = mobile;
            this.phone = phone;
            this.emailid = emailid;
            this.address = address;
            this.countryid = countryid;
            this.regionid = regionid;
            this.city = city;
            this.productID = productID;
            this.productName = productName;
            this.cardType = cardType;
            this.cardNumber = cardNumber;
            this.csvNumber = csvNumber;
            this.cardName = cardName;
            this.expiryDay = expiryDay;
            this.expiryMonth = expiryMonth;
            this.expiryYear = expiryYear;
            this.billingAddress = billingAddress;
            this.billingCity = billingCity;
            this.billingZip = billingZip;
            this.billingCountryID = billingCountryID;
            this.domainUserID = domainUserID;
            this.domainUserLink = domainUserLink;
            this.domainName = domainName;
            this.gender = gender;
            this.birthDay = birthDay;
            this.birthMonth = birthMonth;
            this.birthYear = birthYear;
            this.ipAddress = ipAddress;
            this.Campaign_ID = Campaign_ID;
            this.accessKey = accessKey;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RegisterInfoFromModuleResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class RegisterInfoFromModuleResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string RegisterInfoFromModuleResult;
        
        public RegisterInfoFromModuleResponse() {
        }
        
        public RegisterInfoFromModuleResponse(string RegisterInfoFromModuleResult) {
            this.RegisterInfoFromModuleResult = RegisterInfoFromModuleResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RegisterTempInfo", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class RegisterTempInfoRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string firstName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string lastName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string fullName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public string userName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public string companyName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=5)]
        public string emailid;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=6)]
        public string password;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=7)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> countryid;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=8)]
        public string city;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=9)]
        public int productID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=10)]
        public string productName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=11)]
        public string ipAddress;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=12)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> Campaign_ID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=13)]
        public string accessKey;
        
        public RegisterTempInfoRequest() {
        }
        
        public RegisterTempInfoRequest(string firstName, string lastName, string fullName, string userName, string companyName, string emailid, string password, System.Nullable<int> countryid, string city, int productID, string productName, string ipAddress, System.Nullable<int> Campaign_ID, string accessKey) {
            this.firstName = firstName;
            this.lastName = lastName;
            this.fullName = fullName;
            this.userName = userName;
            this.companyName = companyName;
            this.emailid = emailid;
            this.password = password;
            this.countryid = countryid;
            this.city = city;
            this.productID = productID;
            this.productName = productName;
            this.ipAddress = ipAddress;
            this.Campaign_ID = Campaign_ID;
            this.accessKey = accessKey;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RegisterTempInfoResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class RegisterTempInfoResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string RegisterTempInfoResult;
        
        public RegisterTempInfoResponse() {
        }
        
        public RegisterTempInfoResponse(string RegisterTempInfoResult) {
            this.RegisterTempInfoResult = RegisterTempInfoResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="VRegisterInfoT", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class VRegisterInfoTRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string firstName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string lastName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string fullName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public string userName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public string companyName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=5)]
        public string emailid;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=6)]
        public string password;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=7)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> countryid;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=8)]
        public string city;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=9)]
        public int productID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=10)]
        public string productName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=11)]
        public string ipAddress;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=12)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> Campaign_ID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=13)]
        public string accessKey;
        
        public VRegisterInfoTRequest() {
        }
        
        public VRegisterInfoTRequest(string firstName, string lastName, string fullName, string userName, string companyName, string emailid, string password, System.Nullable<int> countryid, string city, int productID, string productName, string ipAddress, System.Nullable<int> Campaign_ID, string accessKey) {
            this.firstName = firstName;
            this.lastName = lastName;
            this.fullName = fullName;
            this.userName = userName;
            this.companyName = companyName;
            this.emailid = emailid;
            this.password = password;
            this.countryid = countryid;
            this.city = city;
            this.productID = productID;
            this.productName = productName;
            this.ipAddress = ipAddress;
            this.Campaign_ID = Campaign_ID;
            this.accessKey = accessKey;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="VRegisterInfoTResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class VRegisterInfoTResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string VRegisterInfoTResult;
        
        public VRegisterInfoTResponse() {
        }
        
        public VRegisterInfoTResponse(string VRegisterInfoTResult) {
            this.VRegisterInfoTResult = VRegisterInfoTResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="VRegisterInfo", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class VRegisterInfoRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string userName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string pwd;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string companyName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public string fullName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public string mobile;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=5)]
        public string phone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=6)]
        public string emailid;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=7)]
        public string address;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=8)]
        public int countryid;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=9)]
        public int regionid;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=10)]
        public string city;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=11)]
        public int productID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=12)]
        public string productName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=13)]
        public string cardType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=14)]
        public int cardNumber;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=15)]
        public string csvNumber;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=16)]
        public string cardName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=17)]
        public int expiryDay;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=18)]
        public int expiryMonth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=19)]
        public int expiryYear;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=20)]
        public string billingAddress;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=21)]
        public string billingCity;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=22)]
        public string billingZip;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=23)]
        public int billingCountryID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=24)]
        public string domainUserID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=25)]
        public string domainUserLink;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=26)]
        public string domainName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=27)]
        public string gender;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=28)]
        public int birthDay;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=29)]
        public int birthMonth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=30)]
        public int birthYear;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=31)]
        public string ipAddress;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=32)]
        public string SocialRegType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=33)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> CampaignID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=34)]
        public char IsSocialRegistration;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=35)]
        public string accessKey;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=36)]
        public string firstName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=37)]
        public string lastName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=38)]
        public string originFrom;
        
        public VRegisterInfoRequest() {
        }
        
        public VRegisterInfoRequest(
                    string userName, 
                    string pwd, 
                    string companyName, 
                    string fullName, 
                    string mobile, 
                    string phone, 
                    string emailid, 
                    string address, 
                    int countryid, 
                    int regionid, 
                    string city, 
                    int productID, 
                    string productName, 
                    string cardType, 
                    int cardNumber, 
                    string csvNumber, 
                    string cardName, 
                    int expiryDay, 
                    int expiryMonth, 
                    int expiryYear, 
                    string billingAddress, 
                    string billingCity, 
                    string billingZip, 
                    int billingCountryID, 
                    string domainUserID, 
                    string domainUserLink, 
                    string domainName, 
                    string gender, 
                    int birthDay, 
                    int birthMonth, 
                    int birthYear, 
                    string ipAddress, 
                    string SocialRegType, 
                    System.Nullable<int> CampaignID, 
                    char IsSocialRegistration, 
                    string accessKey, 
                    string firstName, 
                    string lastName, 
                    string originFrom) {
            this.userName = userName;
            this.pwd = pwd;
            this.companyName = companyName;
            this.fullName = fullName;
            this.mobile = mobile;
            this.phone = phone;
            this.emailid = emailid;
            this.address = address;
            this.countryid = countryid;
            this.regionid = regionid;
            this.city = city;
            this.productID = productID;
            this.productName = productName;
            this.cardType = cardType;
            this.cardNumber = cardNumber;
            this.csvNumber = csvNumber;
            this.cardName = cardName;
            this.expiryDay = expiryDay;
            this.expiryMonth = expiryMonth;
            this.expiryYear = expiryYear;
            this.billingAddress = billingAddress;
            this.billingCity = billingCity;
            this.billingZip = billingZip;
            this.billingCountryID = billingCountryID;
            this.domainUserID = domainUserID;
            this.domainUserLink = domainUserLink;
            this.domainName = domainName;
            this.gender = gender;
            this.birthDay = birthDay;
            this.birthMonth = birthMonth;
            this.birthYear = birthYear;
            this.ipAddress = ipAddress;
            this.SocialRegType = SocialRegType;
            this.CampaignID = CampaignID;
            this.IsSocialRegistration = IsSocialRegistration;
            this.accessKey = accessKey;
            this.firstName = firstName;
            this.lastName = lastName;
            this.originFrom = originFrom;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="VRegisterInfoResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class VRegisterInfoResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string VRegisterInfoResult;
        
        public VRegisterInfoResponse() {
        }
        
        public VRegisterInfoResponse(string VRegisterInfoResult) {
            this.VRegisterInfoResult = VRegisterInfoResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAmount", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetAmountRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int m_product_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public int user;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string accessKey;
        
        public GetAmountRequest() {
        }
        
        public GetAmountRequest(int m_product_id, int user, string accessKey) {
            this.m_product_id = m_product_id;
            this.user = user;
            this.accessKey = accessKey;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAmountResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetAmountResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<decimal> GetAmountResult;
        
        public GetAmountResponse() {
        }
        
        public GetAmountResponse(System.Nullable<decimal> GetAmountResult) {
            this.GetAmountResult = GetAmountResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SubscribeProduct", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class SubscribeProductRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int AD_User_ID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public int M_Product_ID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string fileName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> backupAfter;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public string ipaddress;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=5)]
        public string accessKey;
        
        public SubscribeProductRequest() {
        }
        
        public SubscribeProductRequest(int AD_User_ID, int M_Product_ID, string fileName, System.Nullable<int> backupAfter, string ipaddress, string accessKey) {
            this.AD_User_ID = AD_User_ID;
            this.M_Product_ID = M_Product_ID;
            this.fileName = fileName;
            this.backupAfter = backupAfter;
            this.ipaddress = ipaddress;
            this.accessKey = accessKey;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SubscribeProductResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class SubscribeProductResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string SubscribeProductResult;
        
        public SubscribeProductResponse() {
        }
        
        public SubscribeProductResponse(string SubscribeProductResult) {
            this.SubscribeProductResult = SubscribeProductResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateAsset", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UpdateAssetRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int A_Asset_ID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> isAppServerCreated;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> isDBServerCreated;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public bool ISPSServerCreated;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public string fileVersion;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=5)]
        public string accessKey;
        
        public UpdateAssetRequest() {
        }
        
        public UpdateAssetRequest(int A_Asset_ID, System.Nullable<bool> isAppServerCreated, System.Nullable<bool> isDBServerCreated, bool ISPSServerCreated, string fileVersion, string accessKey) {
            this.A_Asset_ID = A_Asset_ID;
            this.isAppServerCreated = isAppServerCreated;
            this.isDBServerCreated = isDBServerCreated;
            this.ISPSServerCreated = ISPSServerCreated;
            this.fileVersion = fileVersion;
            this.accessKey = accessKey;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateAssetResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UpdateAssetResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string UpdateAssetResult;
        
        public UpdateAssetResponse() {
        }
        
        public UpdateAssetResponse(string UpdateAssetResult) {
            this.UpdateAssetResult = UpdateAssetResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SaveErrorLog", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class SaveErrorLogRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int AD_User_ID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public int A_Asset_ID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> CS_CustomerTenantInfo_ID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public int errorNo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> R_Request_ID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=5)]
        public string InnerError;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=6)]
        public string accessKey;
        
        public SaveErrorLogRequest() {
        }
        
        public SaveErrorLogRequest(int AD_User_ID, int A_Asset_ID, System.Nullable<int> CS_CustomerTenantInfo_ID, int errorNo, System.Nullable<int> R_Request_ID, string InnerError, string accessKey) {
            this.AD_User_ID = AD_User_ID;
            this.A_Asset_ID = A_Asset_ID;
            this.CS_CustomerTenantInfo_ID = CS_CustomerTenantInfo_ID;
            this.errorNo = errorNo;
            this.R_Request_ID = R_Request_ID;
            this.InnerError = InnerError;
            this.accessKey = accessKey;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SaveErrorLogResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class SaveErrorLogResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string SaveErrorLogResult;
        
        public SaveErrorLogResponse() {
        }
        
        public SaveErrorLogResponse(string SaveErrorLogResult) {
            this.SaveErrorLogResult = SaveErrorLogResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SaveErrorInLogM1", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class SaveErrorInLogM1Request {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string customerValue;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public int errorNumber;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> R_Request_ID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public string accessKey;
        
        public SaveErrorInLogM1Request() {
        }
        
        public SaveErrorInLogM1Request(string customerValue, int errorNumber, System.Nullable<int> R_Request_ID, string accessKey) {
            this.customerValue = customerValue;
            this.errorNumber = errorNumber;
            this.R_Request_ID = R_Request_ID;
            this.accessKey = accessKey;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SaveErrorInLogM1Response", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class SaveErrorInLogM1Response {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string SaveErrorInLogM1Result;
        
        public SaveErrorInLogM1Response() {
        }
        
        public SaveErrorInLogM1Response(string SaveErrorInLogM1Result) {
            this.SaveErrorInLogM1Result = SaveErrorInLogM1Result;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DownloadDump", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class DownloadDumpRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int Ad_user_ID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string fileName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string accessKey;
        
        public DownloadDumpRequest() {
        }
        
        public DownloadDumpRequest(int Ad_user_ID, string fileName, string accessKey) {
            this.Ad_user_ID = Ad_user_ID;
            this.fileName = fileName;
            this.accessKey = accessKey;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DownloadDumpResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class DownloadDumpResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] DownloadDumpResult;
        
        public DownloadDumpResponse() {
        }
        
        public DownloadDumpResponse(byte[] DownloadDumpResult) {
            this.DownloadDumpResult = DownloadDumpResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ServiceSoapChannel : BaseLibrary.CloudService.ServiceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetNewsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetNewsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCustomerOpenTicketsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCustomerOpenTicketsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPartnerLeadsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPartnerLeadsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PartnerLoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public PartnerLoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDetailedCustomerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDetailedCustomerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCustomerProspectListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCustomerProspectListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPartnerRecentTicketsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPartnerRecentTicketsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SetCustomerAssociationWithPartnerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SetCustomerAssociationWithPartnerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCustomerBillingDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCustomerBillingDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPartnerLinksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPartnerLinksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCustomerDetailedViewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCustomerDetailedViewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetVCustomerDetailsViewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetVCustomerDetailsViewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetProductPriceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetProductPriceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetProfessionalProductPriceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetProfessionalProductPriceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetTotalCurrentUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetTotalCurrentUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpgradeOrRenewVCustomerSubscriptionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpgradeOrRenewVCustomerSubscriptionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPartnerDetailsViewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPartnerDetailsViewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddNewLinkofPartnerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddNewLinkofPartnerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDetailsViewPartnerSubscriptionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDetailsViewPartnerSubscriptionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDetailsViewCustomerSubscriptionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDetailsViewCustomerSubscriptionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpgradeOrRenewSubscriptionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpgradeOrRenewSubscriptionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPartnerCustomerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPartnerCustomerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCustomerFilteredTicketsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCustomerFilteredTicketsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SetForwardTicketsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SetForwardTicketsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPartnerFilteredTicketsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPartnerFilteredTicketsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetLeadStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetLeadStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCustomerAddOnsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCustomerAddOnsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SetPartnerAccountInformationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SetPartnerAccountInformationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SetCustomerAccountInformationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SetCustomerAccountInformationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SetLeadStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SetLeadStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPartnerPlansCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPartnerPlansCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPartnerListingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPartnerListingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPartnerFilteredListingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPartnerFilteredListingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPartnerLeadDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPartnerLeadDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CancellAssociationRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CancellAssociationRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeletePartnerLinkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeletePartnerLinkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class partnerAssociationRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public partnerAssociationRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPartnerCountriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPartnerCountriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAssociatedSPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAssociatedSPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AboutviennaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AboutviennaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public BaseLibrary.CloudService.AboutUs Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((BaseLibrary.CloudService.AboutUs)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetSupportTicketStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSupportTicketStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCustomerStatusSupportTicketCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCustomerStatusSupportTicketCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCustomerSupportTicketsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCustomerSupportTicketsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCustomerHistoryLinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCustomerHistoryLinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCustomerTicketPriorityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCustomerTicketPriorityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCustomerTicketRequestTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCustomerTicketRequestTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SetCustomerNewTicketCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SetCustomerNewTicketCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SetCustomerTicketHistoryLinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SetCustomerTicketHistoryLinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCustomerTicketDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCustomerTicketDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SetDBRestoreCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SetDBRestoreCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetVUnBilledInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetVUnBilledInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetVCustomerBillingSummaryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetVCustomerBillingSummaryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetVBillingInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetVBillingInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SetLeadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SetLeadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetTopicInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetTopicInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string error {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetInstructionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetInstructionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string error {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class serverInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public serverInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetOldIncomleteDBCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetOldIncomleteDBCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public BaseLibrary.CloudService.InCompleteDBInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((BaseLibrary.CloudService.InCompleteDBInfo)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeleteDBEntryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeleteDBEntryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAssetNotInUseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAssetNotInUseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public BaseLibrary.CloudService.AssetNotInUse[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((BaseLibrary.CloudService.AssetNotInUse[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SendNoticeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SendNoticeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SendReminderExpMailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SendReminderExpMailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DownloadFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DownloadFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CheckUserFilesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CheckUserFilesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCurrentRunningTenantCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCurrentRunningTenantCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ModuleInstallationRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ModuleInstallationRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetRequestToInstallModuleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetRequestToInstallModuleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public BaseLibrary.CloudService.RequestedModuleInfo[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((BaseLibrary.CloudService.RequestedModuleInfo[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCustomerPServerInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCustomerPServerInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public BaseLibrary.CloudService.CustomerPServerInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((BaseLibrary.CloudService.CustomerPServerInfo)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetSubscriptionDaysCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSubscriptionDaysCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PackageEntryIntoItemMasterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public PackageEntryIntoItemMasterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AuthenticateHardwareCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AuthenticateHardwareCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class IsHardwareActivatedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public IsHardwareActivatedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SOTCSettingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SOTCSettingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SKCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SKCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CreadientialsWorkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CreadientialsWorkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SavePrinterListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SavePrinterListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPrinterListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPrinterListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CheckUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CheckUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MarkReadyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public MarkReadyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InsertUpdateConfigCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public InsertUpdateConfigCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetHardwaresCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetHardwaresCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ActivateUpdateHardwareCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ActivateUpdateHardwareCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetConsolesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetConsolesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetModelBrandDriverCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetModelBrandDriverCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetSetPrintersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSetPrintersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPrintersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPrintersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetSetLocalServersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSetLocalServersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetSetUpdateTimeSettingsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSetUpdateTimeSettingsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetSiteInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSiteInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public BaseLibrary.CloudService.Site[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((BaseLibrary.CloudService.Site[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetSiteZoneInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSiteZoneInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public BaseLibrary.CloudService.SiteZone[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((BaseLibrary.CloudService.SiteZone[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetSiteProductInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSiteProductInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public BaseLibrary.CloudService.SiteProduct[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((BaseLibrary.CloudService.SiteProduct[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class HelloCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public HelloCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SaveCustomerTenentInfoM1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SaveCustomerTenentInfoM1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SaveCustomerTenentInfoM1fromMobileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SaveCustomerTenentInfoM1fromMobileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SaveCustomerTenentInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SaveCustomerTenentInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class IsDomainExistCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public IsDomainExistCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RegisterInfoFromModuleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RegisterInfoFromModuleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetVideosFromDMSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetVideosFromDMSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RegisterTempInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RegisterTempInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RegisterInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RegisterInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class VRegisterInfoTCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public VRegisterInfoTCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class VRegisterInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public VRegisterInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCustomerServerAndFTPInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCustomerServerAndFTPInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public BaseLibrary.CloudService.ServerAndFtpInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((BaseLibrary.CloudService.ServerAndFtpInfo)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCustomerServerInfoM1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCustomerServerInfoM1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public BaseLibrary.CloudService.ServerInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((BaseLibrary.CloudService.ServerInfo)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCustomerServerInfoM2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCustomerServerInfoM2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public BaseLibrary.CloudService.ServerInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((BaseLibrary.CloudService.ServerInfo)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCustomerServerInfoM3CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCustomerServerInfoM3CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public BaseLibrary.CloudService.ServerInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((BaseLibrary.CloudService.ServerInfo)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCustomerServerInfoM4CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCustomerServerInfoM4CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public BaseLibrary.CloudService.ServerInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((BaseLibrary.CloudService.ServerInfo)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class VerifyUserM1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public VerifyUserM1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetUniqueUserKeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetUniqueUserKeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAmountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAmountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Nullable<decimal> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Nullable<decimal>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SubscribeProductCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SubscribeProductCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UnSubscribeProductCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UnSubscribeProductCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetFTPInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetFTPInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public BaseLibrary.CloudService.FTPInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((BaseLibrary.CloudService.FTPInfo)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllCountriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllCountriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllCountriesFromMobileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllCountriesFromMobileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetNewTenantCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetNewTenantCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public BaseLibrary.CloudService.AssetInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((BaseLibrary.CloudService.AssetInfo)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetRelatedProductCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetRelatedProductCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCustomerAccountDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCustomerAccountDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetRelatedProductM1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetRelatedProductM1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SetCustomerAccountDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SetCustomerAccountDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCustomerNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCustomerNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCustomerNotificationM1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCustomerNotificationM1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AcknowledgeCustomerNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AcknowledgeCustomerNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCustomerCompanyDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCustomerCompanyDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public LoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LoginFromMobileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public LoginFromMobileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class VLoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public VLoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class IsFreeProductCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public IsFreeProductCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CheckUserVerifiedM1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CheckUserVerifiedM1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CheckUserVerifiedM2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CheckUserVerifiedM2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCustomerDBBackUpCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCustomerDBBackUpCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RestoreDBBackUpCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RestoreDBBackUpCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class VerifyUserM2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public VerifyUserM2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class VerifyUserM3CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public VerifyUserM3CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class VerifyUserM4CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public VerifyUserM4CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeleteDBBackUpCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeleteDBBackUpCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CreateBackUpCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CreateBackUpCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ChangeAdminPasswordOnClientERPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ChangeAdminPasswordOnClientERPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCustomerZoneCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCustomerZoneCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ForgetPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ForgetPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class VForgetPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public VForgetPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdateAssetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateAssetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllCurrencyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllCurrencyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllCurrencyFromMobileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllCurrencyFromMobileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CreateTenantCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CreateTenantCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllDBBackupRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllDBBackupRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public BaseLibrary.CloudService.BackupInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((BaseLibrary.CloudService.BackupInfo)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CloseRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CloseRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FailedRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public FailedRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCustomerSpaceM1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCustomerSpaceM1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCustomerSpaceM2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCustomerSpaceM2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SetCustomerSpaceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SetCustomerSpaceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllDBDeleteRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllDBDeleteRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public BaseLibrary.CloudService.BackupInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((BaseLibrary.CloudService.BackupInfo)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllDBRestoreRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllDBRestoreRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public BaseLibrary.CloudService.BackupInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((BaseLibrary.CloudService.BackupInfo)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CreateCustomerUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CreateCustomerUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class VerifyTenantCreatedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public VerifyTenantCreatedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class VerifyTenantCreatedFromMobileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public VerifyTenantCreatedFromMobileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllZoneMasterServerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllZoneMasterServerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllZoneMasterServerFromMobileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllZoneMasterServerFromMobileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetTenantforDBMigrationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetTenantforDBMigrationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public BaseLibrary.CloudService.DBMigrationInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((BaseLibrary.CloudService.DBMigrationInfo)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetTenantforDBMigrationWithServerInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetTenantforDBMigrationWithServerInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public BaseLibrary.CloudService.MigrationRecordAndServerInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((BaseLibrary.CloudService.MigrationRecordAndServerInfo)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SetDBTempMigrationInProcessCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SetDBTempMigrationInProcessCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SetIsDBTempMigratedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SetIsDBTempMigratedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SetAliseCardNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SetAliseCardNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAliseCardNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAliseCardNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SetLastLoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SetLastLoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CheckCustomerUserSpaceM1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CheckCustomerUserSpaceM1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CheckCustomerUserSpaceM2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CheckCustomerUserSpaceM2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CheckCustomerUserSpaceM3CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CheckCustomerUserSpaceM3CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class isAllowedToContinueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public isAllowedToContinueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BuyMoreSpaceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public BuyMoreSpaceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetBillingInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetBillingInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetUnBilledInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetUnBilledInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllTenantforDNSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllTenantforDNSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public BaseLibrary.CloudService.DNSInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((BaseLibrary.CloudService.DNSInfo)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdateDNSStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateDNSStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdateCustomerSpaceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateCustomerSpaceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ScheduleBackupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ScheduleBackupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SetCustomerPersonalDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SetCustomerPersonalDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCustomerPersonalDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCustomerPersonalDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCustomerBillingSummaryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCustomerBillingSummaryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetUserIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetUserIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetUserInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetUserInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ForgotPortalPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ForgotPortalPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class VForgotPortalPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public VForgotPortalPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PForgotPortalPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public PForgotPortalPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class NotifyServerCreatedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public NotifyServerCreatedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SaveErrorLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SaveErrorLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SaveErrorInLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SaveErrorInLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SaveErrorInLogM1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SaveErrorInLogM1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TestProccesorConnectionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public TestProccesorConnectionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CreateProcessServerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CreateProcessServerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeleteProcessServerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeleteProcessServerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CardVerifyPaymentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CardVerifyPaymentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class IsCustomerAddMoreCompanyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public IsCustomerAddMoreCompanyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCustomerDomainNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCustomerDomainNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class StartAndStopProcessorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public StartAndStopProcessorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DownloadDumpCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DownloadDumpCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ChangeLoginUserPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ChangeLoginUserPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SetApplicationStatusM1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SetApplicationStatusM1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SetApplicationStatusM2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SetApplicationStatusM2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllAppDeleteRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllAppDeleteRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public BaseLibrary.CloudService.BackupInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((BaseLibrary.CloudService.BackupInfo)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AssignServerIPToCustomerTenantCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AssignServerIPToCustomerTenantCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetIpAssignRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetIpAssignRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public BaseLibrary.CloudService.GetUnassignedIp Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((BaseLibrary.CloudService.GetUnassignedIp)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class StartAndStopZoneServersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public StartAndStopZoneServersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SetAssetDeletedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SetAssetDeletedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetUserUrlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetUserUrlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetUserProductCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetUserProductCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ResendEmailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ResendEmailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CreateAdditionalDataBaseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CreateAdditionalDataBaseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDummyDataBaseInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDummyDataBaseInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public BaseLibrary.CloudService.DummyDBMigrationInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((BaseLibrary.CloudService.DummyDBMigrationInfo)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdateDataBaseEntryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateDataBaseEntryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAdminIDForMigrarationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAdminIDForMigrarationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public BaseLibrary.CloudService.DBMigrationInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((BaseLibrary.CloudService.DBMigrationInfo)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CreateDummyTenantCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CreateDummyTenantCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetRequestsToCreateDBCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetRequestsToCreateDBCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public BaseLibrary.CloudService.DBInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((BaseLibrary.CloudService.DBInfo)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetRequestsToCreateDBWithFtpInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetRequestsToCreateDBWithFtpInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public BaseLibrary.CloudService.DummyDBWithFTpInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((BaseLibrary.CloudService.DummyDBWithFTpInfo)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MarkMailServerCreatedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public MarkMailServerCreatedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetUserInfoOfTokenKeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetUserInfoOfTokenKeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetBIUserCredentialCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetBIUserCredentialCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public BaseLibrary.CloudService.CustomerBISetting Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((BaseLibrary.CloudService.CustomerBISetting)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceSoapClient : System.ServiceModel.ClientBase<BaseLibrary.CloudService.ServiceSoap>, BaseLibrary.CloudService.ServiceSoap {
        
        private BeginOperationDelegate onBeginGetNewsDelegate;
        
        private EndOperationDelegate onEndGetNewsDelegate;
        
        private System.Threading.SendOrPostCallback onGetNewsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCustomerOpenTicketsDelegate;
        
        private EndOperationDelegate onEndGetCustomerOpenTicketsDelegate;
        
        private System.Threading.SendOrPostCallback onGetCustomerOpenTicketsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPartnerLeadsDelegate;
        
        private EndOperationDelegate onEndGetPartnerLeadsDelegate;
        
        private System.Threading.SendOrPostCallback onGetPartnerLeadsCompletedDelegate;
        
        private BeginOperationDelegate onBeginPartnerLoginDelegate;
        
        private EndOperationDelegate onEndPartnerLoginDelegate;
        
        private System.Threading.SendOrPostCallback onPartnerLoginCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetDetailedCustomerDelegate;
        
        private EndOperationDelegate onEndGetDetailedCustomerDelegate;
        
        private System.Threading.SendOrPostCallback onGetDetailedCustomerCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCustomerProspectListDelegate;
        
        private EndOperationDelegate onEndGetCustomerProspectListDelegate;
        
        private System.Threading.SendOrPostCallback onGetCustomerProspectListCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPartnerRecentTicketsDelegate;
        
        private EndOperationDelegate onEndGetPartnerRecentTicketsDelegate;
        
        private System.Threading.SendOrPostCallback onGetPartnerRecentTicketsCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetCustomerAssociationWithPartnerDelegate;
        
        private EndOperationDelegate onEndSetCustomerAssociationWithPartnerDelegate;
        
        private System.Threading.SendOrPostCallback onSetCustomerAssociationWithPartnerCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCustomerBillingDetailDelegate;
        
        private EndOperationDelegate onEndGetCustomerBillingDetailDelegate;
        
        private System.Threading.SendOrPostCallback onGetCustomerBillingDetailCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPartnerLinksDelegate;
        
        private EndOperationDelegate onEndGetPartnerLinksDelegate;
        
        private System.Threading.SendOrPostCallback onGetPartnerLinksCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCustomerDetailedViewDelegate;
        
        private EndOperationDelegate onEndGetCustomerDetailedViewDelegate;
        
        private System.Threading.SendOrPostCallback onGetCustomerDetailedViewCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetVCustomerDetailsViewDelegate;
        
        private EndOperationDelegate onEndGetVCustomerDetailsViewDelegate;
        
        private System.Threading.SendOrPostCallback onGetVCustomerDetailsViewCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetProductPriceDelegate;
        
        private EndOperationDelegate onEndGetProductPriceDelegate;
        
        private System.Threading.SendOrPostCallback onGetProductPriceCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetProfessionalProductPriceDelegate;
        
        private EndOperationDelegate onEndGetProfessionalProductPriceDelegate;
        
        private System.Threading.SendOrPostCallback onGetProfessionalProductPriceCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetTotalCurrentUserDelegate;
        
        private EndOperationDelegate onEndGetTotalCurrentUserDelegate;
        
        private System.Threading.SendOrPostCallback onGetTotalCurrentUserCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpgradeOrRenewVCustomerSubscriptionDelegate;
        
        private EndOperationDelegate onEndUpgradeOrRenewVCustomerSubscriptionDelegate;
        
        private System.Threading.SendOrPostCallback onUpgradeOrRenewVCustomerSubscriptionCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPartnerDetailsViewDelegate;
        
        private EndOperationDelegate onEndGetPartnerDetailsViewDelegate;
        
        private System.Threading.SendOrPostCallback onGetPartnerDetailsViewCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddNewLinkofPartnerDelegate;
        
        private EndOperationDelegate onEndAddNewLinkofPartnerDelegate;
        
        private System.Threading.SendOrPostCallback onAddNewLinkofPartnerCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetDetailsViewPartnerSubscriptionDelegate;
        
        private EndOperationDelegate onEndGetDetailsViewPartnerSubscriptionDelegate;
        
        private System.Threading.SendOrPostCallback onGetDetailsViewPartnerSubscriptionCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetDetailsViewCustomerSubscriptionDelegate;
        
        private EndOperationDelegate onEndGetDetailsViewCustomerSubscriptionDelegate;
        
        private System.Threading.SendOrPostCallback onGetDetailsViewCustomerSubscriptionCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpgradeOrRenewSubscriptionDelegate;
        
        private EndOperationDelegate onEndUpgradeOrRenewSubscriptionDelegate;
        
        private System.Threading.SendOrPostCallback onUpgradeOrRenewSubscriptionCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPartnerCustomerDelegate;
        
        private EndOperationDelegate onEndGetPartnerCustomerDelegate;
        
        private System.Threading.SendOrPostCallback onGetPartnerCustomerCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCustomerFilteredTicketsDelegate;
        
        private EndOperationDelegate onEndGetCustomerFilteredTicketsDelegate;
        
        private System.Threading.SendOrPostCallback onGetCustomerFilteredTicketsCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetForwardTicketsDelegate;
        
        private EndOperationDelegate onEndSetForwardTicketsDelegate;
        
        private System.Threading.SendOrPostCallback onSetForwardTicketsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPartnerFilteredTicketsDelegate;
        
        private EndOperationDelegate onEndGetPartnerFilteredTicketsDelegate;
        
        private System.Threading.SendOrPostCallback onGetPartnerFilteredTicketsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetLeadStatusDelegate;
        
        private EndOperationDelegate onEndGetLeadStatusDelegate;
        
        private System.Threading.SendOrPostCallback onGetLeadStatusCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCustomerAddOnsDelegate;
        
        private EndOperationDelegate onEndGetCustomerAddOnsDelegate;
        
        private System.Threading.SendOrPostCallback onGetCustomerAddOnsCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetPartnerAccountInformationDelegate;
        
        private EndOperationDelegate onEndSetPartnerAccountInformationDelegate;
        
        private System.Threading.SendOrPostCallback onSetPartnerAccountInformationCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetCustomerAccountInformationDelegate;
        
        private EndOperationDelegate onEndSetCustomerAccountInformationDelegate;
        
        private System.Threading.SendOrPostCallback onSetCustomerAccountInformationCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetLeadStatusDelegate;
        
        private EndOperationDelegate onEndSetLeadStatusDelegate;
        
        private System.Threading.SendOrPostCallback onSetLeadStatusCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPartnerPlansDelegate;
        
        private EndOperationDelegate onEndGetPartnerPlansDelegate;
        
        private System.Threading.SendOrPostCallback onGetPartnerPlansCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPartnerListingDelegate;
        
        private EndOperationDelegate onEndGetPartnerListingDelegate;
        
        private System.Threading.SendOrPostCallback onGetPartnerListingCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPartnerFilteredListingDelegate;
        
        private EndOperationDelegate onEndGetPartnerFilteredListingDelegate;
        
        private System.Threading.SendOrPostCallback onGetPartnerFilteredListingCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPartnerLeadDetailsDelegate;
        
        private EndOperationDelegate onEndGetPartnerLeadDetailsDelegate;
        
        private System.Threading.SendOrPostCallback onGetPartnerLeadDetailsCompletedDelegate;
        
        private BeginOperationDelegate onBeginCancellAssociationRequestDelegate;
        
        private EndOperationDelegate onEndCancellAssociationRequestDelegate;
        
        private System.Threading.SendOrPostCallback onCancellAssociationRequestCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeletePartnerLinkDelegate;
        
        private EndOperationDelegate onEndDeletePartnerLinkDelegate;
        
        private System.Threading.SendOrPostCallback onDeletePartnerLinkCompletedDelegate;
        
        private BeginOperationDelegate onBeginpartnerAssociationRequestDelegate;
        
        private EndOperationDelegate onEndpartnerAssociationRequestDelegate;
        
        private System.Threading.SendOrPostCallback onpartnerAssociationRequestCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPartnerCountriesDelegate;
        
        private EndOperationDelegate onEndGetPartnerCountriesDelegate;
        
        private System.Threading.SendOrPostCallback onGetPartnerCountriesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAssociatedSPDelegate;
        
        private EndOperationDelegate onEndGetAssociatedSPDelegate;
        
        private System.Threading.SendOrPostCallback onGetAssociatedSPCompletedDelegate;
        
        private BeginOperationDelegate onBeginAboutviennaDelegate;
        
        private EndOperationDelegate onEndAboutviennaDelegate;
        
        private System.Threading.SendOrPostCallback onAboutviennaCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetSupportTicketStatusDelegate;
        
        private EndOperationDelegate onEndGetSupportTicketStatusDelegate;
        
        private System.Threading.SendOrPostCallback onGetSupportTicketStatusCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCustomerStatusSupportTicketDelegate;
        
        private EndOperationDelegate onEndGetCustomerStatusSupportTicketDelegate;
        
        private System.Threading.SendOrPostCallback onGetCustomerStatusSupportTicketCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCustomerSupportTicketsDelegate;
        
        private EndOperationDelegate onEndGetCustomerSupportTicketsDelegate;
        
        private System.Threading.SendOrPostCallback onGetCustomerSupportTicketsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCustomerHistoryLinesDelegate;
        
        private EndOperationDelegate onEndGetCustomerHistoryLinesDelegate;
        
        private System.Threading.SendOrPostCallback onGetCustomerHistoryLinesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCustomerTicketPriorityDelegate;
        
        private EndOperationDelegate onEndGetCustomerTicketPriorityDelegate;
        
        private System.Threading.SendOrPostCallback onGetCustomerTicketPriorityCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCustomerTicketRequestTypeDelegate;
        
        private EndOperationDelegate onEndGetCustomerTicketRequestTypeDelegate;
        
        private System.Threading.SendOrPostCallback onGetCustomerTicketRequestTypeCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetCustomerNewTicketDelegate;
        
        private EndOperationDelegate onEndSetCustomerNewTicketDelegate;
        
        private System.Threading.SendOrPostCallback onSetCustomerNewTicketCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetCustomerTicketHistoryLinesDelegate;
        
        private EndOperationDelegate onEndSetCustomerTicketHistoryLinesDelegate;
        
        private System.Threading.SendOrPostCallback onSetCustomerTicketHistoryLinesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCustomerTicketDetailsDelegate;
        
        private EndOperationDelegate onEndGetCustomerTicketDetailsDelegate;
        
        private System.Threading.SendOrPostCallback onGetCustomerTicketDetailsCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetDBRestoreDelegate;
        
        private EndOperationDelegate onEndSetDBRestoreDelegate;
        
        private System.Threading.SendOrPostCallback onSetDBRestoreCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetVUnBilledInfoDelegate;
        
        private EndOperationDelegate onEndGetVUnBilledInfoDelegate;
        
        private System.Threading.SendOrPostCallback onGetVUnBilledInfoCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetVCustomerBillingSummaryDelegate;
        
        private EndOperationDelegate onEndGetVCustomerBillingSummaryDelegate;
        
        private System.Threading.SendOrPostCallback onGetVCustomerBillingSummaryCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetVBillingInfoDelegate;
        
        private EndOperationDelegate onEndGetVBillingInfoDelegate;
        
        private System.Threading.SendOrPostCallback onGetVBillingInfoCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetLeadDelegate;
        
        private EndOperationDelegate onEndSetLeadDelegate;
        
        private System.Threading.SendOrPostCallback onSetLeadCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetTopicInfoDelegate;
        
        private EndOperationDelegate onEndGetTopicInfoDelegate;
        
        private System.Threading.SendOrPostCallback onGetTopicInfoCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetInstructionDelegate;
        
        private EndOperationDelegate onEndGetInstructionDelegate;
        
        private System.Threading.SendOrPostCallback onGetInstructionCompletedDelegate;
        
        private BeginOperationDelegate onBeginserverInfoDelegate;
        
        private EndOperationDelegate onEndserverInfoDelegate;
        
        private System.Threading.SendOrPostCallback onserverInfoCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetOldIncomleteDBDelegate;
        
        private EndOperationDelegate onEndGetOldIncomleteDBDelegate;
        
        private System.Threading.SendOrPostCallback onGetOldIncomleteDBCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteDBEntryDelegate;
        
        private EndOperationDelegate onEndDeleteDBEntryDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteDBEntryCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAssetNotInUseDelegate;
        
        private EndOperationDelegate onEndGetAssetNotInUseDelegate;
        
        private System.Threading.SendOrPostCallback onGetAssetNotInUseCompletedDelegate;
        
        private BeginOperationDelegate onBeginSendNoticeDelegate;
        
        private EndOperationDelegate onEndSendNoticeDelegate;
        
        private System.Threading.SendOrPostCallback onSendNoticeCompletedDelegate;
        
        private BeginOperationDelegate onBeginSendReminderExpMailDelegate;
        
        private EndOperationDelegate onEndSendReminderExpMailDelegate;
        
        private System.Threading.SendOrPostCallback onSendReminderExpMailCompletedDelegate;
        
        private BeginOperationDelegate onBeginDownloadFileDelegate;
        
        private EndOperationDelegate onEndDownloadFileDelegate;
        
        private System.Threading.SendOrPostCallback onDownloadFileCompletedDelegate;
        
        private BeginOperationDelegate onBeginCheckUserFilesDelegate;
        
        private EndOperationDelegate onEndCheckUserFilesDelegate;
        
        private System.Threading.SendOrPostCallback onCheckUserFilesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCurrentRunningTenantDelegate;
        
        private EndOperationDelegate onEndGetCurrentRunningTenantDelegate;
        
        private System.Threading.SendOrPostCallback onGetCurrentRunningTenantCompletedDelegate;
        
        private BeginOperationDelegate onBeginModuleInstallationRequestDelegate;
        
        private EndOperationDelegate onEndModuleInstallationRequestDelegate;
        
        private System.Threading.SendOrPostCallback onModuleInstallationRequestCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetRequestToInstallModuleDelegate;
        
        private EndOperationDelegate onEndGetRequestToInstallModuleDelegate;
        
        private System.Threading.SendOrPostCallback onGetRequestToInstallModuleCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCustomerPServerInfoDelegate;
        
        private EndOperationDelegate onEndGetCustomerPServerInfoDelegate;
        
        private System.Threading.SendOrPostCallback onGetCustomerPServerInfoCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetSubscriptionDaysDelegate;
        
        private EndOperationDelegate onEndGetSubscriptionDaysDelegate;
        
        private System.Threading.SendOrPostCallback onGetSubscriptionDaysCompletedDelegate;
        
        private BeginOperationDelegate onBeginPackageEntryIntoItemMasterTestDelegate;
        
        private EndOperationDelegate onEndPackageEntryIntoItemMasterTestDelegate;
        
        private System.Threading.SendOrPostCallback onPackageEntryIntoItemMasterTestCompletedDelegate;
        
        private BeginOperationDelegate onBeginPackageEntryIntoItemMasterDelegate;
        
        private EndOperationDelegate onEndPackageEntryIntoItemMasterDelegate;
        
        private System.Threading.SendOrPostCallback onPackageEntryIntoItemMasterCompletedDelegate;
        
        private BeginOperationDelegate onBeginAuthenticateHardwareDelegate;
        
        private EndOperationDelegate onEndAuthenticateHardwareDelegate;
        
        private System.Threading.SendOrPostCallback onAuthenticateHardwareCompletedDelegate;
        
        private BeginOperationDelegate onBeginIsHardwareActivatedDelegate;
        
        private EndOperationDelegate onEndIsHardwareActivatedDelegate;
        
        private System.Threading.SendOrPostCallback onIsHardwareActivatedCompletedDelegate;
        
        private BeginOperationDelegate onBeginSOTCSettingDelegate;
        
        private EndOperationDelegate onEndSOTCSettingDelegate;
        
        private System.Threading.SendOrPostCallback onSOTCSettingCompletedDelegate;
        
        private BeginOperationDelegate onBeginSKDelegate;
        
        private EndOperationDelegate onEndSKDelegate;
        
        private System.Threading.SendOrPostCallback onSKCompletedDelegate;
        
        private BeginOperationDelegate onBeginCreadientialsWorkDelegate;
        
        private EndOperationDelegate onEndCreadientialsWorkDelegate;
        
        private System.Threading.SendOrPostCallback onCreadientialsWorkCompletedDelegate;
        
        private BeginOperationDelegate onBeginSavePrinterListDelegate;
        
        private EndOperationDelegate onEndSavePrinterListDelegate;
        
        private System.Threading.SendOrPostCallback onSavePrinterListCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPrinterListDelegate;
        
        private EndOperationDelegate onEndGetPrinterListDelegate;
        
        private System.Threading.SendOrPostCallback onGetPrinterListCompletedDelegate;
        
        private BeginOperationDelegate onBeginCheckUpdateDelegate;
        
        private EndOperationDelegate onEndCheckUpdateDelegate;
        
        private System.Threading.SendOrPostCallback onCheckUpdateCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetUserUpdateTimeSettingsDelegate;
        
        private EndOperationDelegate onEndGetUserUpdateTimeSettingsDelegate;
        
        private System.Threading.SendOrPostCallback onGetUserUpdateTimeSettingsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetUserLSSettingsDelegate;
        
        private EndOperationDelegate onEndGetUserLSSettingsDelegate;
        
        private System.Threading.SendOrPostCallback onGetUserLSSettingsCompletedDelegate;
        
        private BeginOperationDelegate onBeginMarkReadyDelegate;
        
        private EndOperationDelegate onEndMarkReadyDelegate;
        
        private System.Threading.SendOrPostCallback onMarkReadyCompletedDelegate;
        
        private BeginOperationDelegate onBeginInsertUpdateConfigDelegate;
        
        private EndOperationDelegate onEndInsertUpdateConfigDelegate;
        
        private System.Threading.SendOrPostCallback onInsertUpdateConfigCompletedDelegate;
        
        private BeginOperationDelegate onBeginEmailToUserDelegate;
        
        private EndOperationDelegate onEndEmailToUserDelegate;
        
        private System.Threading.SendOrPostCallback onEmailToUserCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetUserUpdateTimeSettingsDemoDelegate;
        
        private EndOperationDelegate onEndGetUserUpdateTimeSettingsDemoDelegate;
        
        private System.Threading.SendOrPostCallback onGetUserUpdateTimeSettingsDemoCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetHardwaresDelegate;
        
        private EndOperationDelegate onEndGetHardwaresDelegate;
        
        private System.Threading.SendOrPostCallback onGetHardwaresCompletedDelegate;
        
        private BeginOperationDelegate onBeginActivateUpdateHardwareDelegate;
        
        private EndOperationDelegate onEndActivateUpdateHardwareDelegate;
        
        private System.Threading.SendOrPostCallback onActivateUpdateHardwareCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetConsolesDelegate;
        
        private EndOperationDelegate onEndGetConsolesDelegate;
        
        private System.Threading.SendOrPostCallback onGetConsolesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetModelBrandDriverDelegate;
        
        private EndOperationDelegate onEndGetModelBrandDriverDelegate;
        
        private System.Threading.SendOrPostCallback onGetModelBrandDriverCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetSetPrintersDelegate;
        
        private EndOperationDelegate onEndGetSetPrintersDelegate;
        
        private System.Threading.SendOrPostCallback onGetSetPrintersCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPrintersDelegate;
        
        private EndOperationDelegate onEndGetPrintersDelegate;
        
        private System.Threading.SendOrPostCallback onGetPrintersCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetSetLocalServersDelegate;
        
        private EndOperationDelegate onEndGetSetLocalServersDelegate;
        
        private System.Threading.SendOrPostCallback onGetSetLocalServersCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetSetUpdateTimeSettingsDelegate;
        
        private EndOperationDelegate onEndGetSetUpdateTimeSettingsDelegate;
        
        private System.Threading.SendOrPostCallback onGetSetUpdateTimeSettingsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetSiteInfoDelegate;
        
        private EndOperationDelegate onEndGetSiteInfoDelegate;
        
        private System.Threading.SendOrPostCallback onGetSiteInfoCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetSiteZoneInfoDelegate;
        
        private EndOperationDelegate onEndGetSiteZoneInfoDelegate;
        
        private System.Threading.SendOrPostCallback onGetSiteZoneInfoCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetSiteProductInfoDelegate;
        
        private EndOperationDelegate onEndGetSiteProductInfoDelegate;
        
        private System.Threading.SendOrPostCallback onGetSiteProductInfoCompletedDelegate;
        
        private BeginOperationDelegate onBeginHelloDelegate;
        
        private EndOperationDelegate onEndHelloDelegate;
        
        private System.Threading.SendOrPostCallback onHelloCompletedDelegate;
        
        private BeginOperationDelegate onBeginSaveCustomerTenentInfoM1Delegate;
        
        private EndOperationDelegate onEndSaveCustomerTenentInfoM1Delegate;
        
        private System.Threading.SendOrPostCallback onSaveCustomerTenentInfoM1CompletedDelegate;
        
        private BeginOperationDelegate onBeginSaveCustomerTenentInfoM1fromMobileDelegate;
        
        private EndOperationDelegate onEndSaveCustomerTenentInfoM1fromMobileDelegate;
        
        private System.Threading.SendOrPostCallback onSaveCustomerTenentInfoM1fromMobileCompletedDelegate;
        
        private BeginOperationDelegate onBeginSaveCustomerTenentInfoDelegate;
        
        private EndOperationDelegate onEndSaveCustomerTenentInfoDelegate;
        
        private System.Threading.SendOrPostCallback onSaveCustomerTenentInfoCompletedDelegate;
        
        private BeginOperationDelegate onBeginIsDomainExistDelegate;
        
        private EndOperationDelegate onEndIsDomainExistDelegate;
        
        private System.Threading.SendOrPostCallback onIsDomainExistCompletedDelegate;
        
        private BeginOperationDelegate onBeginRegisterInfoFromModuleDelegate;
        
        private EndOperationDelegate onEndRegisterInfoFromModuleDelegate;
        
        private System.Threading.SendOrPostCallback onRegisterInfoFromModuleCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetVideosFromDMSDelegate;
        
        private EndOperationDelegate onEndGetVideosFromDMSDelegate;
        
        private System.Threading.SendOrPostCallback onGetVideosFromDMSCompletedDelegate;
        
        private BeginOperationDelegate onBeginRegisterTempInfoDelegate;
        
        private EndOperationDelegate onEndRegisterTempInfoDelegate;
        
        private System.Threading.SendOrPostCallback onRegisterTempInfoCompletedDelegate;
        
        private BeginOperationDelegate onBeginRegisterInfoDelegate;
        
        private EndOperationDelegate onEndRegisterInfoDelegate;
        
        private System.Threading.SendOrPostCallback onRegisterInfoCompletedDelegate;
        
        private BeginOperationDelegate onBeginVRegisterInfoTDelegate;
        
        private EndOperationDelegate onEndVRegisterInfoTDelegate;
        
        private System.Threading.SendOrPostCallback onVRegisterInfoTCompletedDelegate;
        
        private BeginOperationDelegate onBeginVRegisterInfoDelegate;
        
        private EndOperationDelegate onEndVRegisterInfoDelegate;
        
        private System.Threading.SendOrPostCallback onVRegisterInfoCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCustomerServerAndFTPInfoDelegate;
        
        private EndOperationDelegate onEndGetCustomerServerAndFTPInfoDelegate;
        
        private System.Threading.SendOrPostCallback onGetCustomerServerAndFTPInfoCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCustomerServerInfoM1Delegate;
        
        private EndOperationDelegate onEndGetCustomerServerInfoM1Delegate;
        
        private System.Threading.SendOrPostCallback onGetCustomerServerInfoM1CompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCustomerServerInfoM2Delegate;
        
        private EndOperationDelegate onEndGetCustomerServerInfoM2Delegate;
        
        private System.Threading.SendOrPostCallback onGetCustomerServerInfoM2CompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCustomerServerInfoM3Delegate;
        
        private EndOperationDelegate onEndGetCustomerServerInfoM3Delegate;
        
        private System.Threading.SendOrPostCallback onGetCustomerServerInfoM3CompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCustomerServerInfoM4Delegate;
        
        private EndOperationDelegate onEndGetCustomerServerInfoM4Delegate;
        
        private System.Threading.SendOrPostCallback onGetCustomerServerInfoM4CompletedDelegate;
        
        private BeginOperationDelegate onBeginVerifyUserM1Delegate;
        
        private EndOperationDelegate onEndVerifyUserM1Delegate;
        
        private System.Threading.SendOrPostCallback onVerifyUserM1CompletedDelegate;
        
        private BeginOperationDelegate onBeginGetUniqueUserKeyDelegate;
        
        private EndOperationDelegate onEndGetUniqueUserKeyDelegate;
        
        private System.Threading.SendOrPostCallback onGetUniqueUserKeyCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAmountDelegate;
        
        private EndOperationDelegate onEndGetAmountDelegate;
        
        private System.Threading.SendOrPostCallback onGetAmountCompletedDelegate;
        
        private BeginOperationDelegate onBeginSubscribeProductDelegate;
        
        private EndOperationDelegate onEndSubscribeProductDelegate;
        
        private System.Threading.SendOrPostCallback onSubscribeProductCompletedDelegate;
        
        private BeginOperationDelegate onBeginUnSubscribeProductDelegate;
        
        private EndOperationDelegate onEndUnSubscribeProductDelegate;
        
        private System.Threading.SendOrPostCallback onUnSubscribeProductCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetFTPInfoDelegate;
        
        private EndOperationDelegate onEndGetFTPInfoDelegate;
        
        private System.Threading.SendOrPostCallback onGetFTPInfoCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllCountriesDelegate;
        
        private EndOperationDelegate onEndGetAllCountriesDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllCountriesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllCountriesFromMobileDelegate;
        
        private EndOperationDelegate onEndGetAllCountriesFromMobileDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllCountriesFromMobileCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetNewTenantDelegate;
        
        private EndOperationDelegate onEndGetNewTenantDelegate;
        
        private System.Threading.SendOrPostCallback onGetNewTenantCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetRelatedProductDelegate;
        
        private EndOperationDelegate onEndGetRelatedProductDelegate;
        
        private System.Threading.SendOrPostCallback onGetRelatedProductCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCustomerAccountDetailDelegate;
        
        private EndOperationDelegate onEndGetCustomerAccountDetailDelegate;
        
        private System.Threading.SendOrPostCallback onGetCustomerAccountDetailCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetRelatedProductM1Delegate;
        
        private EndOperationDelegate onEndGetRelatedProductM1Delegate;
        
        private System.Threading.SendOrPostCallback onGetRelatedProductM1CompletedDelegate;
        
        private BeginOperationDelegate onBeginSetCustomerAccountDetailDelegate;
        
        private EndOperationDelegate onEndSetCustomerAccountDetailDelegate;
        
        private System.Threading.SendOrPostCallback onSetCustomerAccountDetailCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCustomerNotificationDelegate;
        
        private EndOperationDelegate onEndGetCustomerNotificationDelegate;
        
        private System.Threading.SendOrPostCallback onGetCustomerNotificationCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCustomerNotificationM1Delegate;
        
        private EndOperationDelegate onEndGetCustomerNotificationM1Delegate;
        
        private System.Threading.SendOrPostCallback onGetCustomerNotificationM1CompletedDelegate;
        
        private BeginOperationDelegate onBeginAcknowledgeCustomerNotificationDelegate;
        
        private EndOperationDelegate onEndAcknowledgeCustomerNotificationDelegate;
        
        private System.Threading.SendOrPostCallback onAcknowledgeCustomerNotificationCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCustomerCompanyDetailDelegate;
        
        private EndOperationDelegate onEndGetCustomerCompanyDetailDelegate;
        
        private System.Threading.SendOrPostCallback onGetCustomerCompanyDetailCompletedDelegate;
        
        private BeginOperationDelegate onBeginLoginDelegate;
        
        private EndOperationDelegate onEndLoginDelegate;
        
        private System.Threading.SendOrPostCallback onLoginCompletedDelegate;
        
        private BeginOperationDelegate onBeginLoginFromMobileDelegate;
        
        private EndOperationDelegate onEndLoginFromMobileDelegate;
        
        private System.Threading.SendOrPostCallback onLoginFromMobileCompletedDelegate;
        
        private BeginOperationDelegate onBeginVLoginDelegate;
        
        private EndOperationDelegate onEndVLoginDelegate;
        
        private System.Threading.SendOrPostCallback onVLoginCompletedDelegate;
        
        private BeginOperationDelegate onBeginIsFreeProductDelegate;
        
        private EndOperationDelegate onEndIsFreeProductDelegate;
        
        private System.Threading.SendOrPostCallback onIsFreeProductCompletedDelegate;
        
        private BeginOperationDelegate onBeginCheckUserVerifiedM1Delegate;
        
        private EndOperationDelegate onEndCheckUserVerifiedM1Delegate;
        
        private System.Threading.SendOrPostCallback onCheckUserVerifiedM1CompletedDelegate;
        
        private BeginOperationDelegate onBeginCheckUserVerifiedM2Delegate;
        
        private EndOperationDelegate onEndCheckUserVerifiedM2Delegate;
        
        private System.Threading.SendOrPostCallback onCheckUserVerifiedM2CompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCustomerDBBackUpDelegate;
        
        private EndOperationDelegate onEndGetCustomerDBBackUpDelegate;
        
        private System.Threading.SendOrPostCallback onGetCustomerDBBackUpCompletedDelegate;
        
        private BeginOperationDelegate onBeginRestoreDBBackUpDelegate;
        
        private EndOperationDelegate onEndRestoreDBBackUpDelegate;
        
        private System.Threading.SendOrPostCallback onRestoreDBBackUpCompletedDelegate;
        
        private BeginOperationDelegate onBeginVerifyUserM2Delegate;
        
        private EndOperationDelegate onEndVerifyUserM2Delegate;
        
        private System.Threading.SendOrPostCallback onVerifyUserM2CompletedDelegate;
        
        private BeginOperationDelegate onBeginVerifyUserM3Delegate;
        
        private EndOperationDelegate onEndVerifyUserM3Delegate;
        
        private System.Threading.SendOrPostCallback onVerifyUserM3CompletedDelegate;
        
        private BeginOperationDelegate onBeginVerifyUserM4Delegate;
        
        private EndOperationDelegate onEndVerifyUserM4Delegate;
        
        private System.Threading.SendOrPostCallback onVerifyUserM4CompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteDBBackUpDelegate;
        
        private EndOperationDelegate onEndDeleteDBBackUpDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteDBBackUpCompletedDelegate;
        
        private BeginOperationDelegate onBeginCreateBackUpDelegate;
        
        private EndOperationDelegate onEndCreateBackUpDelegate;
        
        private System.Threading.SendOrPostCallback onCreateBackUpCompletedDelegate;
        
        private BeginOperationDelegate onBeginChangeAdminPasswordOnClientERPDelegate;
        
        private EndOperationDelegate onEndChangeAdminPasswordOnClientERPDelegate;
        
        private System.Threading.SendOrPostCallback onChangeAdminPasswordOnClientERPCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCustomerZoneCodeDelegate;
        
        private EndOperationDelegate onEndGetCustomerZoneCodeDelegate;
        
        private System.Threading.SendOrPostCallback onGetCustomerZoneCodeCompletedDelegate;
        
        private BeginOperationDelegate onBeginForgetPasswordDelegate;
        
        private EndOperationDelegate onEndForgetPasswordDelegate;
        
        private System.Threading.SendOrPostCallback onForgetPasswordCompletedDelegate;
        
        private BeginOperationDelegate onBeginVForgetPasswordDelegate;
        
        private EndOperationDelegate onEndVForgetPasswordDelegate;
        
        private System.Threading.SendOrPostCallback onVForgetPasswordCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateAssetDelegate;
        
        private EndOperationDelegate onEndUpdateAssetDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateAssetCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllCurrencyDelegate;
        
        private EndOperationDelegate onEndGetAllCurrencyDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllCurrencyCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllCurrencyFromMobileDelegate;
        
        private EndOperationDelegate onEndGetAllCurrencyFromMobileDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllCurrencyFromMobileCompletedDelegate;
        
        private BeginOperationDelegate onBeginCreateTenantDelegate;
        
        private EndOperationDelegate onEndCreateTenantDelegate;
        
        private System.Threading.SendOrPostCallback onCreateTenantCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllDBBackupRequestDelegate;
        
        private EndOperationDelegate onEndGetAllDBBackupRequestDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllDBBackupRequestCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseRequestDelegate;
        
        private EndOperationDelegate onEndCloseRequestDelegate;
        
        private System.Threading.SendOrPostCallback onCloseRequestCompletedDelegate;
        
        private BeginOperationDelegate onBeginFailedRequestDelegate;
        
        private EndOperationDelegate onEndFailedRequestDelegate;
        
        private System.Threading.SendOrPostCallback onFailedRequestCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCustomerSpaceM1Delegate;
        
        private EndOperationDelegate onEndGetCustomerSpaceM1Delegate;
        
        private System.Threading.SendOrPostCallback onGetCustomerSpaceM1CompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCustomerSpaceM2Delegate;
        
        private EndOperationDelegate onEndGetCustomerSpaceM2Delegate;
        
        private System.Threading.SendOrPostCallback onGetCustomerSpaceM2CompletedDelegate;
        
        private BeginOperationDelegate onBeginSetCustomerSpaceDelegate;
        
        private EndOperationDelegate onEndSetCustomerSpaceDelegate;
        
        private System.Threading.SendOrPostCallback onSetCustomerSpaceCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllDBDeleteRequestDelegate;
        
        private EndOperationDelegate onEndGetAllDBDeleteRequestDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllDBDeleteRequestCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllDBRestoreRequestDelegate;
        
        private EndOperationDelegate onEndGetAllDBRestoreRequestDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllDBRestoreRequestCompletedDelegate;
        
        private BeginOperationDelegate onBeginCreateCustomerUserDelegate;
        
        private EndOperationDelegate onEndCreateCustomerUserDelegate;
        
        private System.Threading.SendOrPostCallback onCreateCustomerUserCompletedDelegate;
        
        private BeginOperationDelegate onBeginVerifyTenantCreatedDelegate;
        
        private EndOperationDelegate onEndVerifyTenantCreatedDelegate;
        
        private System.Threading.SendOrPostCallback onVerifyTenantCreatedCompletedDelegate;
        
        private BeginOperationDelegate onBeginVerifyTenantCreatedFromMobileDelegate;
        
        private EndOperationDelegate onEndVerifyTenantCreatedFromMobileDelegate;
        
        private System.Threading.SendOrPostCallback onVerifyTenantCreatedFromMobileCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllZoneMasterServerDelegate;
        
        private EndOperationDelegate onEndGetAllZoneMasterServerDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllZoneMasterServerCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllZoneMasterServerFromMobileDelegate;
        
        private EndOperationDelegate onEndGetAllZoneMasterServerFromMobileDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllZoneMasterServerFromMobileCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetTenantforDBMigrationDelegate;
        
        private EndOperationDelegate onEndGetTenantforDBMigrationDelegate;
        
        private System.Threading.SendOrPostCallback onGetTenantforDBMigrationCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetTenantforDBMigrationWithServerInfoDelegate;
        
        private EndOperationDelegate onEndGetTenantforDBMigrationWithServerInfoDelegate;
        
        private System.Threading.SendOrPostCallback onGetTenantforDBMigrationWithServerInfoCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetDBTempMigrationInProcessDelegate;
        
        private EndOperationDelegate onEndSetDBTempMigrationInProcessDelegate;
        
        private System.Threading.SendOrPostCallback onSetDBTempMigrationInProcessCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetIsDBTempMigratedDelegate;
        
        private EndOperationDelegate onEndSetIsDBTempMigratedDelegate;
        
        private System.Threading.SendOrPostCallback onSetIsDBTempMigratedCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetAliseCardNoDelegate;
        
        private EndOperationDelegate onEndSetAliseCardNoDelegate;
        
        private System.Threading.SendOrPostCallback onSetAliseCardNoCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAliseCardNoDelegate;
        
        private EndOperationDelegate onEndGetAliseCardNoDelegate;
        
        private System.Threading.SendOrPostCallback onGetAliseCardNoCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetLastLoginDelegate;
        
        private EndOperationDelegate onEndSetLastLoginDelegate;
        
        private System.Threading.SendOrPostCallback onSetLastLoginCompletedDelegate;
        
        private BeginOperationDelegate onBeginCheckCustomerUserSpaceM1Delegate;
        
        private EndOperationDelegate onEndCheckCustomerUserSpaceM1Delegate;
        
        private System.Threading.SendOrPostCallback onCheckCustomerUserSpaceM1CompletedDelegate;
        
        private BeginOperationDelegate onBeginCheckCustomerUserSpaceM2Delegate;
        
        private EndOperationDelegate onEndCheckCustomerUserSpaceM2Delegate;
        
        private System.Threading.SendOrPostCallback onCheckCustomerUserSpaceM2CompletedDelegate;
        
        private BeginOperationDelegate onBeginCheckCustomerUserSpaceM3Delegate;
        
        private EndOperationDelegate onEndCheckCustomerUserSpaceM3Delegate;
        
        private System.Threading.SendOrPostCallback onCheckCustomerUserSpaceM3CompletedDelegate;
        
        private BeginOperationDelegate onBeginisAllowedToContinueDelegate;
        
        private EndOperationDelegate onEndisAllowedToContinueDelegate;
        
        private System.Threading.SendOrPostCallback onisAllowedToContinueCompletedDelegate;
        
        private BeginOperationDelegate onBeginBuyMoreSpaceDelegate;
        
        private EndOperationDelegate onEndBuyMoreSpaceDelegate;
        
        private System.Threading.SendOrPostCallback onBuyMoreSpaceCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetBillingInfoDelegate;
        
        private EndOperationDelegate onEndGetBillingInfoDelegate;
        
        private System.Threading.SendOrPostCallback onGetBillingInfoCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetUnBilledInfoDelegate;
        
        private EndOperationDelegate onEndGetUnBilledInfoDelegate;
        
        private System.Threading.SendOrPostCallback onGetUnBilledInfoCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllTenantforDNSDelegate;
        
        private EndOperationDelegate onEndGetAllTenantforDNSDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllTenantforDNSCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateDNSStatusDelegate;
        
        private EndOperationDelegate onEndUpdateDNSStatusDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateDNSStatusCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateCustomerSpaceDelegate;
        
        private EndOperationDelegate onEndUpdateCustomerSpaceDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateCustomerSpaceCompletedDelegate;
        
        private BeginOperationDelegate onBeginScheduleBackupDelegate;
        
        private EndOperationDelegate onEndScheduleBackupDelegate;
        
        private System.Threading.SendOrPostCallback onScheduleBackupCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetCustomerPersonalDetailDelegate;
        
        private EndOperationDelegate onEndSetCustomerPersonalDetailDelegate;
        
        private System.Threading.SendOrPostCallback onSetCustomerPersonalDetailCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCustomerPersonalDetailDelegate;
        
        private EndOperationDelegate onEndGetCustomerPersonalDetailDelegate;
        
        private System.Threading.SendOrPostCallback onGetCustomerPersonalDetailCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCustomerBillingSummaryDelegate;
        
        private EndOperationDelegate onEndGetCustomerBillingSummaryDelegate;
        
        private System.Threading.SendOrPostCallback onGetCustomerBillingSummaryCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetUserIDDelegate;
        
        private EndOperationDelegate onEndGetUserIDDelegate;
        
        private System.Threading.SendOrPostCallback onGetUserIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetUserInfoDelegate;
        
        private EndOperationDelegate onEndGetUserInfoDelegate;
        
        private System.Threading.SendOrPostCallback onGetUserInfoCompletedDelegate;
        
        private BeginOperationDelegate onBeginForgotPortalPasswordDelegate;
        
        private EndOperationDelegate onEndForgotPortalPasswordDelegate;
        
        private System.Threading.SendOrPostCallback onForgotPortalPasswordCompletedDelegate;
        
        private BeginOperationDelegate onBeginVForgotPortalPasswordDelegate;
        
        private EndOperationDelegate onEndVForgotPortalPasswordDelegate;
        
        private System.Threading.SendOrPostCallback onVForgotPortalPasswordCompletedDelegate;
        
        private BeginOperationDelegate onBeginPForgotPortalPasswordDelegate;
        
        private EndOperationDelegate onEndPForgotPortalPasswordDelegate;
        
        private System.Threading.SendOrPostCallback onPForgotPortalPasswordCompletedDelegate;
        
        private BeginOperationDelegate onBeginNotifyServerCreatedDelegate;
        
        private EndOperationDelegate onEndNotifyServerCreatedDelegate;
        
        private System.Threading.SendOrPostCallback onNotifyServerCreatedCompletedDelegate;
        
        private BeginOperationDelegate onBeginSaveErrorLogDelegate;
        
        private EndOperationDelegate onEndSaveErrorLogDelegate;
        
        private System.Threading.SendOrPostCallback onSaveErrorLogCompletedDelegate;
        
        private BeginOperationDelegate onBeginSaveErrorInLogDelegate;
        
        private EndOperationDelegate onEndSaveErrorInLogDelegate;
        
        private System.Threading.SendOrPostCallback onSaveErrorInLogCompletedDelegate;
        
        private BeginOperationDelegate onBeginSaveErrorInLogM1Delegate;
        
        private EndOperationDelegate onEndSaveErrorInLogM1Delegate;
        
        private System.Threading.SendOrPostCallback onSaveErrorInLogM1CompletedDelegate;
        
        private BeginOperationDelegate onBeginTestProccesorConnectionDelegate;
        
        private EndOperationDelegate onEndTestProccesorConnectionDelegate;
        
        private System.Threading.SendOrPostCallback onTestProccesorConnectionCompletedDelegate;
        
        private BeginOperationDelegate onBeginCreateProcessServerDelegate;
        
        private EndOperationDelegate onEndCreateProcessServerDelegate;
        
        private System.Threading.SendOrPostCallback onCreateProcessServerCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteProcessServerDelegate;
        
        private EndOperationDelegate onEndDeleteProcessServerDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteProcessServerCompletedDelegate;
        
        private BeginOperationDelegate onBeginCardVerifyPaymentDelegate;
        
        private EndOperationDelegate onEndCardVerifyPaymentDelegate;
        
        private System.Threading.SendOrPostCallback onCardVerifyPaymentCompletedDelegate;
        
        private BeginOperationDelegate onBeginIsCustomerAddMoreCompanyDelegate;
        
        private EndOperationDelegate onEndIsCustomerAddMoreCompanyDelegate;
        
        private System.Threading.SendOrPostCallback onIsCustomerAddMoreCompanyCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCustomerDomainNameDelegate;
        
        private EndOperationDelegate onEndGetCustomerDomainNameDelegate;
        
        private System.Threading.SendOrPostCallback onGetCustomerDomainNameCompletedDelegate;
        
        private BeginOperationDelegate onBeginStartAndStopProcessorDelegate;
        
        private EndOperationDelegate onEndStartAndStopProcessorDelegate;
        
        private System.Threading.SendOrPostCallback onStartAndStopProcessorCompletedDelegate;
        
        private BeginOperationDelegate onBeginDownloadDumpDelegate;
        
        private EndOperationDelegate onEndDownloadDumpDelegate;
        
        private System.Threading.SendOrPostCallback onDownloadDumpCompletedDelegate;
        
        private BeginOperationDelegate onBeginChangeLoginUserPasswordDelegate;
        
        private EndOperationDelegate onEndChangeLoginUserPasswordDelegate;
        
        private System.Threading.SendOrPostCallback onChangeLoginUserPasswordCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetApplicationStatusM1Delegate;
        
        private EndOperationDelegate onEndSetApplicationStatusM1Delegate;
        
        private System.Threading.SendOrPostCallback onSetApplicationStatusM1CompletedDelegate;
        
        private BeginOperationDelegate onBeginSetApplicationStatusM2Delegate;
        
        private EndOperationDelegate onEndSetApplicationStatusM2Delegate;
        
        private System.Threading.SendOrPostCallback onSetApplicationStatusM2CompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllAppDeleteRequestDelegate;
        
        private EndOperationDelegate onEndGetAllAppDeleteRequestDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllAppDeleteRequestCompletedDelegate;
        
        private BeginOperationDelegate onBeginAssignServerIPToCustomerTenantDelegate;
        
        private EndOperationDelegate onEndAssignServerIPToCustomerTenantDelegate;
        
        private System.Threading.SendOrPostCallback onAssignServerIPToCustomerTenantCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetIpAssignRequestDelegate;
        
        private EndOperationDelegate onEndGetIpAssignRequestDelegate;
        
        private System.Threading.SendOrPostCallback onGetIpAssignRequestCompletedDelegate;
        
        private BeginOperationDelegate onBeginStartAndStopZoneServersDelegate;
        
        private EndOperationDelegate onEndStartAndStopZoneServersDelegate;
        
        private System.Threading.SendOrPostCallback onStartAndStopZoneServersCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetAssetDeletedDelegate;
        
        private EndOperationDelegate onEndSetAssetDeletedDelegate;
        
        private System.Threading.SendOrPostCallback onSetAssetDeletedCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetUserUrlDelegate;
        
        private EndOperationDelegate onEndGetUserUrlDelegate;
        
        private System.Threading.SendOrPostCallback onGetUserUrlCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetUserProductDelegate;
        
        private EndOperationDelegate onEndGetUserProductDelegate;
        
        private System.Threading.SendOrPostCallback onGetUserProductCompletedDelegate;
        
        private BeginOperationDelegate onBeginResendEmailDelegate;
        
        private EndOperationDelegate onEndResendEmailDelegate;
        
        private System.Threading.SendOrPostCallback onResendEmailCompletedDelegate;
        
        private BeginOperationDelegate onBeginCreateAdditionalDataBaseDelegate;
        
        private EndOperationDelegate onEndCreateAdditionalDataBaseDelegate;
        
        private System.Threading.SendOrPostCallback onCreateAdditionalDataBaseCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetDummyDataBaseInfoDelegate;
        
        private EndOperationDelegate onEndGetDummyDataBaseInfoDelegate;
        
        private System.Threading.SendOrPostCallback onGetDummyDataBaseInfoCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateDataBaseEntryDelegate;
        
        private EndOperationDelegate onEndUpdateDataBaseEntryDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateDataBaseEntryCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAdminIDForMigrarationDelegate;
        
        private EndOperationDelegate onEndGetAdminIDForMigrarationDelegate;
        
        private System.Threading.SendOrPostCallback onGetAdminIDForMigrarationCompletedDelegate;
        
        private BeginOperationDelegate onBeginCreateDummyTenantDelegate;
        
        private EndOperationDelegate onEndCreateDummyTenantDelegate;
        
        private System.Threading.SendOrPostCallback onCreateDummyTenantCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetRequestsToCreateDBDelegate;
        
        private EndOperationDelegate onEndGetRequestsToCreateDBDelegate;
        
        private System.Threading.SendOrPostCallback onGetRequestsToCreateDBCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetRequestsToCreateDBWithFtpInfoDelegate;
        
        private EndOperationDelegate onEndGetRequestsToCreateDBWithFtpInfoDelegate;
        
        private System.Threading.SendOrPostCallback onGetRequestsToCreateDBWithFtpInfoCompletedDelegate;
        
        private BeginOperationDelegate onBeginMarkMailServerCreatedDelegate;
        
        private EndOperationDelegate onEndMarkMailServerCreatedDelegate;
        
        private System.Threading.SendOrPostCallback onMarkMailServerCreatedCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetUserInfoOfTokenKeyDelegate;
        
        private EndOperationDelegate onEndGetUserInfoOfTokenKeyDelegate;
        
        private System.Threading.SendOrPostCallback onGetUserInfoOfTokenKeyCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetBIUserCredentialDelegate;
        
        private EndOperationDelegate onEndGetBIUserCredentialDelegate;
        
        private System.Threading.SendOrPostCallback onGetBIUserCredentialCompletedDelegate;
        
        public ServiceSoapClient() {
        }
        
        public ServiceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<GetNewsCompletedEventArgs> GetNewsCompleted;
        
        public event System.EventHandler<GetCustomerOpenTicketsCompletedEventArgs> GetCustomerOpenTicketsCompleted;
        
        public event System.EventHandler<GetPartnerLeadsCompletedEventArgs> GetPartnerLeadsCompleted;
        
        public event System.EventHandler<PartnerLoginCompletedEventArgs> PartnerLoginCompleted;
        
        public event System.EventHandler<GetDetailedCustomerCompletedEventArgs> GetDetailedCustomerCompleted;
        
        public event System.EventHandler<GetCustomerProspectListCompletedEventArgs> GetCustomerProspectListCompleted;
        
        public event System.EventHandler<GetPartnerRecentTicketsCompletedEventArgs> GetPartnerRecentTicketsCompleted;
        
        public event System.EventHandler<SetCustomerAssociationWithPartnerCompletedEventArgs> SetCustomerAssociationWithPartnerCompleted;
        
        public event System.EventHandler<GetCustomerBillingDetailCompletedEventArgs> GetCustomerBillingDetailCompleted;
        
        public event System.EventHandler<GetPartnerLinksCompletedEventArgs> GetPartnerLinksCompleted;
        
        public event System.EventHandler<GetCustomerDetailedViewCompletedEventArgs> GetCustomerDetailedViewCompleted;
        
        public event System.EventHandler<GetVCustomerDetailsViewCompletedEventArgs> GetVCustomerDetailsViewCompleted;
        
        public event System.EventHandler<GetProductPriceCompletedEventArgs> GetProductPriceCompleted;
        
        public event System.EventHandler<GetProfessionalProductPriceCompletedEventArgs> GetProfessionalProductPriceCompleted;
        
        public event System.EventHandler<GetTotalCurrentUserCompletedEventArgs> GetTotalCurrentUserCompleted;
        
        public event System.EventHandler<UpgradeOrRenewVCustomerSubscriptionCompletedEventArgs> UpgradeOrRenewVCustomerSubscriptionCompleted;
        
        public event System.EventHandler<GetPartnerDetailsViewCompletedEventArgs> GetPartnerDetailsViewCompleted;
        
        public event System.EventHandler<AddNewLinkofPartnerCompletedEventArgs> AddNewLinkofPartnerCompleted;
        
        public event System.EventHandler<GetDetailsViewPartnerSubscriptionCompletedEventArgs> GetDetailsViewPartnerSubscriptionCompleted;
        
        public event System.EventHandler<GetDetailsViewCustomerSubscriptionCompletedEventArgs> GetDetailsViewCustomerSubscriptionCompleted;
        
        public event System.EventHandler<UpgradeOrRenewSubscriptionCompletedEventArgs> UpgradeOrRenewSubscriptionCompleted;
        
        public event System.EventHandler<GetPartnerCustomerCompletedEventArgs> GetPartnerCustomerCompleted;
        
        public event System.EventHandler<GetCustomerFilteredTicketsCompletedEventArgs> GetCustomerFilteredTicketsCompleted;
        
        public event System.EventHandler<SetForwardTicketsCompletedEventArgs> SetForwardTicketsCompleted;
        
        public event System.EventHandler<GetPartnerFilteredTicketsCompletedEventArgs> GetPartnerFilteredTicketsCompleted;
        
        public event System.EventHandler<GetLeadStatusCompletedEventArgs> GetLeadStatusCompleted;
        
        public event System.EventHandler<GetCustomerAddOnsCompletedEventArgs> GetCustomerAddOnsCompleted;
        
        public event System.EventHandler<SetPartnerAccountInformationCompletedEventArgs> SetPartnerAccountInformationCompleted;
        
        public event System.EventHandler<SetCustomerAccountInformationCompletedEventArgs> SetCustomerAccountInformationCompleted;
        
        public event System.EventHandler<SetLeadStatusCompletedEventArgs> SetLeadStatusCompleted;
        
        public event System.EventHandler<GetPartnerPlansCompletedEventArgs> GetPartnerPlansCompleted;
        
        public event System.EventHandler<GetPartnerListingCompletedEventArgs> GetPartnerListingCompleted;
        
        public event System.EventHandler<GetPartnerFilteredListingCompletedEventArgs> GetPartnerFilteredListingCompleted;
        
        public event System.EventHandler<GetPartnerLeadDetailsCompletedEventArgs> GetPartnerLeadDetailsCompleted;
        
        public event System.EventHandler<CancellAssociationRequestCompletedEventArgs> CancellAssociationRequestCompleted;
        
        public event System.EventHandler<DeletePartnerLinkCompletedEventArgs> DeletePartnerLinkCompleted;
        
        public event System.EventHandler<partnerAssociationRequestCompletedEventArgs> partnerAssociationRequestCompleted;
        
        public event System.EventHandler<GetPartnerCountriesCompletedEventArgs> GetPartnerCountriesCompleted;
        
        public event System.EventHandler<GetAssociatedSPCompletedEventArgs> GetAssociatedSPCompleted;
        
        public event System.EventHandler<AboutviennaCompletedEventArgs> AboutviennaCompleted;
        
        public event System.EventHandler<GetSupportTicketStatusCompletedEventArgs> GetSupportTicketStatusCompleted;
        
        public event System.EventHandler<GetCustomerStatusSupportTicketCompletedEventArgs> GetCustomerStatusSupportTicketCompleted;
        
        public event System.EventHandler<GetCustomerSupportTicketsCompletedEventArgs> GetCustomerSupportTicketsCompleted;
        
        public event System.EventHandler<GetCustomerHistoryLinesCompletedEventArgs> GetCustomerHistoryLinesCompleted;
        
        public event System.EventHandler<GetCustomerTicketPriorityCompletedEventArgs> GetCustomerTicketPriorityCompleted;
        
        public event System.EventHandler<GetCustomerTicketRequestTypeCompletedEventArgs> GetCustomerTicketRequestTypeCompleted;
        
        public event System.EventHandler<SetCustomerNewTicketCompletedEventArgs> SetCustomerNewTicketCompleted;
        
        public event System.EventHandler<SetCustomerTicketHistoryLinesCompletedEventArgs> SetCustomerTicketHistoryLinesCompleted;
        
        public event System.EventHandler<GetCustomerTicketDetailsCompletedEventArgs> GetCustomerTicketDetailsCompleted;
        
        public event System.EventHandler<SetDBRestoreCompletedEventArgs> SetDBRestoreCompleted;
        
        public event System.EventHandler<GetVUnBilledInfoCompletedEventArgs> GetVUnBilledInfoCompleted;
        
        public event System.EventHandler<GetVCustomerBillingSummaryCompletedEventArgs> GetVCustomerBillingSummaryCompleted;
        
        public event System.EventHandler<GetVBillingInfoCompletedEventArgs> GetVBillingInfoCompleted;
        
        public event System.EventHandler<SetLeadCompletedEventArgs> SetLeadCompleted;
        
        public event System.EventHandler<GetTopicInfoCompletedEventArgs> GetTopicInfoCompleted;
        
        public event System.EventHandler<GetInstructionCompletedEventArgs> GetInstructionCompleted;
        
        public event System.EventHandler<serverInfoCompletedEventArgs> serverInfoCompleted;
        
        public event System.EventHandler<GetOldIncomleteDBCompletedEventArgs> GetOldIncomleteDBCompleted;
        
        public event System.EventHandler<DeleteDBEntryCompletedEventArgs> DeleteDBEntryCompleted;
        
        public event System.EventHandler<GetAssetNotInUseCompletedEventArgs> GetAssetNotInUseCompleted;
        
        public event System.EventHandler<SendNoticeCompletedEventArgs> SendNoticeCompleted;
        
        public event System.EventHandler<SendReminderExpMailCompletedEventArgs> SendReminderExpMailCompleted;
        
        public event System.EventHandler<DownloadFileCompletedEventArgs> DownloadFileCompleted;
        
        public event System.EventHandler<CheckUserFilesCompletedEventArgs> CheckUserFilesCompleted;
        
        public event System.EventHandler<GetCurrentRunningTenantCompletedEventArgs> GetCurrentRunningTenantCompleted;
        
        public event System.EventHandler<ModuleInstallationRequestCompletedEventArgs> ModuleInstallationRequestCompleted;
        
        public event System.EventHandler<GetRequestToInstallModuleCompletedEventArgs> GetRequestToInstallModuleCompleted;
        
        public event System.EventHandler<GetCustomerPServerInfoCompletedEventArgs> GetCustomerPServerInfoCompleted;
        
        public event System.EventHandler<GetSubscriptionDaysCompletedEventArgs> GetSubscriptionDaysCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> PackageEntryIntoItemMasterTestCompleted;
        
        public event System.EventHandler<PackageEntryIntoItemMasterCompletedEventArgs> PackageEntryIntoItemMasterCompleted;
        
        public event System.EventHandler<AuthenticateHardwareCompletedEventArgs> AuthenticateHardwareCompleted;
        
        public event System.EventHandler<IsHardwareActivatedCompletedEventArgs> IsHardwareActivatedCompleted;
        
        public event System.EventHandler<SOTCSettingCompletedEventArgs> SOTCSettingCompleted;
        
        public event System.EventHandler<SKCompletedEventArgs> SKCompleted;
        
        public event System.EventHandler<CreadientialsWorkCompletedEventArgs> CreadientialsWorkCompleted;
        
        public event System.EventHandler<SavePrinterListCompletedEventArgs> SavePrinterListCompleted;
        
        public event System.EventHandler<GetPrinterListCompletedEventArgs> GetPrinterListCompleted;
        
        public event System.EventHandler<CheckUpdateCompletedEventArgs> CheckUpdateCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> GetUserUpdateTimeSettingsCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> GetUserLSSettingsCompleted;
        
        public event System.EventHandler<MarkReadyCompletedEventArgs> MarkReadyCompleted;
        
        public event System.EventHandler<InsertUpdateConfigCompletedEventArgs> InsertUpdateConfigCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> EmailToUserCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> GetUserUpdateTimeSettingsDemoCompleted;
        
        public event System.EventHandler<GetHardwaresCompletedEventArgs> GetHardwaresCompleted;
        
        public event System.EventHandler<ActivateUpdateHardwareCompletedEventArgs> ActivateUpdateHardwareCompleted;
        
        public event System.EventHandler<GetConsolesCompletedEventArgs> GetConsolesCompleted;
        
        public event System.EventHandler<GetModelBrandDriverCompletedEventArgs> GetModelBrandDriverCompleted;
        
        public event System.EventHandler<GetSetPrintersCompletedEventArgs> GetSetPrintersCompleted;
        
        public event System.EventHandler<GetPrintersCompletedEventArgs> GetPrintersCompleted;
        
        public event System.EventHandler<GetSetLocalServersCompletedEventArgs> GetSetLocalServersCompleted;
        
        public event System.EventHandler<GetSetUpdateTimeSettingsCompletedEventArgs> GetSetUpdateTimeSettingsCompleted;
        
        public event System.EventHandler<GetSiteInfoCompletedEventArgs> GetSiteInfoCompleted;
        
        public event System.EventHandler<GetSiteZoneInfoCompletedEventArgs> GetSiteZoneInfoCompleted;
        
        public event System.EventHandler<GetSiteProductInfoCompletedEventArgs> GetSiteProductInfoCompleted;
        
        public event System.EventHandler<HelloCompletedEventArgs> HelloCompleted;
        
        public event System.EventHandler<SaveCustomerTenentInfoM1CompletedEventArgs> SaveCustomerTenentInfoM1Completed;
        
        public event System.EventHandler<SaveCustomerTenentInfoM1fromMobileCompletedEventArgs> SaveCustomerTenentInfoM1fromMobileCompleted;
        
        public event System.EventHandler<SaveCustomerTenentInfoCompletedEventArgs> SaveCustomerTenentInfoCompleted;
        
        public event System.EventHandler<IsDomainExistCompletedEventArgs> IsDomainExistCompleted;
        
        public event System.EventHandler<RegisterInfoFromModuleCompletedEventArgs> RegisterInfoFromModuleCompleted;
        
        public event System.EventHandler<GetVideosFromDMSCompletedEventArgs> GetVideosFromDMSCompleted;
        
        public event System.EventHandler<RegisterTempInfoCompletedEventArgs> RegisterTempInfoCompleted;
        
        public event System.EventHandler<RegisterInfoCompletedEventArgs> RegisterInfoCompleted;
        
        public event System.EventHandler<VRegisterInfoTCompletedEventArgs> VRegisterInfoTCompleted;
        
        public event System.EventHandler<VRegisterInfoCompletedEventArgs> VRegisterInfoCompleted;
        
        public event System.EventHandler<GetCustomerServerAndFTPInfoCompletedEventArgs> GetCustomerServerAndFTPInfoCompleted;
        
        public event System.EventHandler<GetCustomerServerInfoM1CompletedEventArgs> GetCustomerServerInfoM1Completed;
        
        public event System.EventHandler<GetCustomerServerInfoM2CompletedEventArgs> GetCustomerServerInfoM2Completed;
        
        public event System.EventHandler<GetCustomerServerInfoM3CompletedEventArgs> GetCustomerServerInfoM3Completed;
        
        public event System.EventHandler<GetCustomerServerInfoM4CompletedEventArgs> GetCustomerServerInfoM4Completed;
        
        public event System.EventHandler<VerifyUserM1CompletedEventArgs> VerifyUserM1Completed;
        
        public event System.EventHandler<GetUniqueUserKeyCompletedEventArgs> GetUniqueUserKeyCompleted;
        
        public event System.EventHandler<GetAmountCompletedEventArgs> GetAmountCompleted;
        
        public event System.EventHandler<SubscribeProductCompletedEventArgs> SubscribeProductCompleted;
        
        public event System.EventHandler<UnSubscribeProductCompletedEventArgs> UnSubscribeProductCompleted;
        
        public event System.EventHandler<GetFTPInfoCompletedEventArgs> GetFTPInfoCompleted;
        
        public event System.EventHandler<GetAllCountriesCompletedEventArgs> GetAllCountriesCompleted;
        
        public event System.EventHandler<GetAllCountriesFromMobileCompletedEventArgs> GetAllCountriesFromMobileCompleted;
        
        public event System.EventHandler<GetNewTenantCompletedEventArgs> GetNewTenantCompleted;
        
        public event System.EventHandler<GetRelatedProductCompletedEventArgs> GetRelatedProductCompleted;
        
        public event System.EventHandler<GetCustomerAccountDetailCompletedEventArgs> GetCustomerAccountDetailCompleted;
        
        public event System.EventHandler<GetRelatedProductM1CompletedEventArgs> GetRelatedProductM1Completed;
        
        public event System.EventHandler<SetCustomerAccountDetailCompletedEventArgs> SetCustomerAccountDetailCompleted;
        
        public event System.EventHandler<GetCustomerNotificationCompletedEventArgs> GetCustomerNotificationCompleted;
        
        public event System.EventHandler<GetCustomerNotificationM1CompletedEventArgs> GetCustomerNotificationM1Completed;
        
        public event System.EventHandler<AcknowledgeCustomerNotificationCompletedEventArgs> AcknowledgeCustomerNotificationCompleted;
        
        public event System.EventHandler<GetCustomerCompanyDetailCompletedEventArgs> GetCustomerCompanyDetailCompleted;
        
        public event System.EventHandler<LoginCompletedEventArgs> LoginCompleted;
        
        public event System.EventHandler<LoginFromMobileCompletedEventArgs> LoginFromMobileCompleted;
        
        public event System.EventHandler<VLoginCompletedEventArgs> VLoginCompleted;
        
        public event System.EventHandler<IsFreeProductCompletedEventArgs> IsFreeProductCompleted;
        
        public event System.EventHandler<CheckUserVerifiedM1CompletedEventArgs> CheckUserVerifiedM1Completed;
        
        public event System.EventHandler<CheckUserVerifiedM2CompletedEventArgs> CheckUserVerifiedM2Completed;
        
        public event System.EventHandler<GetCustomerDBBackUpCompletedEventArgs> GetCustomerDBBackUpCompleted;
        
        public event System.EventHandler<RestoreDBBackUpCompletedEventArgs> RestoreDBBackUpCompleted;
        
        public event System.EventHandler<VerifyUserM2CompletedEventArgs> VerifyUserM2Completed;
        
        public event System.EventHandler<VerifyUserM3CompletedEventArgs> VerifyUserM3Completed;
        
        public event System.EventHandler<VerifyUserM4CompletedEventArgs> VerifyUserM4Completed;
        
        public event System.EventHandler<DeleteDBBackUpCompletedEventArgs> DeleteDBBackUpCompleted;
        
        public event System.EventHandler<CreateBackUpCompletedEventArgs> CreateBackUpCompleted;
        
        public event System.EventHandler<ChangeAdminPasswordOnClientERPCompletedEventArgs> ChangeAdminPasswordOnClientERPCompleted;
        
        public event System.EventHandler<GetCustomerZoneCodeCompletedEventArgs> GetCustomerZoneCodeCompleted;
        
        public event System.EventHandler<ForgetPasswordCompletedEventArgs> ForgetPasswordCompleted;
        
        public event System.EventHandler<VForgetPasswordCompletedEventArgs> VForgetPasswordCompleted;
        
        public event System.EventHandler<UpdateAssetCompletedEventArgs> UpdateAssetCompleted;
        
        public event System.EventHandler<GetAllCurrencyCompletedEventArgs> GetAllCurrencyCompleted;
        
        public event System.EventHandler<GetAllCurrencyFromMobileCompletedEventArgs> GetAllCurrencyFromMobileCompleted;
        
        public event System.EventHandler<CreateTenantCompletedEventArgs> CreateTenantCompleted;
        
        public event System.EventHandler<GetAllDBBackupRequestCompletedEventArgs> GetAllDBBackupRequestCompleted;
        
        public event System.EventHandler<CloseRequestCompletedEventArgs> CloseRequestCompleted;
        
        public event System.EventHandler<FailedRequestCompletedEventArgs> FailedRequestCompleted;
        
        public event System.EventHandler<GetCustomerSpaceM1CompletedEventArgs> GetCustomerSpaceM1Completed;
        
        public event System.EventHandler<GetCustomerSpaceM2CompletedEventArgs> GetCustomerSpaceM2Completed;
        
        public event System.EventHandler<SetCustomerSpaceCompletedEventArgs> SetCustomerSpaceCompleted;
        
        public event System.EventHandler<GetAllDBDeleteRequestCompletedEventArgs> GetAllDBDeleteRequestCompleted;
        
        public event System.EventHandler<GetAllDBRestoreRequestCompletedEventArgs> GetAllDBRestoreRequestCompleted;
        
        public event System.EventHandler<CreateCustomerUserCompletedEventArgs> CreateCustomerUserCompleted;
        
        public event System.EventHandler<VerifyTenantCreatedCompletedEventArgs> VerifyTenantCreatedCompleted;
        
        public event System.EventHandler<VerifyTenantCreatedFromMobileCompletedEventArgs> VerifyTenantCreatedFromMobileCompleted;
        
        public event System.EventHandler<GetAllZoneMasterServerCompletedEventArgs> GetAllZoneMasterServerCompleted;
        
        public event System.EventHandler<GetAllZoneMasterServerFromMobileCompletedEventArgs> GetAllZoneMasterServerFromMobileCompleted;
        
        public event System.EventHandler<GetTenantforDBMigrationCompletedEventArgs> GetTenantforDBMigrationCompleted;
        
        public event System.EventHandler<GetTenantforDBMigrationWithServerInfoCompletedEventArgs> GetTenantforDBMigrationWithServerInfoCompleted;
        
        public event System.EventHandler<SetDBTempMigrationInProcessCompletedEventArgs> SetDBTempMigrationInProcessCompleted;
        
        public event System.EventHandler<SetIsDBTempMigratedCompletedEventArgs> SetIsDBTempMigratedCompleted;
        
        public event System.EventHandler<SetAliseCardNoCompletedEventArgs> SetAliseCardNoCompleted;
        
        public event System.EventHandler<GetAliseCardNoCompletedEventArgs> GetAliseCardNoCompleted;
        
        public event System.EventHandler<SetLastLoginCompletedEventArgs> SetLastLoginCompleted;
        
        public event System.EventHandler<CheckCustomerUserSpaceM1CompletedEventArgs> CheckCustomerUserSpaceM1Completed;
        
        public event System.EventHandler<CheckCustomerUserSpaceM2CompletedEventArgs> CheckCustomerUserSpaceM2Completed;
        
        public event System.EventHandler<CheckCustomerUserSpaceM3CompletedEventArgs> CheckCustomerUserSpaceM3Completed;
        
        public event System.EventHandler<isAllowedToContinueCompletedEventArgs> isAllowedToContinueCompleted;
        
        public event System.EventHandler<BuyMoreSpaceCompletedEventArgs> BuyMoreSpaceCompleted;
        
        public event System.EventHandler<GetBillingInfoCompletedEventArgs> GetBillingInfoCompleted;
        
        public event System.EventHandler<GetUnBilledInfoCompletedEventArgs> GetUnBilledInfoCompleted;
        
        public event System.EventHandler<GetAllTenantforDNSCompletedEventArgs> GetAllTenantforDNSCompleted;
        
        public event System.EventHandler<UpdateDNSStatusCompletedEventArgs> UpdateDNSStatusCompleted;
        
        public event System.EventHandler<UpdateCustomerSpaceCompletedEventArgs> UpdateCustomerSpaceCompleted;
        
        public event System.EventHandler<ScheduleBackupCompletedEventArgs> ScheduleBackupCompleted;
        
        public event System.EventHandler<SetCustomerPersonalDetailCompletedEventArgs> SetCustomerPersonalDetailCompleted;
        
        public event System.EventHandler<GetCustomerPersonalDetailCompletedEventArgs> GetCustomerPersonalDetailCompleted;
        
        public event System.EventHandler<GetCustomerBillingSummaryCompletedEventArgs> GetCustomerBillingSummaryCompleted;
        
        public event System.EventHandler<GetUserIDCompletedEventArgs> GetUserIDCompleted;
        
        public event System.EventHandler<GetUserInfoCompletedEventArgs> GetUserInfoCompleted;
        
        public event System.EventHandler<ForgotPortalPasswordCompletedEventArgs> ForgotPortalPasswordCompleted;
        
        public event System.EventHandler<VForgotPortalPasswordCompletedEventArgs> VForgotPortalPasswordCompleted;
        
        public event System.EventHandler<PForgotPortalPasswordCompletedEventArgs> PForgotPortalPasswordCompleted;
        
        public event System.EventHandler<NotifyServerCreatedCompletedEventArgs> NotifyServerCreatedCompleted;
        
        public event System.EventHandler<SaveErrorLogCompletedEventArgs> SaveErrorLogCompleted;
        
        public event System.EventHandler<SaveErrorInLogCompletedEventArgs> SaveErrorInLogCompleted;
        
        public event System.EventHandler<SaveErrorInLogM1CompletedEventArgs> SaveErrorInLogM1Completed;
        
        public event System.EventHandler<TestProccesorConnectionCompletedEventArgs> TestProccesorConnectionCompleted;
        
        public event System.EventHandler<CreateProcessServerCompletedEventArgs> CreateProcessServerCompleted;
        
        public event System.EventHandler<DeleteProcessServerCompletedEventArgs> DeleteProcessServerCompleted;
        
        public event System.EventHandler<CardVerifyPaymentCompletedEventArgs> CardVerifyPaymentCompleted;
        
        public event System.EventHandler<IsCustomerAddMoreCompanyCompletedEventArgs> IsCustomerAddMoreCompanyCompleted;
        
        public event System.EventHandler<GetCustomerDomainNameCompletedEventArgs> GetCustomerDomainNameCompleted;
        
        public event System.EventHandler<StartAndStopProcessorCompletedEventArgs> StartAndStopProcessorCompleted;
        
        public event System.EventHandler<DownloadDumpCompletedEventArgs> DownloadDumpCompleted;
        
        public event System.EventHandler<ChangeLoginUserPasswordCompletedEventArgs> ChangeLoginUserPasswordCompleted;
        
        public event System.EventHandler<SetApplicationStatusM1CompletedEventArgs> SetApplicationStatusM1Completed;
        
        public event System.EventHandler<SetApplicationStatusM2CompletedEventArgs> SetApplicationStatusM2Completed;
        
        public event System.EventHandler<GetAllAppDeleteRequestCompletedEventArgs> GetAllAppDeleteRequestCompleted;
        
        public event System.EventHandler<AssignServerIPToCustomerTenantCompletedEventArgs> AssignServerIPToCustomerTenantCompleted;
        
        public event System.EventHandler<GetIpAssignRequestCompletedEventArgs> GetIpAssignRequestCompleted;
        
        public event System.EventHandler<StartAndStopZoneServersCompletedEventArgs> StartAndStopZoneServersCompleted;
        
        public event System.EventHandler<SetAssetDeletedCompletedEventArgs> SetAssetDeletedCompleted;
        
        public event System.EventHandler<GetUserUrlCompletedEventArgs> GetUserUrlCompleted;
        
        public event System.EventHandler<GetUserProductCompletedEventArgs> GetUserProductCompleted;
        
        public event System.EventHandler<ResendEmailCompletedEventArgs> ResendEmailCompleted;
        
        public event System.EventHandler<CreateAdditionalDataBaseCompletedEventArgs> CreateAdditionalDataBaseCompleted;
        
        public event System.EventHandler<GetDummyDataBaseInfoCompletedEventArgs> GetDummyDataBaseInfoCompleted;
        
        public event System.EventHandler<UpdateDataBaseEntryCompletedEventArgs> UpdateDataBaseEntryCompleted;
        
        public event System.EventHandler<GetAdminIDForMigrarationCompletedEventArgs> GetAdminIDForMigrarationCompleted;
        
        public event System.EventHandler<CreateDummyTenantCompletedEventArgs> CreateDummyTenantCompleted;
        
        public event System.EventHandler<GetRequestsToCreateDBCompletedEventArgs> GetRequestsToCreateDBCompleted;
        
        public event System.EventHandler<GetRequestsToCreateDBWithFtpInfoCompletedEventArgs> GetRequestsToCreateDBWithFtpInfoCompleted;
        
        public event System.EventHandler<MarkMailServerCreatedCompletedEventArgs> MarkMailServerCreatedCompleted;
        
        public event System.EventHandler<GetUserInfoOfTokenKeyCompletedEventArgs> GetUserInfoOfTokenKeyCompleted;
        
        public event System.EventHandler<GetBIUserCredentialCompletedEventArgs> GetBIUserCredentialCompleted;
        
        public string GetNews(string accessKey) {
            return base.Channel.GetNews(accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetNews(string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetNews(accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGetNews(System.IAsyncResult result) {
            return base.Channel.EndGetNews(result);
        }
        
        private System.IAsyncResult OnBeginGetNews(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string accessKey = ((string)(inValues[0]));
            return this.BeginGetNews(accessKey, callback, asyncState);
        }
        
        private object[] OnEndGetNews(System.IAsyncResult result) {
            string retVal = this.EndGetNews(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetNewsCompleted(object state) {
            if ((this.GetNewsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetNewsCompleted(this, new GetNewsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetNewsAsync(string accessKey) {
            this.GetNewsAsync(accessKey, null);
        }
        
        public void GetNewsAsync(string accessKey, object userState) {
            if ((this.onBeginGetNewsDelegate == null)) {
                this.onBeginGetNewsDelegate = new BeginOperationDelegate(this.OnBeginGetNews);
            }
            if ((this.onEndGetNewsDelegate == null)) {
                this.onEndGetNewsDelegate = new EndOperationDelegate(this.OnEndGetNews);
            }
            if ((this.onGetNewsCompletedDelegate == null)) {
                this.onGetNewsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetNewsCompleted);
            }
            base.InvokeAsync(this.onBeginGetNewsDelegate, new object[] {
                        accessKey}, this.onEndGetNewsDelegate, this.onGetNewsCompletedDelegate, userState);
        }
        
        public string GetCustomerOpenTickets(int Ad_user_ID, string accessKey) {
            return base.Channel.GetCustomerOpenTickets(Ad_user_ID, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCustomerOpenTickets(int Ad_user_ID, string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCustomerOpenTickets(Ad_user_ID, accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGetCustomerOpenTickets(System.IAsyncResult result) {
            return base.Channel.EndGetCustomerOpenTickets(result);
        }
        
        private System.IAsyncResult OnBeginGetCustomerOpenTickets(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int Ad_user_ID = ((int)(inValues[0]));
            string accessKey = ((string)(inValues[1]));
            return this.BeginGetCustomerOpenTickets(Ad_user_ID, accessKey, callback, asyncState);
        }
        
        private object[] OnEndGetCustomerOpenTickets(System.IAsyncResult result) {
            string retVal = this.EndGetCustomerOpenTickets(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCustomerOpenTicketsCompleted(object state) {
            if ((this.GetCustomerOpenTicketsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCustomerOpenTicketsCompleted(this, new GetCustomerOpenTicketsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCustomerOpenTicketsAsync(int Ad_user_ID, string accessKey) {
            this.GetCustomerOpenTicketsAsync(Ad_user_ID, accessKey, null);
        }
        
        public void GetCustomerOpenTicketsAsync(int Ad_user_ID, string accessKey, object userState) {
            if ((this.onBeginGetCustomerOpenTicketsDelegate == null)) {
                this.onBeginGetCustomerOpenTicketsDelegate = new BeginOperationDelegate(this.OnBeginGetCustomerOpenTickets);
            }
            if ((this.onEndGetCustomerOpenTicketsDelegate == null)) {
                this.onEndGetCustomerOpenTicketsDelegate = new EndOperationDelegate(this.OnEndGetCustomerOpenTickets);
            }
            if ((this.onGetCustomerOpenTicketsCompletedDelegate == null)) {
                this.onGetCustomerOpenTicketsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCustomerOpenTicketsCompleted);
            }
            base.InvokeAsync(this.onBeginGetCustomerOpenTicketsDelegate, new object[] {
                        Ad_user_ID,
                        accessKey}, this.onEndGetCustomerOpenTicketsDelegate, this.onGetCustomerOpenTicketsCompletedDelegate, userState);
        }
        
        public string GetPartnerLeads(int Ad_User_ID, int CountryID, int statusID, string orderBy, string accessKey) {
            return base.Channel.GetPartnerLeads(Ad_User_ID, CountryID, statusID, orderBy, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetPartnerLeads(int Ad_User_ID, int CountryID, int statusID, string orderBy, string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPartnerLeads(Ad_User_ID, CountryID, statusID, orderBy, accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGetPartnerLeads(System.IAsyncResult result) {
            return base.Channel.EndGetPartnerLeads(result);
        }
        
        private System.IAsyncResult OnBeginGetPartnerLeads(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int Ad_User_ID = ((int)(inValues[0]));
            int CountryID = ((int)(inValues[1]));
            int statusID = ((int)(inValues[2]));
            string orderBy = ((string)(inValues[3]));
            string accessKey = ((string)(inValues[4]));
            return this.BeginGetPartnerLeads(Ad_User_ID, CountryID, statusID, orderBy, accessKey, callback, asyncState);
        }
        
        private object[] OnEndGetPartnerLeads(System.IAsyncResult result) {
            string retVal = this.EndGetPartnerLeads(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPartnerLeadsCompleted(object state) {
            if ((this.GetPartnerLeadsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPartnerLeadsCompleted(this, new GetPartnerLeadsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPartnerLeadsAsync(int Ad_User_ID, int CountryID, int statusID, string orderBy, string accessKey) {
            this.GetPartnerLeadsAsync(Ad_User_ID, CountryID, statusID, orderBy, accessKey, null);
        }
        
        public void GetPartnerLeadsAsync(int Ad_User_ID, int CountryID, int statusID, string orderBy, string accessKey, object userState) {
            if ((this.onBeginGetPartnerLeadsDelegate == null)) {
                this.onBeginGetPartnerLeadsDelegate = new BeginOperationDelegate(this.OnBeginGetPartnerLeads);
            }
            if ((this.onEndGetPartnerLeadsDelegate == null)) {
                this.onEndGetPartnerLeadsDelegate = new EndOperationDelegate(this.OnEndGetPartnerLeads);
            }
            if ((this.onGetPartnerLeadsCompletedDelegate == null)) {
                this.onGetPartnerLeadsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPartnerLeadsCompleted);
            }
            base.InvokeAsync(this.onBeginGetPartnerLeadsDelegate, new object[] {
                        Ad_User_ID,
                        CountryID,
                        statusID,
                        orderBy,
                        accessKey}, this.onEndGetPartnerLeadsDelegate, this.onGetPartnerLeadsCompletedDelegate, userState);
        }
        
        public string PartnerLogin(string username, string password, string accessKey) {
            return base.Channel.PartnerLogin(username, password, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginPartnerLogin(string username, string password, string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginPartnerLogin(username, password, accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndPartnerLogin(System.IAsyncResult result) {
            return base.Channel.EndPartnerLogin(result);
        }
        
        private System.IAsyncResult OnBeginPartnerLogin(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string username = ((string)(inValues[0]));
            string password = ((string)(inValues[1]));
            string accessKey = ((string)(inValues[2]));
            return this.BeginPartnerLogin(username, password, accessKey, callback, asyncState);
        }
        
        private object[] OnEndPartnerLogin(System.IAsyncResult result) {
            string retVal = this.EndPartnerLogin(result);
            return new object[] {
                    retVal};
        }
        
        private void OnPartnerLoginCompleted(object state) {
            if ((this.PartnerLoginCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.PartnerLoginCompleted(this, new PartnerLoginCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void PartnerLoginAsync(string username, string password, string accessKey) {
            this.PartnerLoginAsync(username, password, accessKey, null);
        }
        
        public void PartnerLoginAsync(string username, string password, string accessKey, object userState) {
            if ((this.onBeginPartnerLoginDelegate == null)) {
                this.onBeginPartnerLoginDelegate = new BeginOperationDelegate(this.OnBeginPartnerLogin);
            }
            if ((this.onEndPartnerLoginDelegate == null)) {
                this.onEndPartnerLoginDelegate = new EndOperationDelegate(this.OnEndPartnerLogin);
            }
            if ((this.onPartnerLoginCompletedDelegate == null)) {
                this.onPartnerLoginCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnPartnerLoginCompleted);
            }
            base.InvokeAsync(this.onBeginPartnerLoginDelegate, new object[] {
                        username,
                        password,
                        accessKey}, this.onEndPartnerLoginDelegate, this.onPartnerLoginCompletedDelegate, userState);
        }
        
        public string GetDetailedCustomer(int Ad_user_ID, string orderBy, string accessKey) {
            return base.Channel.GetDetailedCustomer(Ad_user_ID, orderBy, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetDetailedCustomer(int Ad_user_ID, string orderBy, string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDetailedCustomer(Ad_user_ID, orderBy, accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGetDetailedCustomer(System.IAsyncResult result) {
            return base.Channel.EndGetDetailedCustomer(result);
        }
        
        private System.IAsyncResult OnBeginGetDetailedCustomer(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int Ad_user_ID = ((int)(inValues[0]));
            string orderBy = ((string)(inValues[1]));
            string accessKey = ((string)(inValues[2]));
            return this.BeginGetDetailedCustomer(Ad_user_ID, orderBy, accessKey, callback, asyncState);
        }
        
        private object[] OnEndGetDetailedCustomer(System.IAsyncResult result) {
            string retVal = this.EndGetDetailedCustomer(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDetailedCustomerCompleted(object state) {
            if ((this.GetDetailedCustomerCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDetailedCustomerCompleted(this, new GetDetailedCustomerCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDetailedCustomerAsync(int Ad_user_ID, string orderBy, string accessKey) {
            this.GetDetailedCustomerAsync(Ad_user_ID, orderBy, accessKey, null);
        }
        
        public void GetDetailedCustomerAsync(int Ad_user_ID, string orderBy, string accessKey, object userState) {
            if ((this.onBeginGetDetailedCustomerDelegate == null)) {
                this.onBeginGetDetailedCustomerDelegate = new BeginOperationDelegate(this.OnBeginGetDetailedCustomer);
            }
            if ((this.onEndGetDetailedCustomerDelegate == null)) {
                this.onEndGetDetailedCustomerDelegate = new EndOperationDelegate(this.OnEndGetDetailedCustomer);
            }
            if ((this.onGetDetailedCustomerCompletedDelegate == null)) {
                this.onGetDetailedCustomerCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDetailedCustomerCompleted);
            }
            base.InvokeAsync(this.onBeginGetDetailedCustomerDelegate, new object[] {
                        Ad_user_ID,
                        orderBy,
                        accessKey}, this.onEndGetDetailedCustomerDelegate, this.onGetDetailedCustomerCompletedDelegate, userState);
        }
        
        public string GetCustomerProspectList(int Ad_user_ID, string orderBy, string accessKey) {
            return base.Channel.GetCustomerProspectList(Ad_user_ID, orderBy, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCustomerProspectList(int Ad_user_ID, string orderBy, string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCustomerProspectList(Ad_user_ID, orderBy, accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGetCustomerProspectList(System.IAsyncResult result) {
            return base.Channel.EndGetCustomerProspectList(result);
        }
        
        private System.IAsyncResult OnBeginGetCustomerProspectList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int Ad_user_ID = ((int)(inValues[0]));
            string orderBy = ((string)(inValues[1]));
            string accessKey = ((string)(inValues[2]));
            return this.BeginGetCustomerProspectList(Ad_user_ID, orderBy, accessKey, callback, asyncState);
        }
        
        private object[] OnEndGetCustomerProspectList(System.IAsyncResult result) {
            string retVal = this.EndGetCustomerProspectList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCustomerProspectListCompleted(object state) {
            if ((this.GetCustomerProspectListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCustomerProspectListCompleted(this, new GetCustomerProspectListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCustomerProspectListAsync(int Ad_user_ID, string orderBy, string accessKey) {
            this.GetCustomerProspectListAsync(Ad_user_ID, orderBy, accessKey, null);
        }
        
        public void GetCustomerProspectListAsync(int Ad_user_ID, string orderBy, string accessKey, object userState) {
            if ((this.onBeginGetCustomerProspectListDelegate == null)) {
                this.onBeginGetCustomerProspectListDelegate = new BeginOperationDelegate(this.OnBeginGetCustomerProspectList);
            }
            if ((this.onEndGetCustomerProspectListDelegate == null)) {
                this.onEndGetCustomerProspectListDelegate = new EndOperationDelegate(this.OnEndGetCustomerProspectList);
            }
            if ((this.onGetCustomerProspectListCompletedDelegate == null)) {
                this.onGetCustomerProspectListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCustomerProspectListCompleted);
            }
            base.InvokeAsync(this.onBeginGetCustomerProspectListDelegate, new object[] {
                        Ad_user_ID,
                        orderBy,
                        accessKey}, this.onEndGetCustomerProspectListDelegate, this.onGetCustomerProspectListCompletedDelegate, userState);
        }
        
        public string GetPartnerRecentTickets(int Ad_user_ID, string accessKey) {
            return base.Channel.GetPartnerRecentTickets(Ad_user_ID, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetPartnerRecentTickets(int Ad_user_ID, string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPartnerRecentTickets(Ad_user_ID, accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGetPartnerRecentTickets(System.IAsyncResult result) {
            return base.Channel.EndGetPartnerRecentTickets(result);
        }
        
        private System.IAsyncResult OnBeginGetPartnerRecentTickets(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int Ad_user_ID = ((int)(inValues[0]));
            string accessKey = ((string)(inValues[1]));
            return this.BeginGetPartnerRecentTickets(Ad_user_ID, accessKey, callback, asyncState);
        }
        
        private object[] OnEndGetPartnerRecentTickets(System.IAsyncResult result) {
            string retVal = this.EndGetPartnerRecentTickets(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPartnerRecentTicketsCompleted(object state) {
            if ((this.GetPartnerRecentTicketsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPartnerRecentTicketsCompleted(this, new GetPartnerRecentTicketsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPartnerRecentTicketsAsync(int Ad_user_ID, string accessKey) {
            this.GetPartnerRecentTicketsAsync(Ad_user_ID, accessKey, null);
        }
        
        public void GetPartnerRecentTicketsAsync(int Ad_user_ID, string accessKey, object userState) {
            if ((this.onBeginGetPartnerRecentTicketsDelegate == null)) {
                this.onBeginGetPartnerRecentTicketsDelegate = new BeginOperationDelegate(this.OnBeginGetPartnerRecentTickets);
            }
            if ((this.onEndGetPartnerRecentTicketsDelegate == null)) {
                this.onEndGetPartnerRecentTicketsDelegate = new EndOperationDelegate(this.OnEndGetPartnerRecentTickets);
            }
            if ((this.onGetPartnerRecentTicketsCompletedDelegate == null)) {
                this.onGetPartnerRecentTicketsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPartnerRecentTicketsCompleted);
            }
            base.InvokeAsync(this.onBeginGetPartnerRecentTicketsDelegate, new object[] {
                        Ad_user_ID,
                        accessKey}, this.onEndGetPartnerRecentTicketsDelegate, this.onGetPartnerRecentTicketsCompletedDelegate, userState);
        }
        
        public string SetCustomerAssociationWithPartner(int R_Request_ID, string Action, string Remarks, int AD_User_ID, string accessKey) {
            return base.Channel.SetCustomerAssociationWithPartner(R_Request_ID, Action, Remarks, AD_User_ID, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSetCustomerAssociationWithPartner(int R_Request_ID, string Action, string Remarks, int AD_User_ID, string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetCustomerAssociationWithPartner(R_Request_ID, Action, Remarks, AD_User_ID, accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndSetCustomerAssociationWithPartner(System.IAsyncResult result) {
            return base.Channel.EndSetCustomerAssociationWithPartner(result);
        }
        
        private System.IAsyncResult OnBeginSetCustomerAssociationWithPartner(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int R_Request_ID = ((int)(inValues[0]));
            string Action = ((string)(inValues[1]));
            string Remarks = ((string)(inValues[2]));
            int AD_User_ID = ((int)(inValues[3]));
            string accessKey = ((string)(inValues[4]));
            return this.BeginSetCustomerAssociationWithPartner(R_Request_ID, Action, Remarks, AD_User_ID, accessKey, callback, asyncState);
        }
        
        private object[] OnEndSetCustomerAssociationWithPartner(System.IAsyncResult result) {
            string retVal = this.EndSetCustomerAssociationWithPartner(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSetCustomerAssociationWithPartnerCompleted(object state) {
            if ((this.SetCustomerAssociationWithPartnerCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetCustomerAssociationWithPartnerCompleted(this, new SetCustomerAssociationWithPartnerCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetCustomerAssociationWithPartnerAsync(int R_Request_ID, string Action, string Remarks, int AD_User_ID, string accessKey) {
            this.SetCustomerAssociationWithPartnerAsync(R_Request_ID, Action, Remarks, AD_User_ID, accessKey, null);
        }
        
        public void SetCustomerAssociationWithPartnerAsync(int R_Request_ID, string Action, string Remarks, int AD_User_ID, string accessKey, object userState) {
            if ((this.onBeginSetCustomerAssociationWithPartnerDelegate == null)) {
                this.onBeginSetCustomerAssociationWithPartnerDelegate = new BeginOperationDelegate(this.OnBeginSetCustomerAssociationWithPartner);
            }
            if ((this.onEndSetCustomerAssociationWithPartnerDelegate == null)) {
                this.onEndSetCustomerAssociationWithPartnerDelegate = new EndOperationDelegate(this.OnEndSetCustomerAssociationWithPartner);
            }
            if ((this.onSetCustomerAssociationWithPartnerCompletedDelegate == null)) {
                this.onSetCustomerAssociationWithPartnerCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetCustomerAssociationWithPartnerCompleted);
            }
            base.InvokeAsync(this.onBeginSetCustomerAssociationWithPartnerDelegate, new object[] {
                        R_Request_ID,
                        Action,
                        Remarks,
                        AD_User_ID,
                        accessKey}, this.onEndSetCustomerAssociationWithPartnerDelegate, this.onSetCustomerAssociationWithPartnerCompletedDelegate, userState);
        }
        
        public string GetCustomerBillingDetail(int Customer_ID, int AD_user_ID, string accessKey) {
            return base.Channel.GetCustomerBillingDetail(Customer_ID, AD_user_ID, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCustomerBillingDetail(int Customer_ID, int AD_user_ID, string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCustomerBillingDetail(Customer_ID, AD_user_ID, accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGetCustomerBillingDetail(System.IAsyncResult result) {
            return base.Channel.EndGetCustomerBillingDetail(result);
        }
        
        private System.IAsyncResult OnBeginGetCustomerBillingDetail(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int Customer_ID = ((int)(inValues[0]));
            int AD_user_ID = ((int)(inValues[1]));
            string accessKey = ((string)(inValues[2]));
            return this.BeginGetCustomerBillingDetail(Customer_ID, AD_user_ID, accessKey, callback, asyncState);
        }
        
        private object[] OnEndGetCustomerBillingDetail(System.IAsyncResult result) {
            string retVal = this.EndGetCustomerBillingDetail(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCustomerBillingDetailCompleted(object state) {
            if ((this.GetCustomerBillingDetailCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCustomerBillingDetailCompleted(this, new GetCustomerBillingDetailCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCustomerBillingDetailAsync(int Customer_ID, int AD_user_ID, string accessKey) {
            this.GetCustomerBillingDetailAsync(Customer_ID, AD_user_ID, accessKey, null);
        }
        
        public void GetCustomerBillingDetailAsync(int Customer_ID, int AD_user_ID, string accessKey, object userState) {
            if ((this.onBeginGetCustomerBillingDetailDelegate == null)) {
                this.onBeginGetCustomerBillingDetailDelegate = new BeginOperationDelegate(this.OnBeginGetCustomerBillingDetail);
            }
            if ((this.onEndGetCustomerBillingDetailDelegate == null)) {
                this.onEndGetCustomerBillingDetailDelegate = new EndOperationDelegate(this.OnEndGetCustomerBillingDetail);
            }
            if ((this.onGetCustomerBillingDetailCompletedDelegate == null)) {
                this.onGetCustomerBillingDetailCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCustomerBillingDetailCompleted);
            }
            base.InvokeAsync(this.onBeginGetCustomerBillingDetailDelegate, new object[] {
                        Customer_ID,
                        AD_user_ID,
                        accessKey}, this.onEndGetCustomerBillingDetailDelegate, this.onGetCustomerBillingDetailCompletedDelegate, userState);
        }
        
        public string GetPartnerLinks(int PartnerID, string accessKey) {
            return base.Channel.GetPartnerLinks(PartnerID, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetPartnerLinks(int PartnerID, string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPartnerLinks(PartnerID, accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGetPartnerLinks(System.IAsyncResult result) {
            return base.Channel.EndGetPartnerLinks(result);
        }
        
        private System.IAsyncResult OnBeginGetPartnerLinks(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int PartnerID = ((int)(inValues[0]));
            string accessKey = ((string)(inValues[1]));
            return this.BeginGetPartnerLinks(PartnerID, accessKey, callback, asyncState);
        }
        
        private object[] OnEndGetPartnerLinks(System.IAsyncResult result) {
            string retVal = this.EndGetPartnerLinks(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPartnerLinksCompleted(object state) {
            if ((this.GetPartnerLinksCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPartnerLinksCompleted(this, new GetPartnerLinksCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPartnerLinksAsync(int PartnerID, string accessKey) {
            this.GetPartnerLinksAsync(PartnerID, accessKey, null);
        }
        
        public void GetPartnerLinksAsync(int PartnerID, string accessKey, object userState) {
            if ((this.onBeginGetPartnerLinksDelegate == null)) {
                this.onBeginGetPartnerLinksDelegate = new BeginOperationDelegate(this.OnBeginGetPartnerLinks);
            }
            if ((this.onEndGetPartnerLinksDelegate == null)) {
                this.onEndGetPartnerLinksDelegate = new EndOperationDelegate(this.OnEndGetPartnerLinks);
            }
            if ((this.onGetPartnerLinksCompletedDelegate == null)) {
                this.onGetPartnerLinksCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPartnerLinksCompleted);
            }
            base.InvokeAsync(this.onBeginGetPartnerLinksDelegate, new object[] {
                        PartnerID,
                        accessKey}, this.onEndGetPartnerLinksDelegate, this.onGetPartnerLinksCompletedDelegate, userState);
        }
        
        public string GetCustomerDetailedView(int Customer_ID, string accessKey) {
            return base.Channel.GetCustomerDetailedView(Customer_ID, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCustomerDetailedView(int Customer_ID, string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCustomerDetailedView(Customer_ID, accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGetCustomerDetailedView(System.IAsyncResult result) {
            return base.Channel.EndGetCustomerDetailedView(result);
        }
        
        private System.IAsyncResult OnBeginGetCustomerDetailedView(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int Customer_ID = ((int)(inValues[0]));
            string accessKey = ((string)(inValues[1]));
            return this.BeginGetCustomerDetailedView(Customer_ID, accessKey, callback, asyncState);
        }
        
        private object[] OnEndGetCustomerDetailedView(System.IAsyncResult result) {
            string retVal = this.EndGetCustomerDetailedView(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCustomerDetailedViewCompleted(object state) {
            if ((this.GetCustomerDetailedViewCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCustomerDetailedViewCompleted(this, new GetCustomerDetailedViewCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCustomerDetailedViewAsync(int Customer_ID, string accessKey) {
            this.GetCustomerDetailedViewAsync(Customer_ID, accessKey, null);
        }
        
        public void GetCustomerDetailedViewAsync(int Customer_ID, string accessKey, object userState) {
            if ((this.onBeginGetCustomerDetailedViewDelegate == null)) {
                this.onBeginGetCustomerDetailedViewDelegate = new BeginOperationDelegate(this.OnBeginGetCustomerDetailedView);
            }
            if ((this.onEndGetCustomerDetailedViewDelegate == null)) {
                this.onEndGetCustomerDetailedViewDelegate = new EndOperationDelegate(this.OnEndGetCustomerDetailedView);
            }
            if ((this.onGetCustomerDetailedViewCompletedDelegate == null)) {
                this.onGetCustomerDetailedViewCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCustomerDetailedViewCompleted);
            }
            base.InvokeAsync(this.onBeginGetCustomerDetailedViewDelegate, new object[] {
                        Customer_ID,
                        accessKey}, this.onEndGetCustomerDetailedViewDelegate, this.onGetCustomerDetailedViewCompletedDelegate, userState);
        }
        
        public string GetVCustomerDetailsView(int AD_User_ID, string accessKey) {
            return base.Channel.GetVCustomerDetailsView(AD_User_ID, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetVCustomerDetailsView(int AD_User_ID, string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetVCustomerDetailsView(AD_User_ID, accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGetVCustomerDetailsView(System.IAsyncResult result) {
            return base.Channel.EndGetVCustomerDetailsView(result);
        }
        
        private System.IAsyncResult OnBeginGetVCustomerDetailsView(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int AD_User_ID = ((int)(inValues[0]));
            string accessKey = ((string)(inValues[1]));
            return this.BeginGetVCustomerDetailsView(AD_User_ID, accessKey, callback, asyncState);
        }
        
        private object[] OnEndGetVCustomerDetailsView(System.IAsyncResult result) {
            string retVal = this.EndGetVCustomerDetailsView(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetVCustomerDetailsViewCompleted(object state) {
            if ((this.GetVCustomerDetailsViewCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetVCustomerDetailsViewCompleted(this, new GetVCustomerDetailsViewCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetVCustomerDetailsViewAsync(int AD_User_ID, string accessKey) {
            this.GetVCustomerDetailsViewAsync(AD_User_ID, accessKey, null);
        }
        
        public void GetVCustomerDetailsViewAsync(int AD_User_ID, string accessKey, object userState) {
            if ((this.onBeginGetVCustomerDetailsViewDelegate == null)) {
                this.onBeginGetVCustomerDetailsViewDelegate = new BeginOperationDelegate(this.OnBeginGetVCustomerDetailsView);
            }
            if ((this.onEndGetVCustomerDetailsViewDelegate == null)) {
                this.onEndGetVCustomerDetailsViewDelegate = new EndOperationDelegate(this.OnEndGetVCustomerDetailsView);
            }
            if ((this.onGetVCustomerDetailsViewCompletedDelegate == null)) {
                this.onGetVCustomerDetailsViewCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetVCustomerDetailsViewCompleted);
            }
            base.InvokeAsync(this.onBeginGetVCustomerDetailsViewDelegate, new object[] {
                        AD_User_ID,
                        accessKey}, this.onEndGetVCustomerDetailsViewDelegate, this.onGetVCustomerDetailsViewCompletedDelegate, userState);
        }
        
        public string GetProductPrice(string accessKey) {
            return base.Channel.GetProductPrice(accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetProductPrice(string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetProductPrice(accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGetProductPrice(System.IAsyncResult result) {
            return base.Channel.EndGetProductPrice(result);
        }
        
        private System.IAsyncResult OnBeginGetProductPrice(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string accessKey = ((string)(inValues[0]));
            return this.BeginGetProductPrice(accessKey, callback, asyncState);
        }
        
        private object[] OnEndGetProductPrice(System.IAsyncResult result) {
            string retVal = this.EndGetProductPrice(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetProductPriceCompleted(object state) {
            if ((this.GetProductPriceCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetProductPriceCompleted(this, new GetProductPriceCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetProductPriceAsync(string accessKey) {
            this.GetProductPriceAsync(accessKey, null);
        }
        
        public void GetProductPriceAsync(string accessKey, object userState) {
            if ((this.onBeginGetProductPriceDelegate == null)) {
                this.onBeginGetProductPriceDelegate = new BeginOperationDelegate(this.OnBeginGetProductPrice);
            }
            if ((this.onEndGetProductPriceDelegate == null)) {
                this.onEndGetProductPriceDelegate = new EndOperationDelegate(this.OnEndGetProductPrice);
            }
            if ((this.onGetProductPriceCompletedDelegate == null)) {
                this.onGetProductPriceCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetProductPriceCompleted);
            }
            base.InvokeAsync(this.onBeginGetProductPriceDelegate, new object[] {
                        accessKey}, this.onEndGetProductPriceDelegate, this.onGetProductPriceCompletedDelegate, userState);
        }
        
        public string GetProfessionalProductPrice(int AD_User_ID, string accessKey) {
            return base.Channel.GetProfessionalProductPrice(AD_User_ID, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetProfessionalProductPrice(int AD_User_ID, string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetProfessionalProductPrice(AD_User_ID, accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGetProfessionalProductPrice(System.IAsyncResult result) {
            return base.Channel.EndGetProfessionalProductPrice(result);
        }
        
        private System.IAsyncResult OnBeginGetProfessionalProductPrice(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int AD_User_ID = ((int)(inValues[0]));
            string accessKey = ((string)(inValues[1]));
            return this.BeginGetProfessionalProductPrice(AD_User_ID, accessKey, callback, asyncState);
        }
        
        private object[] OnEndGetProfessionalProductPrice(System.IAsyncResult result) {
            string retVal = this.EndGetProfessionalProductPrice(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetProfessionalProductPriceCompleted(object state) {
            if ((this.GetProfessionalProductPriceCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetProfessionalProductPriceCompleted(this, new GetProfessionalProductPriceCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetProfessionalProductPriceAsync(int AD_User_ID, string accessKey) {
            this.GetProfessionalProductPriceAsync(AD_User_ID, accessKey, null);
        }
        
        public void GetProfessionalProductPriceAsync(int AD_User_ID, string accessKey, object userState) {
            if ((this.onBeginGetProfessionalProductPriceDelegate == null)) {
                this.onBeginGetProfessionalProductPriceDelegate = new BeginOperationDelegate(this.OnBeginGetProfessionalProductPrice);
            }
            if ((this.onEndGetProfessionalProductPriceDelegate == null)) {
                this.onEndGetProfessionalProductPriceDelegate = new EndOperationDelegate(this.OnEndGetProfessionalProductPrice);
            }
            if ((this.onGetProfessionalProductPriceCompletedDelegate == null)) {
                this.onGetProfessionalProductPriceCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetProfessionalProductPriceCompleted);
            }
            base.InvokeAsync(this.onBeginGetProfessionalProductPriceDelegate, new object[] {
                        AD_User_ID,
                        accessKey}, this.onEndGetProfessionalProductPriceDelegate, this.onGetProfessionalProductPriceCompletedDelegate, userState);
        }
        
        public string GetTotalCurrentUser(int AD_User_ID, string accessKey) {
            return base.Channel.GetTotalCurrentUser(AD_User_ID, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetTotalCurrentUser(int AD_User_ID, string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetTotalCurrentUser(AD_User_ID, accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGetTotalCurrentUser(System.IAsyncResult result) {
            return base.Channel.EndGetTotalCurrentUser(result);
        }
        
        private System.IAsyncResult OnBeginGetTotalCurrentUser(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int AD_User_ID = ((int)(inValues[0]));
            string accessKey = ((string)(inValues[1]));
            return this.BeginGetTotalCurrentUser(AD_User_ID, accessKey, callback, asyncState);
        }
        
        private object[] OnEndGetTotalCurrentUser(System.IAsyncResult result) {
            string retVal = this.EndGetTotalCurrentUser(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetTotalCurrentUserCompleted(object state) {
            if ((this.GetTotalCurrentUserCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetTotalCurrentUserCompleted(this, new GetTotalCurrentUserCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetTotalCurrentUserAsync(int AD_User_ID, string accessKey) {
            this.GetTotalCurrentUserAsync(AD_User_ID, accessKey, null);
        }
        
        public void GetTotalCurrentUserAsync(int AD_User_ID, string accessKey, object userState) {
            if ((this.onBeginGetTotalCurrentUserDelegate == null)) {
                this.onBeginGetTotalCurrentUserDelegate = new BeginOperationDelegate(this.OnBeginGetTotalCurrentUser);
            }
            if ((this.onEndGetTotalCurrentUserDelegate == null)) {
                this.onEndGetTotalCurrentUserDelegate = new EndOperationDelegate(this.OnEndGetTotalCurrentUser);
            }
            if ((this.onGetTotalCurrentUserCompletedDelegate == null)) {
                this.onGetTotalCurrentUserCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetTotalCurrentUserCompleted);
            }
            base.InvokeAsync(this.onBeginGetTotalCurrentUserDelegate, new object[] {
                        AD_User_ID,
                        accessKey}, this.onEndGetTotalCurrentUserDelegate, this.onGetTotalCurrentUserCompletedDelegate, userState);
        }
        
        public string UpgradeOrRenewVCustomerSubscription(int AD_User_ID, int PlanID, string CardType, string NameOnCard, string CardNumber, int ExpiryDay, int ExpiryMonth, int ExpiryYear, int CVNumber, string ipAddress, string TrxID, int NoOfUser, bool IsNew, decimal priceEntered, string accessKey) {
            return base.Channel.UpgradeOrRenewVCustomerSubscription(AD_User_ID, PlanID, CardType, NameOnCard, CardNumber, ExpiryDay, ExpiryMonth, ExpiryYear, CVNumber, ipAddress, TrxID, NoOfUser, IsNew, priceEntered, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpgradeOrRenewVCustomerSubscription(
                    int AD_User_ID, 
                    int PlanID, 
                    string CardType, 
                    string NameOnCard, 
                    string CardNumber, 
                    int ExpiryDay, 
                    int ExpiryMonth, 
                    int ExpiryYear, 
                    int CVNumber, 
                    string ipAddress, 
                    string TrxID, 
                    int NoOfUser, 
                    bool IsNew, 
                    decimal priceEntered, 
                    string accessKey, 
                    System.AsyncCallback callback, 
                    object asyncState) {
            return base.Channel.BeginUpgradeOrRenewVCustomerSubscription(AD_User_ID, PlanID, CardType, NameOnCard, CardNumber, ExpiryDay, ExpiryMonth, ExpiryYear, CVNumber, ipAddress, TrxID, NoOfUser, IsNew, priceEntered, accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndUpgradeOrRenewVCustomerSubscription(System.IAsyncResult result) {
            return base.Channel.EndUpgradeOrRenewVCustomerSubscription(result);
        }
        
        private System.IAsyncResult OnBeginUpgradeOrRenewVCustomerSubscription(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int AD_User_ID = ((int)(inValues[0]));
            int PlanID = ((int)(inValues[1]));
            string CardType = ((string)(inValues[2]));
            string NameOnCard = ((string)(inValues[3]));
            string CardNumber = ((string)(inValues[4]));
            int ExpiryDay = ((int)(inValues[5]));
            int ExpiryMonth = ((int)(inValues[6]));
            int ExpiryYear = ((int)(inValues[7]));
            int CVNumber = ((int)(inValues[8]));
            string ipAddress = ((string)(inValues[9]));
            string TrxID = ((string)(inValues[10]));
            int NoOfUser = ((int)(inValues[11]));
            bool IsNew = ((bool)(inValues[12]));
            decimal priceEntered = ((decimal)(inValues[13]));
            string accessKey = ((string)(inValues[14]));
            return this.BeginUpgradeOrRenewVCustomerSubscription(AD_User_ID, PlanID, CardType, NameOnCard, CardNumber, ExpiryDay, ExpiryMonth, ExpiryYear, CVNumber, ipAddress, TrxID, NoOfUser, IsNew, priceEntered, accessKey, callback, asyncState);
        }
        
        private object[] OnEndUpgradeOrRenewVCustomerSubscription(System.IAsyncResult result) {
            string retVal = this.EndUpgradeOrRenewVCustomerSubscription(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpgradeOrRenewVCustomerSubscriptionCompleted(object state) {
            if ((this.UpgradeOrRenewVCustomerSubscriptionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpgradeOrRenewVCustomerSubscriptionCompleted(this, new UpgradeOrRenewVCustomerSubscriptionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpgradeOrRenewVCustomerSubscriptionAsync(int AD_User_ID, int PlanID, string CardType, string NameOnCard, string CardNumber, int ExpiryDay, int ExpiryMonth, int ExpiryYear, int CVNumber, string ipAddress, string TrxID, int NoOfUser, bool IsNew, decimal priceEntered, string accessKey) {
            this.UpgradeOrRenewVCustomerSubscriptionAsync(AD_User_ID, PlanID, CardType, NameOnCard, CardNumber, ExpiryDay, ExpiryMonth, ExpiryYear, CVNumber, ipAddress, TrxID, NoOfUser, IsNew, priceEntered, accessKey, null);
        }
        
        public void UpgradeOrRenewVCustomerSubscriptionAsync(
                    int AD_User_ID, 
                    int PlanID, 
                    string CardType, 
                    string NameOnCard, 
                    string CardNumber, 
                    int ExpiryDay, 
                    int ExpiryMonth, 
                    int ExpiryYear, 
                    int CVNumber, 
                    string ipAddress, 
                    string TrxID, 
                    int NoOfUser, 
                    bool IsNew, 
                    decimal priceEntered, 
                    string accessKey, 
                    object userState) {
            if ((this.onBeginUpgradeOrRenewVCustomerSubscriptionDelegate == null)) {
                this.onBeginUpgradeOrRenewVCustomerSubscriptionDelegate = new BeginOperationDelegate(this.OnBeginUpgradeOrRenewVCustomerSubscription);
            }
            if ((this.onEndUpgradeOrRenewVCustomerSubscriptionDelegate == null)) {
                this.onEndUpgradeOrRenewVCustomerSubscriptionDelegate = new EndOperationDelegate(this.OnEndUpgradeOrRenewVCustomerSubscription);
            }
            if ((this.onUpgradeOrRenewVCustomerSubscriptionCompletedDelegate == null)) {
                this.onUpgradeOrRenewVCustomerSubscriptionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpgradeOrRenewVCustomerSubscriptionCompleted);
            }
            base.InvokeAsync(this.onBeginUpgradeOrRenewVCustomerSubscriptionDelegate, new object[] {
                        AD_User_ID,
                        PlanID,
                        CardType,
                        NameOnCard,
                        CardNumber,
                        ExpiryDay,
                        ExpiryMonth,
                        ExpiryYear,
                        CVNumber,
                        ipAddress,
                        TrxID,
                        NoOfUser,
                        IsNew,
                        priceEntered,
                        accessKey}, this.onEndUpgradeOrRenewVCustomerSubscriptionDelegate, this.onUpgradeOrRenewVCustomerSubscriptionCompletedDelegate, userState);
        }
        
        public string GetPartnerDetailsView(int Partner_ID, string accessKey) {
            return base.Channel.GetPartnerDetailsView(Partner_ID, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetPartnerDetailsView(int Partner_ID, string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPartnerDetailsView(Partner_ID, accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGetPartnerDetailsView(System.IAsyncResult result) {
            return base.Channel.EndGetPartnerDetailsView(result);
        }
        
        private System.IAsyncResult OnBeginGetPartnerDetailsView(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int Partner_ID = ((int)(inValues[0]));
            string accessKey = ((string)(inValues[1]));
            return this.BeginGetPartnerDetailsView(Partner_ID, accessKey, callback, asyncState);
        }
        
        private object[] OnEndGetPartnerDetailsView(System.IAsyncResult result) {
            string retVal = this.EndGetPartnerDetailsView(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPartnerDetailsViewCompleted(object state) {
            if ((this.GetPartnerDetailsViewCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPartnerDetailsViewCompleted(this, new GetPartnerDetailsViewCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPartnerDetailsViewAsync(int Partner_ID, string accessKey) {
            this.GetPartnerDetailsViewAsync(Partner_ID, accessKey, null);
        }
        
        public void GetPartnerDetailsViewAsync(int Partner_ID, string accessKey, object userState) {
            if ((this.onBeginGetPartnerDetailsViewDelegate == null)) {
                this.onBeginGetPartnerDetailsViewDelegate = new BeginOperationDelegate(this.OnBeginGetPartnerDetailsView);
            }
            if ((this.onEndGetPartnerDetailsViewDelegate == null)) {
                this.onEndGetPartnerDetailsViewDelegate = new EndOperationDelegate(this.OnEndGetPartnerDetailsView);
            }
            if ((this.onGetPartnerDetailsViewCompletedDelegate == null)) {
                this.onGetPartnerDetailsViewCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPartnerDetailsViewCompleted);
            }
            base.InvokeAsync(this.onBeginGetPartnerDetailsViewDelegate, new object[] {
                        Partner_ID,
                        accessKey}, this.onEndGetPartnerDetailsViewDelegate, this.onGetPartnerDetailsViewCompletedDelegate, userState);
        }
        
        public string AddNewLinkofPartner(int partnerID, string username, string password, string url, string description, string accessKey) {
            return base.Channel.AddNewLinkofPartner(partnerID, username, password, url, description, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddNewLinkofPartner(int partnerID, string username, string password, string url, string description, string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddNewLinkofPartner(partnerID, username, password, url, description, accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndAddNewLinkofPartner(System.IAsyncResult result) {
            return base.Channel.EndAddNewLinkofPartner(result);
        }
        
        private System.IAsyncResult OnBeginAddNewLinkofPartner(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int partnerID = ((int)(inValues[0]));
            string username = ((string)(inValues[1]));
            string password = ((string)(inValues[2]));
            string url = ((string)(inValues[3]));
            string description = ((string)(inValues[4]));
            string accessKey = ((string)(inValues[5]));
            return this.BeginAddNewLinkofPartner(partnerID, username, password, url, description, accessKey, callback, asyncState);
        }
        
        private object[] OnEndAddNewLinkofPartner(System.IAsyncResult result) {
            string retVal = this.EndAddNewLinkofPartner(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddNewLinkofPartnerCompleted(object state) {
            if ((this.AddNewLinkofPartnerCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddNewLinkofPartnerCompleted(this, new AddNewLinkofPartnerCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddNewLinkofPartnerAsync(int partnerID, string username, string password, string url, string description, string accessKey) {
            this.AddNewLinkofPartnerAsync(partnerID, username, password, url, description, accessKey, null);
        }
        
        public void AddNewLinkofPartnerAsync(int partnerID, string username, string password, string url, string description, string accessKey, object userState) {
            if ((this.onBeginAddNewLinkofPartnerDelegate == null)) {
                this.onBeginAddNewLinkofPartnerDelegate = new BeginOperationDelegate(this.OnBeginAddNewLinkofPartner);
            }
            if ((this.onEndAddNewLinkofPartnerDelegate == null)) {
                this.onEndAddNewLinkofPartnerDelegate = new EndOperationDelegate(this.OnEndAddNewLinkofPartner);
            }
            if ((this.onAddNewLinkofPartnerCompletedDelegate == null)) {
                this.onAddNewLinkofPartnerCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddNewLinkofPartnerCompleted);
            }
            base.InvokeAsync(this.onBeginAddNewLinkofPartnerDelegate, new object[] {
                        partnerID,
                        username,
                        password,
                        url,
                        description,
                        accessKey}, this.onEndAddNewLinkofPartnerDelegate, this.onAddNewLinkofPartnerCompletedDelegate, userState);
        }
        
        public string GetDetailsViewPartnerSubscription(int PartnerID, string accessKey) {
            return base.Channel.GetDetailsViewPartnerSubscription(PartnerID, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetDetailsViewPartnerSubscription(int PartnerID, string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDetailsViewPartnerSubscription(PartnerID, accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGetDetailsViewPartnerSubscription(System.IAsyncResult result) {
            return base.Channel.EndGetDetailsViewPartnerSubscription(result);
        }
        
        private System.IAsyncResult OnBeginGetDetailsViewPartnerSubscription(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int PartnerID = ((int)(inValues[0]));
            string accessKey = ((string)(inValues[1]));
            return this.BeginGetDetailsViewPartnerSubscription(PartnerID, accessKey, callback, asyncState);
        }
        
        private object[] OnEndGetDetailsViewPartnerSubscription(System.IAsyncResult result) {
            string retVal = this.EndGetDetailsViewPartnerSubscription(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDetailsViewPartnerSubscriptionCompleted(object state) {
            if ((this.GetDetailsViewPartnerSubscriptionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDetailsViewPartnerSubscriptionCompleted(this, new GetDetailsViewPartnerSubscriptionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDetailsViewPartnerSubscriptionAsync(int PartnerID, string accessKey) {
            this.GetDetailsViewPartnerSubscriptionAsync(PartnerID, accessKey, null);
        }
        
        public void GetDetailsViewPartnerSubscriptionAsync(int PartnerID, string accessKey, object userState) {
            if ((this.onBeginGetDetailsViewPartnerSubscriptionDelegate == null)) {
                this.onBeginGetDetailsViewPartnerSubscriptionDelegate = new BeginOperationDelegate(this.OnBeginGetDetailsViewPartnerSubscription);
            }
            if ((this.onEndGetDetailsViewPartnerSubscriptionDelegate == null)) {
                this.onEndGetDetailsViewPartnerSubscriptionDelegate = new EndOperationDelegate(this.OnEndGetDetailsViewPartnerSubscription);
            }
            if ((this.onGetDetailsViewPartnerSubscriptionCompletedDelegate == null)) {
                this.onGetDetailsViewPartnerSubscriptionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDetailsViewPartnerSubscriptionCompleted);
            }
            base.InvokeAsync(this.onBeginGetDetailsViewPartnerSubscriptionDelegate, new object[] {
                        PartnerID,
                        accessKey}, this.onEndGetDetailsViewPartnerSubscriptionDelegate, this.onGetDetailsViewPartnerSubscriptionCompletedDelegate, userState);
        }
        
        public string GetDetailsViewCustomerSubscription(int AD_User_ID, string accessKey) {
            return base.Channel.GetDetailsViewCustomerSubscription(AD_User_ID, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetDetailsViewCustomerSubscription(int AD_User_ID, string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDetailsViewCustomerSubscription(AD_User_ID, accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGetDetailsViewCustomerSubscription(System.IAsyncResult result) {
            return base.Channel.EndGetDetailsViewCustomerSubscription(result);
        }
        
        private System.IAsyncResult OnBeginGetDetailsViewCustomerSubscription(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int AD_User_ID = ((int)(inValues[0]));
            string accessKey = ((string)(inValues[1]));
            return this.BeginGetDetailsViewCustomerSubscription(AD_User_ID, accessKey, callback, asyncState);
        }
        
        private object[] OnEndGetDetailsViewCustomerSubscription(System.IAsyncResult result) {
            string retVal = this.EndGetDetailsViewCustomerSubscription(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDetailsViewCustomerSubscriptionCompleted(object state) {
            if ((this.GetDetailsViewCustomerSubscriptionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDetailsViewCustomerSubscriptionCompleted(this, new GetDetailsViewCustomerSubscriptionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDetailsViewCustomerSubscriptionAsync(int AD_User_ID, string accessKey) {
            this.GetDetailsViewCustomerSubscriptionAsync(AD_User_ID, accessKey, null);
        }
        
        public void GetDetailsViewCustomerSubscriptionAsync(int AD_User_ID, string accessKey, object userState) {
            if ((this.onBeginGetDetailsViewCustomerSubscriptionDelegate == null)) {
                this.onBeginGetDetailsViewCustomerSubscriptionDelegate = new BeginOperationDelegate(this.OnBeginGetDetailsViewCustomerSubscription);
            }
            if ((this.onEndGetDetailsViewCustomerSubscriptionDelegate == null)) {
                this.onEndGetDetailsViewCustomerSubscriptionDelegate = new EndOperationDelegate(this.OnEndGetDetailsViewCustomerSubscription);
            }
            if ((this.onGetDetailsViewCustomerSubscriptionCompletedDelegate == null)) {
                this.onGetDetailsViewCustomerSubscriptionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDetailsViewCustomerSubscriptionCompleted);
            }
            base.InvokeAsync(this.onBeginGetDetailsViewCustomerSubscriptionDelegate, new object[] {
                        AD_User_ID,
                        accessKey}, this.onEndGetDetailsViewCustomerSubscriptionDelegate, this.onGetDetailsViewCustomerSubscriptionCompletedDelegate, userState);
        }
        
        public string UpgradeOrRenewSubscription(int AD_User_ID, int PlanID, string CardType, string NameOnCard, string CardNumber, int ExpiryDay, int ExpiryMonth, int ExpiryYear, int CVNumber, string TrxID, string ipAddress, string accessKey) {
            return base.Channel.UpgradeOrRenewSubscription(AD_User_ID, PlanID, CardType, NameOnCard, CardNumber, ExpiryDay, ExpiryMonth, ExpiryYear, CVNumber, TrxID, ipAddress, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpgradeOrRenewSubscription(int AD_User_ID, int PlanID, string CardType, string NameOnCard, string CardNumber, int ExpiryDay, int ExpiryMonth, int ExpiryYear, int CVNumber, string TrxID, string ipAddress, string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpgradeOrRenewSubscription(AD_User_ID, PlanID, CardType, NameOnCard, CardNumber, ExpiryDay, ExpiryMonth, ExpiryYear, CVNumber, TrxID, ipAddress, accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndUpgradeOrRenewSubscription(System.IAsyncResult result) {
            return base.Channel.EndUpgradeOrRenewSubscription(result);
        }
        
        private System.IAsyncResult OnBeginUpgradeOrRenewSubscription(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int AD_User_ID = ((int)(inValues[0]));
            int PlanID = ((int)(inValues[1]));
            string CardType = ((string)(inValues[2]));
            string NameOnCard = ((string)(inValues[3]));
            string CardNumber = ((string)(inValues[4]));
            int ExpiryDay = ((int)(inValues[5]));
            int ExpiryMonth = ((int)(inValues[6]));
            int ExpiryYear = ((int)(inValues[7]));
            int CVNumber = ((int)(inValues[8]));
            string TrxID = ((string)(inValues[9]));
            string ipAddress = ((string)(inValues[10]));
            string accessKey = ((string)(inValues[11]));
            return this.BeginUpgradeOrRenewSubscription(AD_User_ID, PlanID, CardType, NameOnCard, CardNumber, ExpiryDay, ExpiryMonth, ExpiryYear, CVNumber, TrxID, ipAddress, accessKey, callback, asyncState);
        }
        
        private object[] OnEndUpgradeOrRenewSubscription(System.IAsyncResult result) {
            string retVal = this.EndUpgradeOrRenewSubscription(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpgradeOrRenewSubscriptionCompleted(object state) {
            if ((this.UpgradeOrRenewSubscriptionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpgradeOrRenewSubscriptionCompleted(this, new UpgradeOrRenewSubscriptionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpgradeOrRenewSubscriptionAsync(int AD_User_ID, int PlanID, string CardType, string NameOnCard, string CardNumber, int ExpiryDay, int ExpiryMonth, int ExpiryYear, int CVNumber, string TrxID, string ipAddress, string accessKey) {
            this.UpgradeOrRenewSubscriptionAsync(AD_User_ID, PlanID, CardType, NameOnCard, CardNumber, ExpiryDay, ExpiryMonth, ExpiryYear, CVNumber, TrxID, ipAddress, accessKey, null);
        }
        
        public void UpgradeOrRenewSubscriptionAsync(int AD_User_ID, int PlanID, string CardType, string NameOnCard, string CardNumber, int ExpiryDay, int ExpiryMonth, int ExpiryYear, int CVNumber, string TrxID, string ipAddress, string accessKey, object userState) {
            if ((this.onBeginUpgradeOrRenewSubscriptionDelegate == null)) {
                this.onBeginUpgradeOrRenewSubscriptionDelegate = new BeginOperationDelegate(this.OnBeginUpgradeOrRenewSubscription);
            }
            if ((this.onEndUpgradeOrRenewSubscriptionDelegate == null)) {
                this.onEndUpgradeOrRenewSubscriptionDelegate = new EndOperationDelegate(this.OnEndUpgradeOrRenewSubscription);
            }
            if ((this.onUpgradeOrRenewSubscriptionCompletedDelegate == null)) {
                this.onUpgradeOrRenewSubscriptionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpgradeOrRenewSubscriptionCompleted);
            }
            base.InvokeAsync(this.onBeginUpgradeOrRenewSubscriptionDelegate, new object[] {
                        AD_User_ID,
                        PlanID,
                        CardType,
                        NameOnCard,
                        CardNumber,
                        ExpiryDay,
                        ExpiryMonth,
                        ExpiryYear,
                        CVNumber,
                        TrxID,
                        ipAddress,
                        accessKey}, this.onEndUpgradeOrRenewSubscriptionDelegate, this.onUpgradeOrRenewSubscriptionCompletedDelegate, userState);
        }
        
        public string GetPartnerCustomer(int AD_User_ID, string accessKey) {
            return base.Channel.GetPartnerCustomer(AD_User_ID, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetPartnerCustomer(int AD_User_ID, string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPartnerCustomer(AD_User_ID, accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGetPartnerCustomer(System.IAsyncResult result) {
            return base.Channel.EndGetPartnerCustomer(result);
        }
        
        private System.IAsyncResult OnBeginGetPartnerCustomer(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int AD_User_ID = ((int)(inValues[0]));
            string accessKey = ((string)(inValues[1]));
            return this.BeginGetPartnerCustomer(AD_User_ID, accessKey, callback, asyncState);
        }
        
        private object[] OnEndGetPartnerCustomer(System.IAsyncResult result) {
            string retVal = this.EndGetPartnerCustomer(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPartnerCustomerCompleted(object state) {
            if ((this.GetPartnerCustomerCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPartnerCustomerCompleted(this, new GetPartnerCustomerCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPartnerCustomerAsync(int AD_User_ID, string accessKey) {
            this.GetPartnerCustomerAsync(AD_User_ID, accessKey, null);
        }
        
        public void GetPartnerCustomerAsync(int AD_User_ID, string accessKey, object userState) {
            if ((this.onBeginGetPartnerCustomerDelegate == null)) {
                this.onBeginGetPartnerCustomerDelegate = new BeginOperationDelegate(this.OnBeginGetPartnerCustomer);
            }
            if ((this.onEndGetPartnerCustomerDelegate == null)) {
                this.onEndGetPartnerCustomerDelegate = new EndOperationDelegate(this.OnEndGetPartnerCustomer);
            }
            if ((this.onGetPartnerCustomerCompletedDelegate == null)) {
                this.onGetPartnerCustomerCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPartnerCustomerCompleted);
            }
            base.InvokeAsync(this.onBeginGetPartnerCustomerDelegate, new object[] {
                        AD_User_ID,
                        accessKey}, this.onEndGetPartnerCustomerDelegate, this.onGetPartnerCustomerCompletedDelegate, userState);
        }
        
        public string GetCustomerFilteredTickets(int Partner_ID, int CustomerID, int statusID, string orderBy, int pendingDays, bool isforwarded, string accessKey) {
            return base.Channel.GetCustomerFilteredTickets(Partner_ID, CustomerID, statusID, orderBy, pendingDays, isforwarded, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCustomerFilteredTickets(int Partner_ID, int CustomerID, int statusID, string orderBy, int pendingDays, bool isforwarded, string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCustomerFilteredTickets(Partner_ID, CustomerID, statusID, orderBy, pendingDays, isforwarded, accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGetCustomerFilteredTickets(System.IAsyncResult result) {
            return base.Channel.EndGetCustomerFilteredTickets(result);
        }
        
        private System.IAsyncResult OnBeginGetCustomerFilteredTickets(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int Partner_ID = ((int)(inValues[0]));
            int CustomerID = ((int)(inValues[1]));
            int statusID = ((int)(inValues[2]));
            string orderBy = ((string)(inValues[3]));
            int pendingDays = ((int)(inValues[4]));
            bool isforwarded = ((bool)(inValues[5]));
            string accessKey = ((string)(inValues[6]));
            return this.BeginGetCustomerFilteredTickets(Partner_ID, CustomerID, statusID, orderBy, pendingDays, isforwarded, accessKey, callback, asyncState);
        }
        
        private object[] OnEndGetCustomerFilteredTickets(System.IAsyncResult result) {
            string retVal = this.EndGetCustomerFilteredTickets(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCustomerFilteredTicketsCompleted(object state) {
            if ((this.GetCustomerFilteredTicketsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCustomerFilteredTicketsCompleted(this, new GetCustomerFilteredTicketsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCustomerFilteredTicketsAsync(int Partner_ID, int CustomerID, int statusID, string orderBy, int pendingDays, bool isforwarded, string accessKey) {
            this.GetCustomerFilteredTicketsAsync(Partner_ID, CustomerID, statusID, orderBy, pendingDays, isforwarded, accessKey, null);
        }
        
        public void GetCustomerFilteredTicketsAsync(int Partner_ID, int CustomerID, int statusID, string orderBy, int pendingDays, bool isforwarded, string accessKey, object userState) {
            if ((this.onBeginGetCustomerFilteredTicketsDelegate == null)) {
                this.onBeginGetCustomerFilteredTicketsDelegate = new BeginOperationDelegate(this.OnBeginGetCustomerFilteredTickets);
            }
            if ((this.onEndGetCustomerFilteredTicketsDelegate == null)) {
                this.onEndGetCustomerFilteredTicketsDelegate = new EndOperationDelegate(this.OnEndGetCustomerFilteredTickets);
            }
            if ((this.onGetCustomerFilteredTicketsCompletedDelegate == null)) {
                this.onGetCustomerFilteredTicketsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCustomerFilteredTicketsCompleted);
            }
            base.InvokeAsync(this.onBeginGetCustomerFilteredTicketsDelegate, new object[] {
                        Partner_ID,
                        CustomerID,
                        statusID,
                        orderBy,
                        pendingDays,
                        isforwarded,
                        accessKey}, this.onEndGetCustomerFilteredTicketsDelegate, this.onGetCustomerFilteredTicketsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BaseLibrary.CloudService.SetForwardTicketsResponse BaseLibrary.CloudService.ServiceSoap.SetForwardTickets(BaseLibrary.CloudService.SetForwardTicketsRequest request) {
            return base.Channel.SetForwardTickets(request);
        }
        
        public string SetForwardTickets(int AD_User_ID, int R_Request_ID, string remarks, byte[] Attachment, int docno, string fileName, string accessKey) {
            BaseLibrary.CloudService.SetForwardTicketsRequest inValue = new BaseLibrary.CloudService.SetForwardTicketsRequest();
            inValue.AD_User_ID = AD_User_ID;
            inValue.R_Request_ID = R_Request_ID;
            inValue.remarks = remarks;
            inValue.Attachment = Attachment;
            inValue.docno = docno;
            inValue.fileName = fileName;
            inValue.accessKey = accessKey;
            BaseLibrary.CloudService.SetForwardTicketsResponse retVal = ((BaseLibrary.CloudService.ServiceSoap)(this)).SetForwardTickets(inValue);
            return retVal.SetForwardTicketsResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult BaseLibrary.CloudService.ServiceSoap.BeginSetForwardTickets(BaseLibrary.CloudService.SetForwardTicketsRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetForwardTickets(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSetForwardTickets(int AD_User_ID, int R_Request_ID, string remarks, byte[] Attachment, int docno, string fileName, string accessKey, System.AsyncCallback callback, object asyncState) {
            BaseLibrary.CloudService.SetForwardTicketsRequest inValue = new BaseLibrary.CloudService.SetForwardTicketsRequest();
            inValue.AD_User_ID = AD_User_ID;
            inValue.R_Request_ID = R_Request_ID;
            inValue.remarks = remarks;
            inValue.Attachment = Attachment;
            inValue.docno = docno;
            inValue.fileName = fileName;
            inValue.accessKey = accessKey;
            return ((BaseLibrary.CloudService.ServiceSoap)(this)).BeginSetForwardTickets(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BaseLibrary.CloudService.SetForwardTicketsResponse BaseLibrary.CloudService.ServiceSoap.EndSetForwardTickets(System.IAsyncResult result) {
            return base.Channel.EndSetForwardTickets(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndSetForwardTickets(System.IAsyncResult result) {
            BaseLibrary.CloudService.SetForwardTicketsResponse retVal = ((BaseLibrary.CloudService.ServiceSoap)(this)).EndSetForwardTickets(result);
            return retVal.SetForwardTicketsResult;
        }
        
        private System.IAsyncResult OnBeginSetForwardTickets(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int AD_User_ID = ((int)(inValues[0]));
            int R_Request_ID = ((int)(inValues[1]));
            string remarks = ((string)(inValues[2]));
            byte[] Attachment = ((byte[])(inValues[3]));
            int docno = ((int)(inValues[4]));
            string fileName = ((string)(inValues[5]));
            string accessKey = ((string)(inValues[6]));
            return this.BeginSetForwardTickets(AD_User_ID, R_Request_ID, remarks, Attachment, docno, fileName, accessKey, callback, asyncState);
        }
        
        private object[] OnEndSetForwardTickets(System.IAsyncResult result) {
            string retVal = this.EndSetForwardTickets(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSetForwardTicketsCompleted(object state) {
            if ((this.SetForwardTicketsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetForwardTicketsCompleted(this, new SetForwardTicketsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetForwardTicketsAsync(int AD_User_ID, int R_Request_ID, string remarks, byte[] Attachment, int docno, string fileName, string accessKey) {
            this.SetForwardTicketsAsync(AD_User_ID, R_Request_ID, remarks, Attachment, docno, fileName, accessKey, null);
        }
        
        public void SetForwardTicketsAsync(int AD_User_ID, int R_Request_ID, string remarks, byte[] Attachment, int docno, string fileName, string accessKey, object userState) {
            if ((this.onBeginSetForwardTicketsDelegate == null)) {
                this.onBeginSetForwardTicketsDelegate = new BeginOperationDelegate(this.OnBeginSetForwardTickets);
            }
            if ((this.onEndSetForwardTicketsDelegate == null)) {
                this.onEndSetForwardTicketsDelegate = new EndOperationDelegate(this.OnEndSetForwardTickets);
            }
            if ((this.onSetForwardTicketsCompletedDelegate == null)) {
                this.onSetForwardTicketsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetForwardTicketsCompleted);
            }
            base.InvokeAsync(this.onBeginSetForwardTicketsDelegate, new object[] {
                        AD_User_ID,
                        R_Request_ID,
                        remarks,
                        Attachment,
                        docno,
                        fileName,
                        accessKey}, this.onEndSetForwardTicketsDelegate, this.onSetForwardTicketsCompletedDelegate, userState);
        }
        
        public string GetPartnerFilteredTickets(int AD_User_ID, int StatusID, int PendingDays, string OrderBy, string accessKey) {
            return base.Channel.GetPartnerFilteredTickets(AD_User_ID, StatusID, PendingDays, OrderBy, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetPartnerFilteredTickets(int AD_User_ID, int StatusID, int PendingDays, string OrderBy, string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPartnerFilteredTickets(AD_User_ID, StatusID, PendingDays, OrderBy, accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGetPartnerFilteredTickets(System.IAsyncResult result) {
            return base.Channel.EndGetPartnerFilteredTickets(result);
        }
        
        private System.IAsyncResult OnBeginGetPartnerFilteredTickets(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int AD_User_ID = ((int)(inValues[0]));
            int StatusID = ((int)(inValues[1]));
            int PendingDays = ((int)(inValues[2]));
            string OrderBy = ((string)(inValues[3]));
            string accessKey = ((string)(inValues[4]));
            return this.BeginGetPartnerFilteredTickets(AD_User_ID, StatusID, PendingDays, OrderBy, accessKey, callback, asyncState);
        }
        
        private object[] OnEndGetPartnerFilteredTickets(System.IAsyncResult result) {
            string retVal = this.EndGetPartnerFilteredTickets(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPartnerFilteredTicketsCompleted(object state) {
            if ((this.GetPartnerFilteredTicketsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPartnerFilteredTicketsCompleted(this, new GetPartnerFilteredTicketsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPartnerFilteredTicketsAsync(int AD_User_ID, int StatusID, int PendingDays, string OrderBy, string accessKey) {
            this.GetPartnerFilteredTicketsAsync(AD_User_ID, StatusID, PendingDays, OrderBy, accessKey, null);
        }
        
        public void GetPartnerFilteredTicketsAsync(int AD_User_ID, int StatusID, int PendingDays, string OrderBy, string accessKey, object userState) {
            if ((this.onBeginGetPartnerFilteredTicketsDelegate == null)) {
                this.onBeginGetPartnerFilteredTicketsDelegate = new BeginOperationDelegate(this.OnBeginGetPartnerFilteredTickets);
            }
            if ((this.onEndGetPartnerFilteredTicketsDelegate == null)) {
                this.onEndGetPartnerFilteredTicketsDelegate = new EndOperationDelegate(this.OnEndGetPartnerFilteredTickets);
            }
            if ((this.onGetPartnerFilteredTicketsCompletedDelegate == null)) {
                this.onGetPartnerFilteredTicketsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPartnerFilteredTicketsCompleted);
            }
            base.InvokeAsync(this.onBeginGetPartnerFilteredTicketsDelegate, new object[] {
                        AD_User_ID,
                        StatusID,
                        PendingDays,
                        OrderBy,
                        accessKey}, this.onEndGetPartnerFilteredTicketsDelegate, this.onGetPartnerFilteredTicketsCompletedDelegate, userState);
        }
        
        public string GetLeadStatus(string accessKey) {
            return base.Channel.GetLeadStatus(accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetLeadStatus(string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetLeadStatus(accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGetLeadStatus(System.IAsyncResult result) {
            return base.Channel.EndGetLeadStatus(result);
        }
        
        private System.IAsyncResult OnBeginGetLeadStatus(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string accessKey = ((string)(inValues[0]));
            return this.BeginGetLeadStatus(accessKey, callback, asyncState);
        }
        
        private object[] OnEndGetLeadStatus(System.IAsyncResult result) {
            string retVal = this.EndGetLeadStatus(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetLeadStatusCompleted(object state) {
            if ((this.GetLeadStatusCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetLeadStatusCompleted(this, new GetLeadStatusCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetLeadStatusAsync(string accessKey) {
            this.GetLeadStatusAsync(accessKey, null);
        }
        
        public void GetLeadStatusAsync(string accessKey, object userState) {
            if ((this.onBeginGetLeadStatusDelegate == null)) {
                this.onBeginGetLeadStatusDelegate = new BeginOperationDelegate(this.OnBeginGetLeadStatus);
            }
            if ((this.onEndGetLeadStatusDelegate == null)) {
                this.onEndGetLeadStatusDelegate = new EndOperationDelegate(this.OnEndGetLeadStatus);
            }
            if ((this.onGetLeadStatusCompletedDelegate == null)) {
                this.onGetLeadStatusCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetLeadStatusCompleted);
            }
            base.InvokeAsync(this.onBeginGetLeadStatusDelegate, new object[] {
                        accessKey}, this.onEndGetLeadStatusDelegate, this.onGetLeadStatusCompletedDelegate, userState);
        }
        
        public string GetCustomerAddOns(int AD_user_ID, string accessKey) {
            return base.Channel.GetCustomerAddOns(AD_user_ID, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCustomerAddOns(int AD_user_ID, string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCustomerAddOns(AD_user_ID, accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGetCustomerAddOns(System.IAsyncResult result) {
            return base.Channel.EndGetCustomerAddOns(result);
        }
        
        private System.IAsyncResult OnBeginGetCustomerAddOns(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int AD_user_ID = ((int)(inValues[0]));
            string accessKey = ((string)(inValues[1]));
            return this.BeginGetCustomerAddOns(AD_user_ID, accessKey, callback, asyncState);
        }
        
        private object[] OnEndGetCustomerAddOns(System.IAsyncResult result) {
            string retVal = this.EndGetCustomerAddOns(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCustomerAddOnsCompleted(object state) {
            if ((this.GetCustomerAddOnsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCustomerAddOnsCompleted(this, new GetCustomerAddOnsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCustomerAddOnsAsync(int AD_user_ID, string accessKey) {
            this.GetCustomerAddOnsAsync(AD_user_ID, accessKey, null);
        }
        
        public void GetCustomerAddOnsAsync(int AD_user_ID, string accessKey, object userState) {
            if ((this.onBeginGetCustomerAddOnsDelegate == null)) {
                this.onBeginGetCustomerAddOnsDelegate = new BeginOperationDelegate(this.OnBeginGetCustomerAddOns);
            }
            if ((this.onEndGetCustomerAddOnsDelegate == null)) {
                this.onEndGetCustomerAddOnsDelegate = new EndOperationDelegate(this.OnEndGetCustomerAddOns);
            }
            if ((this.onGetCustomerAddOnsCompletedDelegate == null)) {
                this.onGetCustomerAddOnsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCustomerAddOnsCompleted);
            }
            base.InvokeAsync(this.onBeginGetCustomerAddOnsDelegate, new object[] {
                        AD_user_ID,
                        accessKey}, this.onEndGetCustomerAddOnsDelegate, this.onGetCustomerAddOnsCompletedDelegate, userState);
        }
        
        public string SetPartnerAccountInformation(int AD_User_ID, string Fullname, string Title, string Phone, string Fax, string WebsiteURL, string city, string Address, int CountryID, string accessKey) {
            return base.Channel.SetPartnerAccountInformation(AD_User_ID, Fullname, Title, Phone, Fax, WebsiteURL, city, Address, CountryID, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSetPartnerAccountInformation(int AD_User_ID, string Fullname, string Title, string Phone, string Fax, string WebsiteURL, string city, string Address, int CountryID, string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetPartnerAccountInformation(AD_User_ID, Fullname, Title, Phone, Fax, WebsiteURL, city, Address, CountryID, accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndSetPartnerAccountInformation(System.IAsyncResult result) {
            return base.Channel.EndSetPartnerAccountInformation(result);
        }
        
        private System.IAsyncResult OnBeginSetPartnerAccountInformation(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int AD_User_ID = ((int)(inValues[0]));
            string Fullname = ((string)(inValues[1]));
            string Title = ((string)(inValues[2]));
            string Phone = ((string)(inValues[3]));
            string Fax = ((string)(inValues[4]));
            string WebsiteURL = ((string)(inValues[5]));
            string city = ((string)(inValues[6]));
            string Address = ((string)(inValues[7]));
            int CountryID = ((int)(inValues[8]));
            string accessKey = ((string)(inValues[9]));
            return this.BeginSetPartnerAccountInformation(AD_User_ID, Fullname, Title, Phone, Fax, WebsiteURL, city, Address, CountryID, accessKey, callback, asyncState);
        }
        
        private object[] OnEndSetPartnerAccountInformation(System.IAsyncResult result) {
            string retVal = this.EndSetPartnerAccountInformation(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSetPartnerAccountInformationCompleted(object state) {
            if ((this.SetPartnerAccountInformationCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetPartnerAccountInformationCompleted(this, new SetPartnerAccountInformationCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetPartnerAccountInformationAsync(int AD_User_ID, string Fullname, string Title, string Phone, string Fax, string WebsiteURL, string city, string Address, int CountryID, string accessKey) {
            this.SetPartnerAccountInformationAsync(AD_User_ID, Fullname, Title, Phone, Fax, WebsiteURL, city, Address, CountryID, accessKey, null);
        }
        
        public void SetPartnerAccountInformationAsync(int AD_User_ID, string Fullname, string Title, string Phone, string Fax, string WebsiteURL, string city, string Address, int CountryID, string accessKey, object userState) {
            if ((this.onBeginSetPartnerAccountInformationDelegate == null)) {
                this.onBeginSetPartnerAccountInformationDelegate = new BeginOperationDelegate(this.OnBeginSetPartnerAccountInformation);
            }
            if ((this.onEndSetPartnerAccountInformationDelegate == null)) {
                this.onEndSetPartnerAccountInformationDelegate = new EndOperationDelegate(this.OnEndSetPartnerAccountInformation);
            }
            if ((this.onSetPartnerAccountInformationCompletedDelegate == null)) {
                this.onSetPartnerAccountInformationCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetPartnerAccountInformationCompleted);
            }
            base.InvokeAsync(this.onBeginSetPartnerAccountInformationDelegate, new object[] {
                        AD_User_ID,
                        Fullname,
                        Title,
                        Phone,
                        Fax,
                        WebsiteURL,
                        city,
                        Address,
                        CountryID,
                        accessKey}, this.onEndSetPartnerAccountInformationDelegate, this.onSetPartnerAccountInformationCompletedDelegate, userState);
        }
        
        public string SetCustomerAccountInformation(int AD_User_ID, string Fullname, string Title, string Phone, string Fax, string WebsiteURL, string city, string Address, int CountryID, string accessKey) {
            return base.Channel.SetCustomerAccountInformation(AD_User_ID, Fullname, Title, Phone, Fax, WebsiteURL, city, Address, CountryID, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSetCustomerAccountInformation(int AD_User_ID, string Fullname, string Title, string Phone, string Fax, string WebsiteURL, string city, string Address, int CountryID, string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetCustomerAccountInformation(AD_User_ID, Fullname, Title, Phone, Fax, WebsiteURL, city, Address, CountryID, accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndSetCustomerAccountInformation(System.IAsyncResult result) {
            return base.Channel.EndSetCustomerAccountInformation(result);
        }
        
        private System.IAsyncResult OnBeginSetCustomerAccountInformation(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int AD_User_ID = ((int)(inValues[0]));
            string Fullname = ((string)(inValues[1]));
            string Title = ((string)(inValues[2]));
            string Phone = ((string)(inValues[3]));
            string Fax = ((string)(inValues[4]));
            string WebsiteURL = ((string)(inValues[5]));
            string city = ((string)(inValues[6]));
            string Address = ((string)(inValues[7]));
            int CountryID = ((int)(inValues[8]));
            string accessKey = ((string)(inValues[9]));
            return this.BeginSetCustomerAccountInformation(AD_User_ID, Fullname, Title, Phone, Fax, WebsiteURL, city, Address, CountryID, accessKey, callback, asyncState);
        }
        
        private object[] OnEndSetCustomerAccountInformation(System.IAsyncResult result) {
            string retVal = this.EndSetCustomerAccountInformation(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSetCustomerAccountInformationCompleted(object state) {
            if ((this.SetCustomerAccountInformationCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetCustomerAccountInformationCompleted(this, new SetCustomerAccountInformationCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetCustomerAccountInformationAsync(int AD_User_ID, string Fullname, string Title, string Phone, string Fax, string WebsiteURL, string city, string Address, int CountryID, string accessKey) {
            this.SetCustomerAccountInformationAsync(AD_User_ID, Fullname, Title, Phone, Fax, WebsiteURL, city, Address, CountryID, accessKey, null);
        }
        
        public void SetCustomerAccountInformationAsync(int AD_User_ID, string Fullname, string Title, string Phone, string Fax, string WebsiteURL, string city, string Address, int CountryID, string accessKey, object userState) {
            if ((this.onBeginSetCustomerAccountInformationDelegate == null)) {
                this.onBeginSetCustomerAccountInformationDelegate = new BeginOperationDelegate(this.OnBeginSetCustomerAccountInformation);
            }
            if ((this.onEndSetCustomerAccountInformationDelegate == null)) {
                this.onEndSetCustomerAccountInformationDelegate = new EndOperationDelegate(this.OnEndSetCustomerAccountInformation);
            }
            if ((this.onSetCustomerAccountInformationCompletedDelegate == null)) {
                this.onSetCustomerAccountInformationCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetCustomerAccountInformationCompleted);
            }
            base.InvokeAsync(this.onBeginSetCustomerAccountInformationDelegate, new object[] {
                        AD_User_ID,
                        Fullname,
                        Title,
                        Phone,
                        Fax,
                        WebsiteURL,
                        city,
                        Address,
                        CountryID,
                        accessKey}, this.onEndSetCustomerAccountInformationDelegate, this.onSetCustomerAccountInformationCompletedDelegate, userState);
        }
        
        public string SetLeadStatus(int LeadID, int StatusID, string Request, string Comment, string accessKey) {
            return base.Channel.SetLeadStatus(LeadID, StatusID, Request, Comment, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSetLeadStatus(int LeadID, int StatusID, string Request, string Comment, string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetLeadStatus(LeadID, StatusID, Request, Comment, accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndSetLeadStatus(System.IAsyncResult result) {
            return base.Channel.EndSetLeadStatus(result);
        }
        
        private System.IAsyncResult OnBeginSetLeadStatus(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int LeadID = ((int)(inValues[0]));
            int StatusID = ((int)(inValues[1]));
            string Request = ((string)(inValues[2]));
            string Comment = ((string)(inValues[3]));
            string accessKey = ((string)(inValues[4]));
            return this.BeginSetLeadStatus(LeadID, StatusID, Request, Comment, accessKey, callback, asyncState);
        }
        
        private object[] OnEndSetLeadStatus(System.IAsyncResult result) {
            string retVal = this.EndSetLeadStatus(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSetLeadStatusCompleted(object state) {
            if ((this.SetLeadStatusCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetLeadStatusCompleted(this, new SetLeadStatusCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetLeadStatusAsync(int LeadID, int StatusID, string Request, string Comment, string accessKey) {
            this.SetLeadStatusAsync(LeadID, StatusID, Request, Comment, accessKey, null);
        }
        
        public void SetLeadStatusAsync(int LeadID, int StatusID, string Request, string Comment, string accessKey, object userState) {
            if ((this.onBeginSetLeadStatusDelegate == null)) {
                this.onBeginSetLeadStatusDelegate = new BeginOperationDelegate(this.OnBeginSetLeadStatus);
            }
            if ((this.onEndSetLeadStatusDelegate == null)) {
                this.onEndSetLeadStatusDelegate = new EndOperationDelegate(this.OnEndSetLeadStatus);
            }
            if ((this.onSetLeadStatusCompletedDelegate == null)) {
                this.onSetLeadStatusCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetLeadStatusCompleted);
            }
            base.InvokeAsync(this.onBeginSetLeadStatusDelegate, new object[] {
                        LeadID,
                        StatusID,
                        Request,
                        Comment,
                        accessKey}, this.onEndSetLeadStatusDelegate, this.onSetLeadStatusCompletedDelegate, userState);
        }
        
        public string GetPartnerPlans(int AD_User_ID, string accessKey) {
            return base.Channel.GetPartnerPlans(AD_User_ID, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetPartnerPlans(int AD_User_ID, string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPartnerPlans(AD_User_ID, accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGetPartnerPlans(System.IAsyncResult result) {
            return base.Channel.EndGetPartnerPlans(result);
        }
        
        private System.IAsyncResult OnBeginGetPartnerPlans(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int AD_User_ID = ((int)(inValues[0]));
            string accessKey = ((string)(inValues[1]));
            return this.BeginGetPartnerPlans(AD_User_ID, accessKey, callback, asyncState);
        }
        
        private object[] OnEndGetPartnerPlans(System.IAsyncResult result) {
            string retVal = this.EndGetPartnerPlans(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPartnerPlansCompleted(object state) {
            if ((this.GetPartnerPlansCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPartnerPlansCompleted(this, new GetPartnerPlansCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPartnerPlansAsync(int AD_User_ID, string accessKey) {
            this.GetPartnerPlansAsync(AD_User_ID, accessKey, null);
        }
        
        public void GetPartnerPlansAsync(int AD_User_ID, string accessKey, object userState) {
            if ((this.onBeginGetPartnerPlansDelegate == null)) {
                this.onBeginGetPartnerPlansDelegate = new BeginOperationDelegate(this.OnBeginGetPartnerPlans);
            }
            if ((this.onEndGetPartnerPlansDelegate == null)) {
                this.onEndGetPartnerPlansDelegate = new EndOperationDelegate(this.OnEndGetPartnerPlans);
            }
            if ((this.onGetPartnerPlansCompletedDelegate == null)) {
                this.onGetPartnerPlansCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPartnerPlansCompleted);
            }
            base.InvokeAsync(this.onBeginGetPartnerPlansDelegate, new object[] {
                        AD_User_ID,
                        accessKey}, this.onEndGetPartnerPlansDelegate, this.onGetPartnerPlansCompletedDelegate, userState);
        }
        
        public string GetPartnerListing(int CountryID, int AD_User_ID, string accessKey) {
            return base.Channel.GetPartnerListing(CountryID, AD_User_ID, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetPartnerListing(int CountryID, int AD_User_ID, string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPartnerListing(CountryID, AD_User_ID, accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGetPartnerListing(System.IAsyncResult result) {
            return base.Channel.EndGetPartnerListing(result);
        }
        
        private System.IAsyncResult OnBeginGetPartnerListing(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int CountryID = ((int)(inValues[0]));
            int AD_User_ID = ((int)(inValues[1]));
            string accessKey = ((string)(inValues[2]));
            return this.BeginGetPartnerListing(CountryID, AD_User_ID, accessKey, callback, asyncState);
        }
        
        private object[] OnEndGetPartnerListing(System.IAsyncResult result) {
            string retVal = this.EndGetPartnerListing(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPartnerListingCompleted(object state) {
            if ((this.GetPartnerListingCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPartnerListingCompleted(this, new GetPartnerListingCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPartnerListingAsync(int CountryID, int AD_User_ID, string accessKey) {
            this.GetPartnerListingAsync(CountryID, AD_User_ID, accessKey, null);
        }
        
        public void GetPartnerListingAsync(int CountryID, int AD_User_ID, string accessKey, object userState) {
            if ((this.onBeginGetPartnerListingDelegate == null)) {
                this.onBeginGetPartnerListingDelegate = new BeginOperationDelegate(this.OnBeginGetPartnerListing);
            }
            if ((this.onEndGetPartnerListingDelegate == null)) {
                this.onEndGetPartnerListingDelegate = new EndOperationDelegate(this.OnEndGetPartnerListing);
            }
            if ((this.onGetPartnerListingCompletedDelegate == null)) {
                this.onGetPartnerListingCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPartnerListingCompleted);
            }
            base.InvokeAsync(this.onBeginGetPartnerListingDelegate, new object[] {
                        CountryID,
                        AD_User_ID,
                        accessKey}, this.onEndGetPartnerListingDelegate, this.onGetPartnerListingCompletedDelegate, userState);
        }
        
        public string GetPartnerFilteredListing(int RegionID, string accessKey) {
            return base.Channel.GetPartnerFilteredListing(RegionID, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetPartnerFilteredListing(int RegionID, string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPartnerFilteredListing(RegionID, accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGetPartnerFilteredListing(System.IAsyncResult result) {
            return base.Channel.EndGetPartnerFilteredListing(result);
        }
        
        private System.IAsyncResult OnBeginGetPartnerFilteredListing(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int RegionID = ((int)(inValues[0]));
            string accessKey = ((string)(inValues[1]));
            return this.BeginGetPartnerFilteredListing(RegionID, accessKey, callback, asyncState);
        }
        
        private object[] OnEndGetPartnerFilteredListing(System.IAsyncResult result) {
            string retVal = this.EndGetPartnerFilteredListing(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPartnerFilteredListingCompleted(object state) {
            if ((this.GetPartnerFilteredListingCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPartnerFilteredListingCompleted(this, new GetPartnerFilteredListingCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPartnerFilteredListingAsync(int RegionID, string accessKey) {
            this.GetPartnerFilteredListingAsync(RegionID, accessKey, null);
        }
        
        public void GetPartnerFilteredListingAsync(int RegionID, string accessKey, object userState) {
            if ((this.onBeginGetPartnerFilteredListingDelegate == null)) {
                this.onBeginGetPartnerFilteredListingDelegate = new BeginOperationDelegate(this.OnBeginGetPartnerFilteredListing);
            }
            if ((this.onEndGetPartnerFilteredListingDelegate == null)) {
                this.onEndGetPartnerFilteredListingDelegate = new EndOperationDelegate(this.OnEndGetPartnerFilteredListing);
            }
            if ((this.onGetPartnerFilteredListingCompletedDelegate == null)) {
                this.onGetPartnerFilteredListingCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPartnerFilteredListingCompleted);
            }
            base.InvokeAsync(this.onBeginGetPartnerFilteredListingDelegate, new object[] {
                        RegionID,
                        accessKey}, this.onEndGetPartnerFilteredListingDelegate, this.onGetPartnerFilteredListingCompletedDelegate, userState);
        }
        
        public string GetPartnerLeadDetails(int C_Lead_ID, string accessKey) {
            return base.Channel.GetPartnerLeadDetails(C_Lead_ID, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetPartnerLeadDetails(int C_Lead_ID, string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPartnerLeadDetails(C_Lead_ID, accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGetPartnerLeadDetails(System.IAsyncResult result) {
            return base.Channel.EndGetPartnerLeadDetails(result);
        }
        
        private System.IAsyncResult OnBeginGetPartnerLeadDetails(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int C_Lead_ID = ((int)(inValues[0]));
            string accessKey = ((string)(inValues[1]));
            return this.BeginGetPartnerLeadDetails(C_Lead_ID, accessKey, callback, asyncState);
        }
        
        private object[] OnEndGetPartnerLeadDetails(System.IAsyncResult result) {
            string retVal = this.EndGetPartnerLeadDetails(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPartnerLeadDetailsCompleted(object state) {
            if ((this.GetPartnerLeadDetailsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPartnerLeadDetailsCompleted(this, new GetPartnerLeadDetailsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPartnerLeadDetailsAsync(int C_Lead_ID, string accessKey) {
            this.GetPartnerLeadDetailsAsync(C_Lead_ID, accessKey, null);
        }
        
        public void GetPartnerLeadDetailsAsync(int C_Lead_ID, string accessKey, object userState) {
            if ((this.onBeginGetPartnerLeadDetailsDelegate == null)) {
                this.onBeginGetPartnerLeadDetailsDelegate = new BeginOperationDelegate(this.OnBeginGetPartnerLeadDetails);
            }
            if ((this.onEndGetPartnerLeadDetailsDelegate == null)) {
                this.onEndGetPartnerLeadDetailsDelegate = new EndOperationDelegate(this.OnEndGetPartnerLeadDetails);
            }
            if ((this.onGetPartnerLeadDetailsCompletedDelegate == null)) {
                this.onGetPartnerLeadDetailsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPartnerLeadDetailsCompleted);
            }
            base.InvokeAsync(this.onBeginGetPartnerLeadDetailsDelegate, new object[] {
                        C_Lead_ID,
                        accessKey}, this.onEndGetPartnerLeadDetailsDelegate, this.onGetPartnerLeadDetailsCompletedDelegate, userState);
        }
        
        public string CancellAssociationRequest(int R_Request_ID, string Remarks, int AD_User_ID, string accessKey) {
            return base.Channel.CancellAssociationRequest(R_Request_ID, Remarks, AD_User_ID, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCancellAssociationRequest(int R_Request_ID, string Remarks, int AD_User_ID, string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCancellAssociationRequest(R_Request_ID, Remarks, AD_User_ID, accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndCancellAssociationRequest(System.IAsyncResult result) {
            return base.Channel.EndCancellAssociationRequest(result);
        }
        
        private System.IAsyncResult OnBeginCancellAssociationRequest(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int R_Request_ID = ((int)(inValues[0]));
            string Remarks = ((string)(inValues[1]));
            int AD_User_ID = ((int)(inValues[2]));
            string accessKey = ((string)(inValues[3]));
            return this.BeginCancellAssociationRequest(R_Request_ID, Remarks, AD_User_ID, accessKey, callback, asyncState);
        }
        
        private object[] OnEndCancellAssociationRequest(System.IAsyncResult result) {
            string retVal = this.EndCancellAssociationRequest(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCancellAssociationRequestCompleted(object state) {
            if ((this.CancellAssociationRequestCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CancellAssociationRequestCompleted(this, new CancellAssociationRequestCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CancellAssociationRequestAsync(int R_Request_ID, string Remarks, int AD_User_ID, string accessKey) {
            this.CancellAssociationRequestAsync(R_Request_ID, Remarks, AD_User_ID, accessKey, null);
        }
        
        public void CancellAssociationRequestAsync(int R_Request_ID, string Remarks, int AD_User_ID, string accessKey, object userState) {
            if ((this.onBeginCancellAssociationRequestDelegate == null)) {
                this.onBeginCancellAssociationRequestDelegate = new BeginOperationDelegate(this.OnBeginCancellAssociationRequest);
            }
            if ((this.onEndCancellAssociationRequestDelegate == null)) {
                this.onEndCancellAssociationRequestDelegate = new EndOperationDelegate(this.OnEndCancellAssociationRequest);
            }
            if ((this.onCancellAssociationRequestCompletedDelegate == null)) {
                this.onCancellAssociationRequestCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCancellAssociationRequestCompleted);
            }
            base.InvokeAsync(this.onBeginCancellAssociationRequestDelegate, new object[] {
                        R_Request_ID,
                        Remarks,
                        AD_User_ID,
                        accessKey}, this.onEndCancellAssociationRequestDelegate, this.onCancellAssociationRequestCompletedDelegate, userState);
        }
        
        public string DeletePartnerLink(int DemoLinkID, string accessKey) {
            return base.Channel.DeletePartnerLink(DemoLinkID, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeletePartnerLink(int DemoLinkID, string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeletePartnerLink(DemoLinkID, accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndDeletePartnerLink(System.IAsyncResult result) {
            return base.Channel.EndDeletePartnerLink(result);
        }
        
        private System.IAsyncResult OnBeginDeletePartnerLink(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int DemoLinkID = ((int)(inValues[0]));
            string accessKey = ((string)(inValues[1]));
            return this.BeginDeletePartnerLink(DemoLinkID, accessKey, callback, asyncState);
        }
        
        private object[] OnEndDeletePartnerLink(System.IAsyncResult result) {
            string retVal = this.EndDeletePartnerLink(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeletePartnerLinkCompleted(object state) {
            if ((this.DeletePartnerLinkCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeletePartnerLinkCompleted(this, new DeletePartnerLinkCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeletePartnerLinkAsync(int DemoLinkID, string accessKey) {
            this.DeletePartnerLinkAsync(DemoLinkID, accessKey, null);
        }
        
        public void DeletePartnerLinkAsync(int DemoLinkID, string accessKey, object userState) {
            if ((this.onBeginDeletePartnerLinkDelegate == null)) {
                this.onBeginDeletePartnerLinkDelegate = new BeginOperationDelegate(this.OnBeginDeletePartnerLink);
            }
            if ((this.onEndDeletePartnerLinkDelegate == null)) {
                this.onEndDeletePartnerLinkDelegate = new EndOperationDelegate(this.OnEndDeletePartnerLink);
            }
            if ((this.onDeletePartnerLinkCompletedDelegate == null)) {
                this.onDeletePartnerLinkCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeletePartnerLinkCompleted);
            }
            base.InvokeAsync(this.onBeginDeletePartnerLinkDelegate, new object[] {
                        DemoLinkID,
                        accessKey}, this.onEndDeletePartnerLinkDelegate, this.onDeletePartnerLinkCompletedDelegate, userState);
        }
        
        public string partnerAssociationRequest(int partner_ID, int AD_user_ID, string remarks, string accessKey) {
            return base.Channel.partnerAssociationRequest(partner_ID, AD_user_ID, remarks, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginpartnerAssociationRequest(int partner_ID, int AD_user_ID, string remarks, string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginpartnerAssociationRequest(partner_ID, AD_user_ID, remarks, accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndpartnerAssociationRequest(System.IAsyncResult result) {
            return base.Channel.EndpartnerAssociationRequest(result);
        }
        
        private System.IAsyncResult OnBeginpartnerAssociationRequest(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int partner_ID = ((int)(inValues[0]));
            int AD_user_ID = ((int)(inValues[1]));
            string remarks = ((string)(inValues[2]));
            string accessKey = ((string)(inValues[3]));
            return this.BeginpartnerAssociationRequest(partner_ID, AD_user_ID, remarks, accessKey, callback, asyncState);
        }
        
        private object[] OnEndpartnerAssociationRequest(System.IAsyncResult result) {
            string retVal = this.EndpartnerAssociationRequest(result);
            return new object[] {
                    retVal};
        }
        
        private void OnpartnerAssociationRequestCompleted(object state) {
            if ((this.partnerAssociationRequestCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.partnerAssociationRequestCompleted(this, new partnerAssociationRequestCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void partnerAssociationRequestAsync(int partner_ID, int AD_user_ID, string remarks, string accessKey) {
            this.partnerAssociationRequestAsync(partner_ID, AD_user_ID, remarks, accessKey, null);
        }
        
        public void partnerAssociationRequestAsync(int partner_ID, int AD_user_ID, string remarks, string accessKey, object userState) {
            if ((this.onBeginpartnerAssociationRequestDelegate == null)) {
                this.onBeginpartnerAssociationRequestDelegate = new BeginOperationDelegate(this.OnBeginpartnerAssociationRequest);
            }
            if ((this.onEndpartnerAssociationRequestDelegate == null)) {
                this.onEndpartnerAssociationRequestDelegate = new EndOperationDelegate(this.OnEndpartnerAssociationRequest);
            }
            if ((this.onpartnerAssociationRequestCompletedDelegate == null)) {
                this.onpartnerAssociationRequestCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnpartnerAssociationRequestCompleted);
            }
            base.InvokeAsync(this.onBeginpartnerAssociationRequestDelegate, new object[] {
                        partner_ID,
                        AD_user_ID,
                        remarks,
                        accessKey}, this.onEndpartnerAssociationRequestDelegate, this.onpartnerAssociationRequestCompletedDelegate, userState);
        }
        
        public string GetPartnerCountries(string accessKey) {
            return base.Channel.GetPartnerCountries(accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetPartnerCountries(string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPartnerCountries(accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGetPartnerCountries(System.IAsyncResult result) {
            return base.Channel.EndGetPartnerCountries(result);
        }
        
        private System.IAsyncResult OnBeginGetPartnerCountries(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string accessKey = ((string)(inValues[0]));
            return this.BeginGetPartnerCountries(accessKey, callback, asyncState);
        }
        
        private object[] OnEndGetPartnerCountries(System.IAsyncResult result) {
            string retVal = this.EndGetPartnerCountries(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPartnerCountriesCompleted(object state) {
            if ((this.GetPartnerCountriesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPartnerCountriesCompleted(this, new GetPartnerCountriesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPartnerCountriesAsync(string accessKey) {
            this.GetPartnerCountriesAsync(accessKey, null);
        }
        
        public void GetPartnerCountriesAsync(string accessKey, object userState) {
            if ((this.onBeginGetPartnerCountriesDelegate == null)) {
                this.onBeginGetPartnerCountriesDelegate = new BeginOperationDelegate(this.OnBeginGetPartnerCountries);
            }
            if ((this.onEndGetPartnerCountriesDelegate == null)) {
                this.onEndGetPartnerCountriesDelegate = new EndOperationDelegate(this.OnEndGetPartnerCountries);
            }
            if ((this.onGetPartnerCountriesCompletedDelegate == null)) {
                this.onGetPartnerCountriesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPartnerCountriesCompleted);
            }
            base.InvokeAsync(this.onBeginGetPartnerCountriesDelegate, new object[] {
                        accessKey}, this.onEndGetPartnerCountriesDelegate, this.onGetPartnerCountriesCompletedDelegate, userState);
        }
        
        public string GetAssociatedSP(int AD_User_ID, string accessKey) {
            return base.Channel.GetAssociatedSP(AD_User_ID, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAssociatedSP(int AD_User_ID, string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAssociatedSP(AD_User_ID, accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGetAssociatedSP(System.IAsyncResult result) {
            return base.Channel.EndGetAssociatedSP(result);
        }
        
        private System.IAsyncResult OnBeginGetAssociatedSP(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int AD_User_ID = ((int)(inValues[0]));
            string accessKey = ((string)(inValues[1]));
            return this.BeginGetAssociatedSP(AD_User_ID, accessKey, callback, asyncState);
        }
        
        private object[] OnEndGetAssociatedSP(System.IAsyncResult result) {
            string retVal = this.EndGetAssociatedSP(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAssociatedSPCompleted(object state) {
            if ((this.GetAssociatedSPCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAssociatedSPCompleted(this, new GetAssociatedSPCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAssociatedSPAsync(int AD_User_ID, string accessKey) {
            this.GetAssociatedSPAsync(AD_User_ID, accessKey, null);
        }
        
        public void GetAssociatedSPAsync(int AD_User_ID, string accessKey, object userState) {
            if ((this.onBeginGetAssociatedSPDelegate == null)) {
                this.onBeginGetAssociatedSPDelegate = new BeginOperationDelegate(this.OnBeginGetAssociatedSP);
            }
            if ((this.onEndGetAssociatedSPDelegate == null)) {
                this.onEndGetAssociatedSPDelegate = new EndOperationDelegate(this.OnEndGetAssociatedSP);
            }
            if ((this.onGetAssociatedSPCompletedDelegate == null)) {
                this.onGetAssociatedSPCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAssociatedSPCompleted);
            }
            base.InvokeAsync(this.onBeginGetAssociatedSPDelegate, new object[] {
                        AD_User_ID,
                        accessKey}, this.onEndGetAssociatedSPDelegate, this.onGetAssociatedSPCompletedDelegate, userState);
        }
        
        public BaseLibrary.CloudService.AboutUs Aboutvienna(string accessKey) {
            return base.Channel.Aboutvienna(accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAboutvienna(string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAboutvienna(accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public BaseLibrary.CloudService.AboutUs EndAboutvienna(System.IAsyncResult result) {
            return base.Channel.EndAboutvienna(result);
        }
        
        private System.IAsyncResult OnBeginAboutvienna(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string accessKey = ((string)(inValues[0]));
            return this.BeginAboutvienna(accessKey, callback, asyncState);
        }
        
        private object[] OnEndAboutvienna(System.IAsyncResult result) {
            BaseLibrary.CloudService.AboutUs retVal = this.EndAboutvienna(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAboutviennaCompleted(object state) {
            if ((this.AboutviennaCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AboutviennaCompleted(this, new AboutviennaCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AboutviennaAsync(string accessKey) {
            this.AboutviennaAsync(accessKey, null);
        }
        
        public void AboutviennaAsync(string accessKey, object userState) {
            if ((this.onBeginAboutviennaDelegate == null)) {
                this.onBeginAboutviennaDelegate = new BeginOperationDelegate(this.OnBeginAboutvienna);
            }
            if ((this.onEndAboutviennaDelegate == null)) {
                this.onEndAboutviennaDelegate = new EndOperationDelegate(this.OnEndAboutvienna);
            }
            if ((this.onAboutviennaCompletedDelegate == null)) {
                this.onAboutviennaCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAboutviennaCompleted);
            }
            base.InvokeAsync(this.onBeginAboutviennaDelegate, new object[] {
                        accessKey}, this.onEndAboutviennaDelegate, this.onAboutviennaCompletedDelegate, userState);
        }
        
        public string GetSupportTicketStatus(string AccessKey) {
            return base.Channel.GetSupportTicketStatus(AccessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetSupportTicketStatus(string AccessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSupportTicketStatus(AccessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGetSupportTicketStatus(System.IAsyncResult result) {
            return base.Channel.EndGetSupportTicketStatus(result);
        }
        
        private System.IAsyncResult OnBeginGetSupportTicketStatus(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string AccessKey = ((string)(inValues[0]));
            return this.BeginGetSupportTicketStatus(AccessKey, callback, asyncState);
        }
        
        private object[] OnEndGetSupportTicketStatus(System.IAsyncResult result) {
            string retVal = this.EndGetSupportTicketStatus(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetSupportTicketStatusCompleted(object state) {
            if ((this.GetSupportTicketStatusCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSupportTicketStatusCompleted(this, new GetSupportTicketStatusCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSupportTicketStatusAsync(string AccessKey) {
            this.GetSupportTicketStatusAsync(AccessKey, null);
        }
        
        public void GetSupportTicketStatusAsync(string AccessKey, object userState) {
            if ((this.onBeginGetSupportTicketStatusDelegate == null)) {
                this.onBeginGetSupportTicketStatusDelegate = new BeginOperationDelegate(this.OnBeginGetSupportTicketStatus);
            }
            if ((this.onEndGetSupportTicketStatusDelegate == null)) {
                this.onEndGetSupportTicketStatusDelegate = new EndOperationDelegate(this.OnEndGetSupportTicketStatus);
            }
            if ((this.onGetSupportTicketStatusCompletedDelegate == null)) {
                this.onGetSupportTicketStatusCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSupportTicketStatusCompleted);
            }
            base.InvokeAsync(this.onBeginGetSupportTicketStatusDelegate, new object[] {
                        AccessKey}, this.onEndGetSupportTicketStatusDelegate, this.onGetSupportTicketStatusCompletedDelegate, userState);
        }
        
        public string GetCustomerStatusSupportTicket(int r_status_id, int ad_user_id, string orderby, string AccessKey) {
            return base.Channel.GetCustomerStatusSupportTicket(r_status_id, ad_user_id, orderby, AccessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCustomerStatusSupportTicket(int r_status_id, int ad_user_id, string orderby, string AccessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCustomerStatusSupportTicket(r_status_id, ad_user_id, orderby, AccessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGetCustomerStatusSupportTicket(System.IAsyncResult result) {
            return base.Channel.EndGetCustomerStatusSupportTicket(result);
        }
        
        private System.IAsyncResult OnBeginGetCustomerStatusSupportTicket(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int r_status_id = ((int)(inValues[0]));
            int ad_user_id = ((int)(inValues[1]));
            string orderby = ((string)(inValues[2]));
            string AccessKey = ((string)(inValues[3]));
            return this.BeginGetCustomerStatusSupportTicket(r_status_id, ad_user_id, orderby, AccessKey, callback, asyncState);
        }
        
        private object[] OnEndGetCustomerStatusSupportTicket(System.IAsyncResult result) {
            string retVal = this.EndGetCustomerStatusSupportTicket(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCustomerStatusSupportTicketCompleted(object state) {
            if ((this.GetCustomerStatusSupportTicketCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCustomerStatusSupportTicketCompleted(this, new GetCustomerStatusSupportTicketCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCustomerStatusSupportTicketAsync(int r_status_id, int ad_user_id, string orderby, string AccessKey) {
            this.GetCustomerStatusSupportTicketAsync(r_status_id, ad_user_id, orderby, AccessKey, null);
        }
        
        public void GetCustomerStatusSupportTicketAsync(int r_status_id, int ad_user_id, string orderby, string AccessKey, object userState) {
            if ((this.onBeginGetCustomerStatusSupportTicketDelegate == null)) {
                this.onBeginGetCustomerStatusSupportTicketDelegate = new BeginOperationDelegate(this.OnBeginGetCustomerStatusSupportTicket);
            }
            if ((this.onEndGetCustomerStatusSupportTicketDelegate == null)) {
                this.onEndGetCustomerStatusSupportTicketDelegate = new EndOperationDelegate(this.OnEndGetCustomerStatusSupportTicket);
            }
            if ((this.onGetCustomerStatusSupportTicketCompletedDelegate == null)) {
                this.onGetCustomerStatusSupportTicketCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCustomerStatusSupportTicketCompleted);
            }
            base.InvokeAsync(this.onBeginGetCustomerStatusSupportTicketDelegate, new object[] {
                        r_status_id,
                        ad_user_id,
                        orderby,
                        AccessKey}, this.onEndGetCustomerStatusSupportTicketDelegate, this.onGetCustomerStatusSupportTicketCompletedDelegate, userState);
        }
        
        public string GetCustomerSupportTickets(int ad_user_id, string AccessKey) {
            return base.Channel.GetCustomerSupportTickets(ad_user_id, AccessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCustomerSupportTickets(int ad_user_id, string AccessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCustomerSupportTickets(ad_user_id, AccessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGetCustomerSupportTickets(System.IAsyncResult result) {
            return base.Channel.EndGetCustomerSupportTickets(result);
        }
        
        private System.IAsyncResult OnBeginGetCustomerSupportTickets(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int ad_user_id = ((int)(inValues[0]));
            string AccessKey = ((string)(inValues[1]));
            return this.BeginGetCustomerSupportTickets(ad_user_id, AccessKey, callback, asyncState);
        }
        
        private object[] OnEndGetCustomerSupportTickets(System.IAsyncResult result) {
            string retVal = this.EndGetCustomerSupportTickets(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCustomerSupportTicketsCompleted(object state) {
            if ((this.GetCustomerSupportTicketsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCustomerSupportTicketsCompleted(this, new GetCustomerSupportTicketsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCustomerSupportTicketsAsync(int ad_user_id, string AccessKey) {
            this.GetCustomerSupportTicketsAsync(ad_user_id, AccessKey, null);
        }
        
        public void GetCustomerSupportTicketsAsync(int ad_user_id, string AccessKey, object userState) {
            if ((this.onBeginGetCustomerSupportTicketsDelegate == null)) {
                this.onBeginGetCustomerSupportTicketsDelegate = new BeginOperationDelegate(this.OnBeginGetCustomerSupportTickets);
            }
            if ((this.onEndGetCustomerSupportTicketsDelegate == null)) {
                this.onEndGetCustomerSupportTicketsDelegate = new EndOperationDelegate(this.OnEndGetCustomerSupportTickets);
            }
            if ((this.onGetCustomerSupportTicketsCompletedDelegate == null)) {
                this.onGetCustomerSupportTicketsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCustomerSupportTicketsCompleted);
            }
            base.InvokeAsync(this.onBeginGetCustomerSupportTicketsDelegate, new object[] {
                        ad_user_id,
                        AccessKey}, this.onEndGetCustomerSupportTicketsDelegate, this.onGetCustomerSupportTicketsCompletedDelegate, userState);
        }
        
        public string GetCustomerHistoryLines(int documentNo, string AccessKey) {
            return base.Channel.GetCustomerHistoryLines(documentNo, AccessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCustomerHistoryLines(int documentNo, string AccessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCustomerHistoryLines(documentNo, AccessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGetCustomerHistoryLines(System.IAsyncResult result) {
            return base.Channel.EndGetCustomerHistoryLines(result);
        }
        
        private System.IAsyncResult OnBeginGetCustomerHistoryLines(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int documentNo = ((int)(inValues[0]));
            string AccessKey = ((string)(inValues[1]));
            return this.BeginGetCustomerHistoryLines(documentNo, AccessKey, callback, asyncState);
        }
        
        private object[] OnEndGetCustomerHistoryLines(System.IAsyncResult result) {
            string retVal = this.EndGetCustomerHistoryLines(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCustomerHistoryLinesCompleted(object state) {
            if ((this.GetCustomerHistoryLinesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCustomerHistoryLinesCompleted(this, new GetCustomerHistoryLinesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCustomerHistoryLinesAsync(int documentNo, string AccessKey) {
            this.GetCustomerHistoryLinesAsync(documentNo, AccessKey, null);
        }
        
        public void GetCustomerHistoryLinesAsync(int documentNo, string AccessKey, object userState) {
            if ((this.onBeginGetCustomerHistoryLinesDelegate == null)) {
                this.onBeginGetCustomerHistoryLinesDelegate = new BeginOperationDelegate(this.OnBeginGetCustomerHistoryLines);
            }
            if ((this.onEndGetCustomerHistoryLinesDelegate == null)) {
                this.onEndGetCustomerHistoryLinesDelegate = new EndOperationDelegate(this.OnEndGetCustomerHistoryLines);
            }
            if ((this.onGetCustomerHistoryLinesCompletedDelegate == null)) {
                this.onGetCustomerHistoryLinesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCustomerHistoryLinesCompleted);
            }
            base.InvokeAsync(this.onBeginGetCustomerHistoryLinesDelegate, new object[] {
                        documentNo,
                        AccessKey}, this.onEndGetCustomerHistoryLinesDelegate, this.onGetCustomerHistoryLinesCompletedDelegate, userState);
        }
        
        public string GetCustomerTicketPriority(string AccessKey) {
            return base.Channel.GetCustomerTicketPriority(AccessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCustomerTicketPriority(string AccessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCustomerTicketPriority(AccessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGetCustomerTicketPriority(System.IAsyncResult result) {
            return base.Channel.EndGetCustomerTicketPriority(result);
        }
        
        private System.IAsyncResult OnBeginGetCustomerTicketPriority(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string AccessKey = ((string)(inValues[0]));
            return this.BeginGetCustomerTicketPriority(AccessKey, callback, asyncState);
        }
        
        private object[] OnEndGetCustomerTicketPriority(System.IAsyncResult result) {
            string retVal = this.EndGetCustomerTicketPriority(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCustomerTicketPriorityCompleted(object state) {
            if ((this.GetCustomerTicketPriorityCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCustomerTicketPriorityCompleted(this, new GetCustomerTicketPriorityCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCustomerTicketPriorityAsync(string AccessKey) {
            this.GetCustomerTicketPriorityAsync(AccessKey, null);
        }
        
        public void GetCustomerTicketPriorityAsync(string AccessKey, object userState) {
            if ((this.onBeginGetCustomerTicketPriorityDelegate == null)) {
                this.onBeginGetCustomerTicketPriorityDelegate = new BeginOperationDelegate(this.OnBeginGetCustomerTicketPriority);
            }
            if ((this.onEndGetCustomerTicketPriorityDelegate == null)) {
                this.onEndGetCustomerTicketPriorityDelegate = new EndOperationDelegate(this.OnEndGetCustomerTicketPriority);
            }
            if ((this.onGetCustomerTicketPriorityCompletedDelegate == null)) {
                this.onGetCustomerTicketPriorityCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCustomerTicketPriorityCompleted);
            }
            base.InvokeAsync(this.onBeginGetCustomerTicketPriorityDelegate, new object[] {
                        AccessKey}, this.onEndGetCustomerTicketPriorityDelegate, this.onGetCustomerTicketPriorityCompletedDelegate, userState);
        }
        
        public string GetCustomerTicketRequestType(string AccessKey) {
            return base.Channel.GetCustomerTicketRequestType(AccessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCustomerTicketRequestType(string AccessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCustomerTicketRequestType(AccessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGetCustomerTicketRequestType(System.IAsyncResult result) {
            return base.Channel.EndGetCustomerTicketRequestType(result);
        }
        
        private System.IAsyncResult OnBeginGetCustomerTicketRequestType(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string AccessKey = ((string)(inValues[0]));
            return this.BeginGetCustomerTicketRequestType(AccessKey, callback, asyncState);
        }
        
        private object[] OnEndGetCustomerTicketRequestType(System.IAsyncResult result) {
            string retVal = this.EndGetCustomerTicketRequestType(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCustomerTicketRequestTypeCompleted(object state) {
            if ((this.GetCustomerTicketRequestTypeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCustomerTicketRequestTypeCompleted(this, new GetCustomerTicketRequestTypeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCustomerTicketRequestTypeAsync(string AccessKey) {
            this.GetCustomerTicketRequestTypeAsync(AccessKey, null);
        }
        
        public void GetCustomerTicketRequestTypeAsync(string AccessKey, object userState) {
            if ((this.onBeginGetCustomerTicketRequestTypeDelegate == null)) {
                this.onBeginGetCustomerTicketRequestTypeDelegate = new BeginOperationDelegate(this.OnBeginGetCustomerTicketRequestType);
            }
            if ((this.onEndGetCustomerTicketRequestTypeDelegate == null)) {
                this.onEndGetCustomerTicketRequestTypeDelegate = new EndOperationDelegate(this.OnEndGetCustomerTicketRequestType);
            }
            if ((this.onGetCustomerTicketRequestTypeCompletedDelegate == null)) {
                this.onGetCustomerTicketRequestTypeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCustomerTicketRequestTypeCompleted);
            }
            base.InvokeAsync(this.onBeginGetCustomerTicketRequestTypeDelegate, new object[] {
                        AccessKey}, this.onEndGetCustomerTicketRequestTypeDelegate, this.onGetCustomerTicketRequestTypeCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BaseLibrary.CloudService.SetCustomerNewTicketResponse BaseLibrary.CloudService.ServiceSoap.SetCustomerNewTicket(BaseLibrary.CloudService.SetCustomerNewTicketRequest request) {
            return base.Channel.SetCustomerNewTicket(request);
        }
        
        public string SetCustomerNewTicket(int PriorityUser, byte[] file, int ad_user_id, string Summary, string FileName, string AccessKey) {
            BaseLibrary.CloudService.SetCustomerNewTicketRequest inValue = new BaseLibrary.CloudService.SetCustomerNewTicketRequest();
            inValue.PriorityUser = PriorityUser;
            inValue.file = file;
            inValue.ad_user_id = ad_user_id;
            inValue.Summary = Summary;
            inValue.FileName = FileName;
            inValue.AccessKey = AccessKey;
            BaseLibrary.CloudService.SetCustomerNewTicketResponse retVal = ((BaseLibrary.CloudService.ServiceSoap)(this)).SetCustomerNewTicket(inValue);
            return retVal.SetCustomerNewTicketResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult BaseLibrary.CloudService.ServiceSoap.BeginSetCustomerNewTicket(BaseLibrary.CloudService.SetCustomerNewTicketRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetCustomerNewTicket(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSetCustomerNewTicket(int PriorityUser, byte[] file, int ad_user_id, string Summary, string FileName, string AccessKey, System.AsyncCallback callback, object asyncState) {
            BaseLibrary.CloudService.SetCustomerNewTicketRequest inValue = new BaseLibrary.CloudService.SetCustomerNewTicketRequest();
            inValue.PriorityUser = PriorityUser;
            inValue.file = file;
            inValue.ad_user_id = ad_user_id;
            inValue.Summary = Summary;
            inValue.FileName = FileName;
            inValue.AccessKey = AccessKey;
            return ((BaseLibrary.CloudService.ServiceSoap)(this)).BeginSetCustomerNewTicket(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BaseLibrary.CloudService.SetCustomerNewTicketResponse BaseLibrary.CloudService.ServiceSoap.EndSetCustomerNewTicket(System.IAsyncResult result) {
            return base.Channel.EndSetCustomerNewTicket(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndSetCustomerNewTicket(System.IAsyncResult result) {
            BaseLibrary.CloudService.SetCustomerNewTicketResponse retVal = ((BaseLibrary.CloudService.ServiceSoap)(this)).EndSetCustomerNewTicket(result);
            return retVal.SetCustomerNewTicketResult;
        }
        
        private System.IAsyncResult OnBeginSetCustomerNewTicket(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int PriorityUser = ((int)(inValues[0]));
            byte[] file = ((byte[])(inValues[1]));
            int ad_user_id = ((int)(inValues[2]));
            string Summary = ((string)(inValues[3]));
            string FileName = ((string)(inValues[4]));
            string AccessKey = ((string)(inValues[5]));
            return this.BeginSetCustomerNewTicket(PriorityUser, file, ad_user_id, Summary, FileName, AccessKey, callback, asyncState);
        }
        
        private object[] OnEndSetCustomerNewTicket(System.IAsyncResult result) {
            string retVal = this.EndSetCustomerNewTicket(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSetCustomerNewTicketCompleted(object state) {
            if ((this.SetCustomerNewTicketCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetCustomerNewTicketCompleted(this, new SetCustomerNewTicketCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetCustomerNewTicketAsync(int PriorityUser, byte[] file, int ad_user_id, string Summary, string FileName, string AccessKey) {
            this.SetCustomerNewTicketAsync(PriorityUser, file, ad_user_id, Summary, FileName, AccessKey, null);
        }
        
        public void SetCustomerNewTicketAsync(int PriorityUser, byte[] file, int ad_user_id, string Summary, string FileName, string AccessKey, object userState) {
            if ((this.onBeginSetCustomerNewTicketDelegate == null)) {
                this.onBeginSetCustomerNewTicketDelegate = new BeginOperationDelegate(this.OnBeginSetCustomerNewTicket);
            }
            if ((this.onEndSetCustomerNewTicketDelegate == null)) {
                this.onEndSetCustomerNewTicketDelegate = new EndOperationDelegate(this.OnEndSetCustomerNewTicket);
            }
            if ((this.onSetCustomerNewTicketCompletedDelegate == null)) {
                this.onSetCustomerNewTicketCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetCustomerNewTicketCompleted);
            }
            base.InvokeAsync(this.onBeginSetCustomerNewTicketDelegate, new object[] {
                        PriorityUser,
                        file,
                        ad_user_id,
                        Summary,
                        FileName,
                        AccessKey}, this.onEndSetCustomerNewTicketDelegate, this.onSetCustomerNewTicketCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BaseLibrary.CloudService.SetCustomerTicketHistoryLinesResponse BaseLibrary.CloudService.ServiceSoap.SetCustomerTicketHistoryLines(BaseLibrary.CloudService.SetCustomerTicketHistoryLinesRequest request) {
            return base.Channel.SetCustomerTicketHistoryLines(request);
        }
        
        public string SetCustomerTicketHistoryLines(int ad_user_ID, byte[] file, int documentNo, string result, string FileName, string AccessKey) {
            BaseLibrary.CloudService.SetCustomerTicketHistoryLinesRequest inValue = new BaseLibrary.CloudService.SetCustomerTicketHistoryLinesRequest();
            inValue.ad_user_ID = ad_user_ID;
            inValue.file = file;
            inValue.documentNo = documentNo;
            inValue.result = result;
            inValue.FileName = FileName;
            inValue.AccessKey = AccessKey;
            BaseLibrary.CloudService.SetCustomerTicketHistoryLinesResponse retVal = ((BaseLibrary.CloudService.ServiceSoap)(this)).SetCustomerTicketHistoryLines(inValue);
            return retVal.SetCustomerTicketHistoryLinesResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult BaseLibrary.CloudService.ServiceSoap.BeginSetCustomerTicketHistoryLines(BaseLibrary.CloudService.SetCustomerTicketHistoryLinesRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetCustomerTicketHistoryLines(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSetCustomerTicketHistoryLines(int ad_user_ID, byte[] file, int documentNo, string result, string FileName, string AccessKey, System.AsyncCallback callback, object asyncState) {
            BaseLibrary.CloudService.SetCustomerTicketHistoryLinesRequest inValue = new BaseLibrary.CloudService.SetCustomerTicketHistoryLinesRequest();
            inValue.ad_user_ID = ad_user_ID;
            inValue.file = file;
            inValue.documentNo = documentNo;
            inValue.result = result;
            inValue.FileName = FileName;
            inValue.AccessKey = AccessKey;
            return ((BaseLibrary.CloudService.ServiceSoap)(this)).BeginSetCustomerTicketHistoryLines(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BaseLibrary.CloudService.SetCustomerTicketHistoryLinesResponse BaseLibrary.CloudService.ServiceSoap.EndSetCustomerTicketHistoryLines(System.IAsyncResult result) {
            return base.Channel.EndSetCustomerTicketHistoryLines(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndSetCustomerTicketHistoryLines(System.IAsyncResult result) {
            BaseLibrary.CloudService.SetCustomerTicketHistoryLinesResponse retVal = ((BaseLibrary.CloudService.ServiceSoap)(this)).EndSetCustomerTicketHistoryLines(result);
            return retVal.SetCustomerTicketHistoryLinesResult;
        }
        
        private System.IAsyncResult OnBeginSetCustomerTicketHistoryLines(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int ad_user_ID = ((int)(inValues[0]));
            byte[] file = ((byte[])(inValues[1]));
            int documentNo = ((int)(inValues[2]));
            string result = ((string)(inValues[3]));
            string FileName = ((string)(inValues[4]));
            string AccessKey = ((string)(inValues[5]));
            return this.BeginSetCustomerTicketHistoryLines(ad_user_ID, file, documentNo, result, FileName, AccessKey, callback, asyncState);
        }
        
        private object[] OnEndSetCustomerTicketHistoryLines(System.IAsyncResult result) {
            string retVal = this.EndSetCustomerTicketHistoryLines(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSetCustomerTicketHistoryLinesCompleted(object state) {
            if ((this.SetCustomerTicketHistoryLinesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetCustomerTicketHistoryLinesCompleted(this, new SetCustomerTicketHistoryLinesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetCustomerTicketHistoryLinesAsync(int ad_user_ID, byte[] file, int documentNo, string result, string FileName, string AccessKey) {
            this.SetCustomerTicketHistoryLinesAsync(ad_user_ID, file, documentNo, result, FileName, AccessKey, null);
        }
        
        public void SetCustomerTicketHistoryLinesAsync(int ad_user_ID, byte[] file, int documentNo, string result, string FileName, string AccessKey, object userState) {
            if ((this.onBeginSetCustomerTicketHistoryLinesDelegate == null)) {
                this.onBeginSetCustomerTicketHistoryLinesDelegate = new BeginOperationDelegate(this.OnBeginSetCustomerTicketHistoryLines);
            }
            if ((this.onEndSetCustomerTicketHistoryLinesDelegate == null)) {
                this.onEndSetCustomerTicketHistoryLinesDelegate = new EndOperationDelegate(this.OnEndSetCustomerTicketHistoryLines);
            }
            if ((this.onSetCustomerTicketHistoryLinesCompletedDelegate == null)) {
                this.onSetCustomerTicketHistoryLinesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetCustomerTicketHistoryLinesCompleted);
            }
            base.InvokeAsync(this.onBeginSetCustomerTicketHistoryLinesDelegate, new object[] {
                        ad_user_ID,
                        file,
                        documentNo,
                        result,
                        FileName,
                        AccessKey}, this.onEndSetCustomerTicketHistoryLinesDelegate, this.onSetCustomerTicketHistoryLinesCompletedDelegate, userState);
        }
        
        public string GetCustomerTicketDetails(int DocNo, string AccessKey) {
            return base.Channel.GetCustomerTicketDetails(DocNo, AccessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCustomerTicketDetails(int DocNo, string AccessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCustomerTicketDetails(DocNo, AccessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGetCustomerTicketDetails(System.IAsyncResult result) {
            return base.Channel.EndGetCustomerTicketDetails(result);
        }
        
        private System.IAsyncResult OnBeginGetCustomerTicketDetails(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int DocNo = ((int)(inValues[0]));
            string AccessKey = ((string)(inValues[1]));
            return this.BeginGetCustomerTicketDetails(DocNo, AccessKey, callback, asyncState);
        }
        
        private object[] OnEndGetCustomerTicketDetails(System.IAsyncResult result) {
            string retVal = this.EndGetCustomerTicketDetails(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCustomerTicketDetailsCompleted(object state) {
            if ((this.GetCustomerTicketDetailsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCustomerTicketDetailsCompleted(this, new GetCustomerTicketDetailsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCustomerTicketDetailsAsync(int DocNo, string AccessKey) {
            this.GetCustomerTicketDetailsAsync(DocNo, AccessKey, null);
        }
        
        public void GetCustomerTicketDetailsAsync(int DocNo, string AccessKey, object userState) {
            if ((this.onBeginGetCustomerTicketDetailsDelegate == null)) {
                this.onBeginGetCustomerTicketDetailsDelegate = new BeginOperationDelegate(this.OnBeginGetCustomerTicketDetails);
            }
            if ((this.onEndGetCustomerTicketDetailsDelegate == null)) {
                this.onEndGetCustomerTicketDetailsDelegate = new EndOperationDelegate(this.OnEndGetCustomerTicketDetails);
            }
            if ((this.onGetCustomerTicketDetailsCompletedDelegate == null)) {
                this.onGetCustomerTicketDetailsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCustomerTicketDetailsCompleted);
            }
            base.InvokeAsync(this.onBeginGetCustomerTicketDetailsDelegate, new object[] {
                        DocNo,
                        AccessKey}, this.onEndGetCustomerTicketDetailsDelegate, this.onGetCustomerTicketDetailsCompletedDelegate, userState);
        }
        
        public string SetDBRestore(int A_Asset_ID, char value, string AccessKey) {
            return base.Channel.SetDBRestore(A_Asset_ID, value, AccessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSetDBRestore(int A_Asset_ID, char value, string AccessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetDBRestore(A_Asset_ID, value, AccessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndSetDBRestore(System.IAsyncResult result) {
            return base.Channel.EndSetDBRestore(result);
        }
        
        private System.IAsyncResult OnBeginSetDBRestore(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int A_Asset_ID = ((int)(inValues[0]));
            char value = ((char)(inValues[1]));
            string AccessKey = ((string)(inValues[2]));
            return this.BeginSetDBRestore(A_Asset_ID, value, AccessKey, callback, asyncState);
        }
        
        private object[] OnEndSetDBRestore(System.IAsyncResult result) {
            string retVal = this.EndSetDBRestore(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSetDBRestoreCompleted(object state) {
            if ((this.SetDBRestoreCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetDBRestoreCompleted(this, new SetDBRestoreCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetDBRestoreAsync(int A_Asset_ID, char value, string AccessKey) {
            this.SetDBRestoreAsync(A_Asset_ID, value, AccessKey, null);
        }
        
        public void SetDBRestoreAsync(int A_Asset_ID, char value, string AccessKey, object userState) {
            if ((this.onBeginSetDBRestoreDelegate == null)) {
                this.onBeginSetDBRestoreDelegate = new BeginOperationDelegate(this.OnBeginSetDBRestore);
            }
            if ((this.onEndSetDBRestoreDelegate == null)) {
                this.onEndSetDBRestoreDelegate = new EndOperationDelegate(this.OnEndSetDBRestore);
            }
            if ((this.onSetDBRestoreCompletedDelegate == null)) {
                this.onSetDBRestoreCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetDBRestoreCompleted);
            }
            base.InvokeAsync(this.onBeginSetDBRestoreDelegate, new object[] {
                        A_Asset_ID,
                        value,
                        AccessKey}, this.onEndSetDBRestoreDelegate, this.onSetDBRestoreCompletedDelegate, userState);
        }
        
        public string GetVUnBilledInfo(int AD_User_ID, string AccessKey) {
            return base.Channel.GetVUnBilledInfo(AD_User_ID, AccessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetVUnBilledInfo(int AD_User_ID, string AccessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetVUnBilledInfo(AD_User_ID, AccessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGetVUnBilledInfo(System.IAsyncResult result) {
            return base.Channel.EndGetVUnBilledInfo(result);
        }
        
        private System.IAsyncResult OnBeginGetVUnBilledInfo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int AD_User_ID = ((int)(inValues[0]));
            string AccessKey = ((string)(inValues[1]));
            return this.BeginGetVUnBilledInfo(AD_User_ID, AccessKey, callback, asyncState);
        }
        
        private object[] OnEndGetVUnBilledInfo(System.IAsyncResult result) {
            string retVal = this.EndGetVUnBilledInfo(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetVUnBilledInfoCompleted(object state) {
            if ((this.GetVUnBilledInfoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetVUnBilledInfoCompleted(this, new GetVUnBilledInfoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetVUnBilledInfoAsync(int AD_User_ID, string AccessKey) {
            this.GetVUnBilledInfoAsync(AD_User_ID, AccessKey, null);
        }
        
        public void GetVUnBilledInfoAsync(int AD_User_ID, string AccessKey, object userState) {
            if ((this.onBeginGetVUnBilledInfoDelegate == null)) {
                this.onBeginGetVUnBilledInfoDelegate = new BeginOperationDelegate(this.OnBeginGetVUnBilledInfo);
            }
            if ((this.onEndGetVUnBilledInfoDelegate == null)) {
                this.onEndGetVUnBilledInfoDelegate = new EndOperationDelegate(this.OnEndGetVUnBilledInfo);
            }
            if ((this.onGetVUnBilledInfoCompletedDelegate == null)) {
                this.onGetVUnBilledInfoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetVUnBilledInfoCompleted);
            }
            base.InvokeAsync(this.onBeginGetVUnBilledInfoDelegate, new object[] {
                        AD_User_ID,
                        AccessKey}, this.onEndGetVUnBilledInfoDelegate, this.onGetVUnBilledInfoCompletedDelegate, userState);
        }
        
        public string GetVCustomerBillingSummary(int AD_User_ID, string AccessKey) {
            return base.Channel.GetVCustomerBillingSummary(AD_User_ID, AccessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetVCustomerBillingSummary(int AD_User_ID, string AccessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetVCustomerBillingSummary(AD_User_ID, AccessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGetVCustomerBillingSummary(System.IAsyncResult result) {
            return base.Channel.EndGetVCustomerBillingSummary(result);
        }
        
        private System.IAsyncResult OnBeginGetVCustomerBillingSummary(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int AD_User_ID = ((int)(inValues[0]));
            string AccessKey = ((string)(inValues[1]));
            return this.BeginGetVCustomerBillingSummary(AD_User_ID, AccessKey, callback, asyncState);
        }
        
        private object[] OnEndGetVCustomerBillingSummary(System.IAsyncResult result) {
            string retVal = this.EndGetVCustomerBillingSummary(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetVCustomerBillingSummaryCompleted(object state) {
            if ((this.GetVCustomerBillingSummaryCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetVCustomerBillingSummaryCompleted(this, new GetVCustomerBillingSummaryCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetVCustomerBillingSummaryAsync(int AD_User_ID, string AccessKey) {
            this.GetVCustomerBillingSummaryAsync(AD_User_ID, AccessKey, null);
        }
        
        public void GetVCustomerBillingSummaryAsync(int AD_User_ID, string AccessKey, object userState) {
            if ((this.onBeginGetVCustomerBillingSummaryDelegate == null)) {
                this.onBeginGetVCustomerBillingSummaryDelegate = new BeginOperationDelegate(this.OnBeginGetVCustomerBillingSummary);
            }
            if ((this.onEndGetVCustomerBillingSummaryDelegate == null)) {
                this.onEndGetVCustomerBillingSummaryDelegate = new EndOperationDelegate(this.OnEndGetVCustomerBillingSummary);
            }
            if ((this.onGetVCustomerBillingSummaryCompletedDelegate == null)) {
                this.onGetVCustomerBillingSummaryCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetVCustomerBillingSummaryCompleted);
            }
            base.InvokeAsync(this.onBeginGetVCustomerBillingSummaryDelegate, new object[] {
                        AD_User_ID,
                        AccessKey}, this.onEndGetVCustomerBillingSummaryDelegate, this.onGetVCustomerBillingSummaryCompletedDelegate, userState);
        }
        
        public string GetVBillingInfo(int AD_User_ID, string AccessKey) {
            return base.Channel.GetVBillingInfo(AD_User_ID, AccessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetVBillingInfo(int AD_User_ID, string AccessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetVBillingInfo(AD_User_ID, AccessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGetVBillingInfo(System.IAsyncResult result) {
            return base.Channel.EndGetVBillingInfo(result);
        }
        
        private System.IAsyncResult OnBeginGetVBillingInfo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int AD_User_ID = ((int)(inValues[0]));
            string AccessKey = ((string)(inValues[1]));
            return this.BeginGetVBillingInfo(AD_User_ID, AccessKey, callback, asyncState);
        }
        
        private object[] OnEndGetVBillingInfo(System.IAsyncResult result) {
            string retVal = this.EndGetVBillingInfo(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetVBillingInfoCompleted(object state) {
            if ((this.GetVBillingInfoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetVBillingInfoCompleted(this, new GetVBillingInfoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetVBillingInfoAsync(int AD_User_ID, string AccessKey) {
            this.GetVBillingInfoAsync(AD_User_ID, AccessKey, null);
        }
        
        public void GetVBillingInfoAsync(int AD_User_ID, string AccessKey, object userState) {
            if ((this.onBeginGetVBillingInfoDelegate == null)) {
                this.onBeginGetVBillingInfoDelegate = new BeginOperationDelegate(this.OnBeginGetVBillingInfo);
            }
            if ((this.onEndGetVBillingInfoDelegate == null)) {
                this.onEndGetVBillingInfoDelegate = new EndOperationDelegate(this.OnEndGetVBillingInfo);
            }
            if ((this.onGetVBillingInfoCompletedDelegate == null)) {
                this.onGetVBillingInfoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetVBillingInfoCompleted);
            }
            base.InvokeAsync(this.onBeginGetVBillingInfoDelegate, new object[] {
                        AD_User_ID,
                        AccessKey}, this.onEndGetVBillingInfoDelegate, this.onGetVBillingInfoCompletedDelegate, userState);
        }
        
        public string SetLead(
                    string CompanyName, 
                    string name, 
                    string title, 
                    string email, 
                    string phone, 
                    string web_url, 
                    int no_of_emp, 
                    int c_Currency_id, 
                    int r_source_id, 
                    int industry_ID, 
                    string city, 
                    int country_ID, 
                    string cur_solution, 
                    string pur_timeline, 
                    string comments, 
                    string year_sell_erp, 
                    string support, 
                    int bpgroup_ID, 
                    int C_Campaign_ID, 
                    int R_STATUS_ID, 
                    int C_Region_ID, 
                    int CreatedBy, 
                    int salesrep_id, 
                    int ad_org_id, 
                    int ad_client_id, 
                    int UpdatedBy, 
                    string AccessKey) {
            return base.Channel.SetLead(CompanyName, name, title, email, phone, web_url, no_of_emp, c_Currency_id, r_source_id, industry_ID, city, country_ID, cur_solution, pur_timeline, comments, year_sell_erp, support, bpgroup_ID, C_Campaign_ID, R_STATUS_ID, C_Region_ID, CreatedBy, salesrep_id, ad_org_id, ad_client_id, UpdatedBy, AccessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSetLead(
                    string CompanyName, 
                    string name, 
                    string title, 
                    string email, 
                    string phone, 
                    string web_url, 
                    int no_of_emp, 
                    int c_Currency_id, 
                    int r_source_id, 
                    int industry_ID, 
                    string city, 
                    int country_ID, 
                    string cur_solution, 
                    string pur_timeline, 
                    string comments, 
                    string year_sell_erp, 
                    string support, 
                    int bpgroup_ID, 
                    int C_Campaign_ID, 
                    int R_STATUS_ID, 
                    int C_Region_ID, 
                    int CreatedBy, 
                    int salesrep_id, 
                    int ad_org_id, 
                    int ad_client_id, 
                    int UpdatedBy, 
                    string AccessKey, 
                    System.AsyncCallback callback, 
                    object asyncState) {
            return base.Channel.BeginSetLead(CompanyName, name, title, email, phone, web_url, no_of_emp, c_Currency_id, r_source_id, industry_ID, city, country_ID, cur_solution, pur_timeline, comments, year_sell_erp, support, bpgroup_ID, C_Campaign_ID, R_STATUS_ID, C_Region_ID, CreatedBy, salesrep_id, ad_org_id, ad_client_id, UpdatedBy, AccessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndSetLead(System.IAsyncResult result) {
            return base.Channel.EndSetLead(result);
        }
        
        private System.IAsyncResult OnBeginSetLead(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string CompanyName = ((string)(inValues[0]));
            string name = ((string)(inValues[1]));
            string title = ((string)(inValues[2]));
            string email = ((string)(inValues[3]));
            string phone = ((string)(inValues[4]));
            string web_url = ((string)(inValues[5]));
            int no_of_emp = ((int)(inValues[6]));
            int c_Currency_id = ((int)(inValues[7]));
            int r_source_id = ((int)(inValues[8]));
            int industry_ID = ((int)(inValues[9]));
            string city = ((string)(inValues[10]));
            int country_ID = ((int)(inValues[11]));
            string cur_solution = ((string)(inValues[12]));
            string pur_timeline = ((string)(inValues[13]));
            string comments = ((string)(inValues[14]));
            string year_sell_erp = ((string)(inValues[15]));
            string support = ((string)(inValues[16]));
            int bpgroup_ID = ((int)(inValues[17]));
            int C_Campaign_ID = ((int)(inValues[18]));
            int R_STATUS_ID = ((int)(inValues[19]));
            int C_Region_ID = ((int)(inValues[20]));
            int CreatedBy = ((int)(inValues[21]));
            int salesrep_id = ((int)(inValues[22]));
            int ad_org_id = ((int)(inValues[23]));
            int ad_client_id = ((int)(inValues[24]));
            int UpdatedBy = ((int)(inValues[25]));
            string AccessKey = ((string)(inValues[26]));
            return this.BeginSetLead(CompanyName, name, title, email, phone, web_url, no_of_emp, c_Currency_id, r_source_id, industry_ID, city, country_ID, cur_solution, pur_timeline, comments, year_sell_erp, support, bpgroup_ID, C_Campaign_ID, R_STATUS_ID, C_Region_ID, CreatedBy, salesrep_id, ad_org_id, ad_client_id, UpdatedBy, AccessKey, callback, asyncState);
        }
        
        private object[] OnEndSetLead(System.IAsyncResult result) {
            string retVal = this.EndSetLead(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSetLeadCompleted(object state) {
            if ((this.SetLeadCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetLeadCompleted(this, new SetLeadCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetLeadAsync(
                    string CompanyName, 
                    string name, 
                    string title, 
                    string email, 
                    string phone, 
                    string web_url, 
                    int no_of_emp, 
                    int c_Currency_id, 
                    int r_source_id, 
                    int industry_ID, 
                    string city, 
                    int country_ID, 
                    string cur_solution, 
                    string pur_timeline, 
                    string comments, 
                    string year_sell_erp, 
                    string support, 
                    int bpgroup_ID, 
                    int C_Campaign_ID, 
                    int R_STATUS_ID, 
                    int C_Region_ID, 
                    int CreatedBy, 
                    int salesrep_id, 
                    int ad_org_id, 
                    int ad_client_id, 
                    int UpdatedBy, 
                    string AccessKey) {
            this.SetLeadAsync(CompanyName, name, title, email, phone, web_url, no_of_emp, c_Currency_id, r_source_id, industry_ID, city, country_ID, cur_solution, pur_timeline, comments, year_sell_erp, support, bpgroup_ID, C_Campaign_ID, R_STATUS_ID, C_Region_ID, CreatedBy, salesrep_id, ad_org_id, ad_client_id, UpdatedBy, AccessKey, null);
        }
        
        public void SetLeadAsync(
                    string CompanyName, 
                    string name, 
                    string title, 
                    string email, 
                    string phone, 
                    string web_url, 
                    int no_of_emp, 
                    int c_Currency_id, 
                    int r_source_id, 
                    int industry_ID, 
                    string city, 
                    int country_ID, 
                    string cur_solution, 
                    string pur_timeline, 
                    string comments, 
                    string year_sell_erp, 
                    string support, 
                    int bpgroup_ID, 
                    int C_Campaign_ID, 
                    int R_STATUS_ID, 
                    int C_Region_ID, 
                    int CreatedBy, 
                    int salesrep_id, 
                    int ad_org_id, 
                    int ad_client_id, 
                    int UpdatedBy, 
                    string AccessKey, 
                    object userState) {
            if ((this.onBeginSetLeadDelegate == null)) {
                this.onBeginSetLeadDelegate = new BeginOperationDelegate(this.OnBeginSetLead);
            }
            if ((this.onEndSetLeadDelegate == null)) {
                this.onEndSetLeadDelegate = new EndOperationDelegate(this.OnEndSetLead);
            }
            if ((this.onSetLeadCompletedDelegate == null)) {
                this.onSetLeadCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetLeadCompleted);
            }
            base.InvokeAsync(this.onBeginSetLeadDelegate, new object[] {
                        CompanyName,
                        name,
                        title,
                        email,
                        phone,
                        web_url,
                        no_of_emp,
                        c_Currency_id,
                        r_source_id,
                        industry_ID,
                        city,
                        country_ID,
                        cur_solution,
                        pur_timeline,
                        comments,
                        year_sell_erp,
                        support,
                        bpgroup_ID,
                        C_Campaign_ID,
                        R_STATUS_ID,
                        C_Region_ID,
                        CreatedBy,
                        salesrep_id,
                        ad_org_id,
                        ad_client_id,
                        UpdatedBy,
                        AccessKey}, this.onEndSetLeadDelegate, this.onSetLeadCompletedDelegate, userState);
        }
        
        public System.Data.DataSet GetTopicInfo(out string error, string url, bool isInitConfig, string langCode, string searchText, string option) {
            return base.Channel.GetTopicInfo(out error, url, isInitConfig, langCode, searchText, option);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetTopicInfo(string url, bool isInitConfig, string langCode, string searchText, string option, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetTopicInfo(url, isInitConfig, langCode, searchText, option, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndGetTopicInfo(out string error, System.IAsyncResult result) {
            return base.Channel.EndGetTopicInfo(out error, result);
        }
        
        private System.IAsyncResult OnBeginGetTopicInfo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string url = ((string)(inValues[0]));
            bool isInitConfig = ((bool)(inValues[1]));
            string langCode = ((string)(inValues[2]));
            string searchText = ((string)(inValues[3]));
            string option = ((string)(inValues[4]));
            return this.BeginGetTopicInfo(url, isInitConfig, langCode, searchText, option, callback, asyncState);
        }
        
        private object[] OnEndGetTopicInfo(System.IAsyncResult result) {
            string error = this.GetDefaultValueForInitialization<string>();
            System.Data.DataSet retVal = this.EndGetTopicInfo(out error, result);
            return new object[] {
                    error,
                    retVal};
        }
        
        private void OnGetTopicInfoCompleted(object state) {
            if ((this.GetTopicInfoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetTopicInfoCompleted(this, new GetTopicInfoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetTopicInfoAsync(string url, bool isInitConfig, string langCode, string searchText, string option) {
            this.GetTopicInfoAsync(url, isInitConfig, langCode, searchText, option, null);
        }
        
        public void GetTopicInfoAsync(string url, bool isInitConfig, string langCode, string searchText, string option, object userState) {
            if ((this.onBeginGetTopicInfoDelegate == null)) {
                this.onBeginGetTopicInfoDelegate = new BeginOperationDelegate(this.OnBeginGetTopicInfo);
            }
            if ((this.onEndGetTopicInfoDelegate == null)) {
                this.onEndGetTopicInfoDelegate = new EndOperationDelegate(this.OnEndGetTopicInfo);
            }
            if ((this.onGetTopicInfoCompletedDelegate == null)) {
                this.onGetTopicInfoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetTopicInfoCompleted);
            }
            base.InvokeAsync(this.onBeginGetTopicInfoDelegate, new object[] {
                        url,
                        isInitConfig,
                        langCode,
                        searchText,
                        option}, this.onEndGetTopicInfoDelegate, this.onGetTopicInfoCompletedDelegate, userState);
        }
        
        public System.Data.DataSet GetInstruction(out string error, int K_TopicInfo_ID, string langCode, string optional) {
            return base.Channel.GetInstruction(out error, K_TopicInfo_ID, langCode, optional);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetInstruction(int K_TopicInfo_ID, string langCode, string optional, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetInstruction(K_TopicInfo_ID, langCode, optional, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndGetInstruction(out string error, System.IAsyncResult result) {
            return base.Channel.EndGetInstruction(out error, result);
        }
        
        private System.IAsyncResult OnBeginGetInstruction(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int K_TopicInfo_ID = ((int)(inValues[0]));
            string langCode = ((string)(inValues[1]));
            string optional = ((string)(inValues[2]));
            return this.BeginGetInstruction(K_TopicInfo_ID, langCode, optional, callback, asyncState);
        }
        
        private object[] OnEndGetInstruction(System.IAsyncResult result) {
            string error = this.GetDefaultValueForInitialization<string>();
            System.Data.DataSet retVal = this.EndGetInstruction(out error, result);
            return new object[] {
                    error,
                    retVal};
        }
        
        private void OnGetInstructionCompleted(object state) {
            if ((this.GetInstructionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetInstructionCompleted(this, new GetInstructionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetInstructionAsync(int K_TopicInfo_ID, string langCode, string optional) {
            this.GetInstructionAsync(K_TopicInfo_ID, langCode, optional, null);
        }
        
        public void GetInstructionAsync(int K_TopicInfo_ID, string langCode, string optional, object userState) {
            if ((this.onBeginGetInstructionDelegate == null)) {
                this.onBeginGetInstructionDelegate = new BeginOperationDelegate(this.OnBeginGetInstruction);
            }
            if ((this.onEndGetInstructionDelegate == null)) {
                this.onEndGetInstructionDelegate = new EndOperationDelegate(this.OnEndGetInstruction);
            }
            if ((this.onGetInstructionCompletedDelegate == null)) {
                this.onGetInstructionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetInstructionCompleted);
            }
            base.InvokeAsync(this.onBeginGetInstructionDelegate, new object[] {
                        K_TopicInfo_ID,
                        langCode,
                        optional}, this.onEndGetInstructionDelegate, this.onGetInstructionCompletedDelegate, userState);
        }
        
        public string serverInfo() {
            return base.Channel.serverInfo();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginserverInfo(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginserverInfo(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndserverInfo(System.IAsyncResult result) {
            return base.Channel.EndserverInfo(result);
        }
        
        private System.IAsyncResult OnBeginserverInfo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginserverInfo(callback, asyncState);
        }
        
        private object[] OnEndserverInfo(System.IAsyncResult result) {
            string retVal = this.EndserverInfo(result);
            return new object[] {
                    retVal};
        }
        
        private void OnserverInfoCompleted(object state) {
            if ((this.serverInfoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.serverInfoCompleted(this, new serverInfoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void serverInfoAsync() {
            this.serverInfoAsync(null);
        }
        
        public void serverInfoAsync(object userState) {
            if ((this.onBeginserverInfoDelegate == null)) {
                this.onBeginserverInfoDelegate = new BeginOperationDelegate(this.OnBeginserverInfo);
            }
            if ((this.onEndserverInfoDelegate == null)) {
                this.onEndserverInfoDelegate = new EndOperationDelegate(this.OnEndserverInfo);
            }
            if ((this.onserverInfoCompletedDelegate == null)) {
                this.onserverInfoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnserverInfoCompleted);
            }
            base.InvokeAsync(this.onBeginserverInfoDelegate, null, this.onEndserverInfoDelegate, this.onserverInfoCompletedDelegate, userState);
        }
        
        public BaseLibrary.CloudService.InCompleteDBInfo GetOldIncomleteDB(string ZoneCode, string accessKey) {
            return base.Channel.GetOldIncomleteDB(ZoneCode, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetOldIncomleteDB(string ZoneCode, string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetOldIncomleteDB(ZoneCode, accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public BaseLibrary.CloudService.InCompleteDBInfo EndGetOldIncomleteDB(System.IAsyncResult result) {
            return base.Channel.EndGetOldIncomleteDB(result);
        }
        
        private System.IAsyncResult OnBeginGetOldIncomleteDB(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string ZoneCode = ((string)(inValues[0]));
            string accessKey = ((string)(inValues[1]));
            return this.BeginGetOldIncomleteDB(ZoneCode, accessKey, callback, asyncState);
        }
        
        private object[] OnEndGetOldIncomleteDB(System.IAsyncResult result) {
            BaseLibrary.CloudService.InCompleteDBInfo retVal = this.EndGetOldIncomleteDB(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetOldIncomleteDBCompleted(object state) {
            if ((this.GetOldIncomleteDBCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetOldIncomleteDBCompleted(this, new GetOldIncomleteDBCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetOldIncomleteDBAsync(string ZoneCode, string accessKey) {
            this.GetOldIncomleteDBAsync(ZoneCode, accessKey, null);
        }
        
        public void GetOldIncomleteDBAsync(string ZoneCode, string accessKey, object userState) {
            if ((this.onBeginGetOldIncomleteDBDelegate == null)) {
                this.onBeginGetOldIncomleteDBDelegate = new BeginOperationDelegate(this.OnBeginGetOldIncomleteDB);
            }
            if ((this.onEndGetOldIncomleteDBDelegate == null)) {
                this.onEndGetOldIncomleteDBDelegate = new EndOperationDelegate(this.OnEndGetOldIncomleteDB);
            }
            if ((this.onGetOldIncomleteDBCompletedDelegate == null)) {
                this.onGetOldIncomleteDBCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetOldIncomleteDBCompleted);
            }
            base.InvokeAsync(this.onBeginGetOldIncomleteDBDelegate, new object[] {
                        ZoneCode,
                        accessKey}, this.onEndGetOldIncomleteDBDelegate, this.onGetOldIncomleteDBCompletedDelegate, userState);
        }
        
        public bool DeleteDBEntry(int databaseID, string accessKey) {
            return base.Channel.DeleteDBEntry(databaseID, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteDBEntry(int databaseID, string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteDBEntry(databaseID, accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndDeleteDBEntry(System.IAsyncResult result) {
            return base.Channel.EndDeleteDBEntry(result);
        }
        
        private System.IAsyncResult OnBeginDeleteDBEntry(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int databaseID = ((int)(inValues[0]));
            string accessKey = ((string)(inValues[1]));
            return this.BeginDeleteDBEntry(databaseID, accessKey, callback, asyncState);
        }
        
        private object[] OnEndDeleteDBEntry(System.IAsyncResult result) {
            bool retVal = this.EndDeleteDBEntry(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeleteDBEntryCompleted(object state) {
            if ((this.DeleteDBEntryCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteDBEntryCompleted(this, new DeleteDBEntryCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteDBEntryAsync(int databaseID, string accessKey) {
            this.DeleteDBEntryAsync(databaseID, accessKey, null);
        }
        
        public void DeleteDBEntryAsync(int databaseID, string accessKey, object userState) {
            if ((this.onBeginDeleteDBEntryDelegate == null)) {
                this.onBeginDeleteDBEntryDelegate = new BeginOperationDelegate(this.OnBeginDeleteDBEntry);
            }
            if ((this.onEndDeleteDBEntryDelegate == null)) {
                this.onEndDeleteDBEntryDelegate = new EndOperationDelegate(this.OnEndDeleteDBEntry);
            }
            if ((this.onDeleteDBEntryCompletedDelegate == null)) {
                this.onDeleteDBEntryCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteDBEntryCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteDBEntryDelegate, new object[] {
                        databaseID,
                        accessKey}, this.onEndDeleteDBEntryDelegate, this.onDeleteDBEntryCompletedDelegate, userState);
        }
        
        public BaseLibrary.CloudService.AssetNotInUse[] GetAssetNotInUse(string zoneCode, string accessKey) {
            return base.Channel.GetAssetNotInUse(zoneCode, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAssetNotInUse(string zoneCode, string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAssetNotInUse(zoneCode, accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public BaseLibrary.CloudService.AssetNotInUse[] EndGetAssetNotInUse(System.IAsyncResult result) {
            return base.Channel.EndGetAssetNotInUse(result);
        }
        
        private System.IAsyncResult OnBeginGetAssetNotInUse(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string zoneCode = ((string)(inValues[0]));
            string accessKey = ((string)(inValues[1]));
            return this.BeginGetAssetNotInUse(zoneCode, accessKey, callback, asyncState);
        }
        
        private object[] OnEndGetAssetNotInUse(System.IAsyncResult result) {
            BaseLibrary.CloudService.AssetNotInUse[] retVal = this.EndGetAssetNotInUse(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAssetNotInUseCompleted(object state) {
            if ((this.GetAssetNotInUseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAssetNotInUseCompleted(this, new GetAssetNotInUseCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAssetNotInUseAsync(string zoneCode, string accessKey) {
            this.GetAssetNotInUseAsync(zoneCode, accessKey, null);
        }
        
        public void GetAssetNotInUseAsync(string zoneCode, string accessKey, object userState) {
            if ((this.onBeginGetAssetNotInUseDelegate == null)) {
                this.onBeginGetAssetNotInUseDelegate = new BeginOperationDelegate(this.OnBeginGetAssetNotInUse);
            }
            if ((this.onEndGetAssetNotInUseDelegate == null)) {
                this.onEndGetAssetNotInUseDelegate = new EndOperationDelegate(this.OnEndGetAssetNotInUse);
            }
            if ((this.onGetAssetNotInUseCompletedDelegate == null)) {
                this.onGetAssetNotInUseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAssetNotInUseCompleted);
            }
            base.InvokeAsync(this.onBeginGetAssetNotInUseDelegate, new object[] {
                        zoneCode,
                        accessKey}, this.onEndGetAssetNotInUseDelegate, this.onGetAssetNotInUseCompletedDelegate, userState);
        }
        
        public string SendNotice(int[] A_Asset_ID, string accessKey) {
            return base.Channel.SendNotice(A_Asset_ID, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSendNotice(int[] A_Asset_ID, string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSendNotice(A_Asset_ID, accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndSendNotice(System.IAsyncResult result) {
            return base.Channel.EndSendNotice(result);
        }
        
        private System.IAsyncResult OnBeginSendNotice(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int[] A_Asset_ID = ((int[])(inValues[0]));
            string accessKey = ((string)(inValues[1]));
            return this.BeginSendNotice(A_Asset_ID, accessKey, callback, asyncState);
        }
        
        private object[] OnEndSendNotice(System.IAsyncResult result) {
            string retVal = this.EndSendNotice(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSendNoticeCompleted(object state) {
            if ((this.SendNoticeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SendNoticeCompleted(this, new SendNoticeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SendNoticeAsync(int[] A_Asset_ID, string accessKey) {
            this.SendNoticeAsync(A_Asset_ID, accessKey, null);
        }
        
        public void SendNoticeAsync(int[] A_Asset_ID, string accessKey, object userState) {
            if ((this.onBeginSendNoticeDelegate == null)) {
                this.onBeginSendNoticeDelegate = new BeginOperationDelegate(this.OnBeginSendNotice);
            }
            if ((this.onEndSendNoticeDelegate == null)) {
                this.onEndSendNoticeDelegate = new EndOperationDelegate(this.OnEndSendNotice);
            }
            if ((this.onSendNoticeCompletedDelegate == null)) {
                this.onSendNoticeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSendNoticeCompleted);
            }
            base.InvokeAsync(this.onBeginSendNoticeDelegate, new object[] {
                        A_Asset_ID,
                        accessKey}, this.onEndSendNoticeDelegate, this.onSendNoticeCompletedDelegate, userState);
        }
        
        public string SendReminderExpMail(string RemindLoginAskExpdays, string accessKey) {
            return base.Channel.SendReminderExpMail(RemindLoginAskExpdays, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSendReminderExpMail(string RemindLoginAskExpdays, string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSendReminderExpMail(RemindLoginAskExpdays, accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndSendReminderExpMail(System.IAsyncResult result) {
            return base.Channel.EndSendReminderExpMail(result);
        }
        
        private System.IAsyncResult OnBeginSendReminderExpMail(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string RemindLoginAskExpdays = ((string)(inValues[0]));
            string accessKey = ((string)(inValues[1]));
            return this.BeginSendReminderExpMail(RemindLoginAskExpdays, accessKey, callback, asyncState);
        }
        
        private object[] OnEndSendReminderExpMail(System.IAsyncResult result) {
            string retVal = this.EndSendReminderExpMail(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSendReminderExpMailCompleted(object state) {
            if ((this.SendReminderExpMailCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SendReminderExpMailCompleted(this, new SendReminderExpMailCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SendReminderExpMailAsync(string RemindLoginAskExpdays, string accessKey) {
            this.SendReminderExpMailAsync(RemindLoginAskExpdays, accessKey, null);
        }
        
        public void SendReminderExpMailAsync(string RemindLoginAskExpdays, string accessKey, object userState) {
            if ((this.onBeginSendReminderExpMailDelegate == null)) {
                this.onBeginSendReminderExpMailDelegate = new BeginOperationDelegate(this.OnBeginSendReminderExpMail);
            }
            if ((this.onEndSendReminderExpMailDelegate == null)) {
                this.onEndSendReminderExpMailDelegate = new EndOperationDelegate(this.OnEndSendReminderExpMail);
            }
            if ((this.onSendReminderExpMailCompletedDelegate == null)) {
                this.onSendReminderExpMailCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSendReminderExpMailCompleted);
            }
            base.InvokeAsync(this.onBeginSendReminderExpMailDelegate, new object[] {
                        RemindLoginAskExpdays,
                        accessKey}, this.onEndSendReminderExpMailDelegate, this.onSendReminderExpMailCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BaseLibrary.CloudService.DownloadFileResponse BaseLibrary.CloudService.ServiceSoap.DownloadFile(BaseLibrary.CloudService.DownloadFileRequest request) {
            return base.Channel.DownloadFile(request);
        }
        
        public byte[] DownloadFile(int UserID, string licenceKey, string accessKey) {
            BaseLibrary.CloudService.DownloadFileRequest inValue = new BaseLibrary.CloudService.DownloadFileRequest();
            inValue.UserID = UserID;
            inValue.licenceKey = licenceKey;
            inValue.accessKey = accessKey;
            BaseLibrary.CloudService.DownloadFileResponse retVal = ((BaseLibrary.CloudService.ServiceSoap)(this)).DownloadFile(inValue);
            return retVal.DownloadFileResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult BaseLibrary.CloudService.ServiceSoap.BeginDownloadFile(BaseLibrary.CloudService.DownloadFileRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDownloadFile(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDownloadFile(int UserID, string licenceKey, string accessKey, System.AsyncCallback callback, object asyncState) {
            BaseLibrary.CloudService.DownloadFileRequest inValue = new BaseLibrary.CloudService.DownloadFileRequest();
            inValue.UserID = UserID;
            inValue.licenceKey = licenceKey;
            inValue.accessKey = accessKey;
            return ((BaseLibrary.CloudService.ServiceSoap)(this)).BeginDownloadFile(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BaseLibrary.CloudService.DownloadFileResponse BaseLibrary.CloudService.ServiceSoap.EndDownloadFile(System.IAsyncResult result) {
            return base.Channel.EndDownloadFile(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public byte[] EndDownloadFile(System.IAsyncResult result) {
            BaseLibrary.CloudService.DownloadFileResponse retVal = ((BaseLibrary.CloudService.ServiceSoap)(this)).EndDownloadFile(result);
            return retVal.DownloadFileResult;
        }
        
        private System.IAsyncResult OnBeginDownloadFile(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int UserID = ((int)(inValues[0]));
            string licenceKey = ((string)(inValues[1]));
            string accessKey = ((string)(inValues[2]));
            return this.BeginDownloadFile(UserID, licenceKey, accessKey, callback, asyncState);
        }
        
        private object[] OnEndDownloadFile(System.IAsyncResult result) {
            byte[] retVal = this.EndDownloadFile(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDownloadFileCompleted(object state) {
            if ((this.DownloadFileCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DownloadFileCompleted(this, new DownloadFileCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DownloadFileAsync(int UserID, string licenceKey, string accessKey) {
            this.DownloadFileAsync(UserID, licenceKey, accessKey, null);
        }
        
        public void DownloadFileAsync(int UserID, string licenceKey, string accessKey, object userState) {
            if ((this.onBeginDownloadFileDelegate == null)) {
                this.onBeginDownloadFileDelegate = new BeginOperationDelegate(this.OnBeginDownloadFile);
            }
            if ((this.onEndDownloadFileDelegate == null)) {
                this.onEndDownloadFileDelegate = new EndOperationDelegate(this.OnEndDownloadFile);
            }
            if ((this.onDownloadFileCompletedDelegate == null)) {
                this.onDownloadFileCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDownloadFileCompleted);
            }
            base.InvokeAsync(this.onBeginDownloadFileDelegate, new object[] {
                        UserID,
                        licenceKey,
                        accessKey}, this.onEndDownloadFileDelegate, this.onDownloadFileCompletedDelegate, userState);
        }
        
        public string CheckUserFiles(int UserID, string licenceKey, string accessKey) {
            return base.Channel.CheckUserFiles(UserID, licenceKey, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCheckUserFiles(int UserID, string licenceKey, string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCheckUserFiles(UserID, licenceKey, accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndCheckUserFiles(System.IAsyncResult result) {
            return base.Channel.EndCheckUserFiles(result);
        }
        
        private System.IAsyncResult OnBeginCheckUserFiles(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int UserID = ((int)(inValues[0]));
            string licenceKey = ((string)(inValues[1]));
            string accessKey = ((string)(inValues[2]));
            return this.BeginCheckUserFiles(UserID, licenceKey, accessKey, callback, asyncState);
        }
        
        private object[] OnEndCheckUserFiles(System.IAsyncResult result) {
            string retVal = this.EndCheckUserFiles(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCheckUserFilesCompleted(object state) {
            if ((this.CheckUserFilesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CheckUserFilesCompleted(this, new CheckUserFilesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CheckUserFilesAsync(int UserID, string licenceKey, string accessKey) {
            this.CheckUserFilesAsync(UserID, licenceKey, accessKey, null);
        }
        
        public void CheckUserFilesAsync(int UserID, string licenceKey, string accessKey, object userState) {
            if ((this.onBeginCheckUserFilesDelegate == null)) {
                this.onBeginCheckUserFilesDelegate = new BeginOperationDelegate(this.OnBeginCheckUserFiles);
            }
            if ((this.onEndCheckUserFilesDelegate == null)) {
                this.onEndCheckUserFilesDelegate = new EndOperationDelegate(this.OnEndCheckUserFiles);
            }
            if ((this.onCheckUserFilesCompletedDelegate == null)) {
                this.onCheckUserFilesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCheckUserFilesCompleted);
            }
            base.InvokeAsync(this.onBeginCheckUserFilesDelegate, new object[] {
                        UserID,
                        licenceKey,
                        accessKey}, this.onEndCheckUserFilesDelegate, this.onCheckUserFilesCompletedDelegate, userState);
        }
        
        public string GetCurrentRunningTenant(string zoneCode, string accessKey) {
            return base.Channel.GetCurrentRunningTenant(zoneCode, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCurrentRunningTenant(string zoneCode, string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCurrentRunningTenant(zoneCode, accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGetCurrentRunningTenant(System.IAsyncResult result) {
            return base.Channel.EndGetCurrentRunningTenant(result);
        }
        
        private System.IAsyncResult OnBeginGetCurrentRunningTenant(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string zoneCode = ((string)(inValues[0]));
            string accessKey = ((string)(inValues[1]));
            return this.BeginGetCurrentRunningTenant(zoneCode, accessKey, callback, asyncState);
        }
        
        private object[] OnEndGetCurrentRunningTenant(System.IAsyncResult result) {
            string retVal = this.EndGetCurrentRunningTenant(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCurrentRunningTenantCompleted(object state) {
            if ((this.GetCurrentRunningTenantCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCurrentRunningTenantCompleted(this, new GetCurrentRunningTenantCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCurrentRunningTenantAsync(string zoneCode, string accessKey) {
            this.GetCurrentRunningTenantAsync(zoneCode, accessKey, null);
        }
        
        public void GetCurrentRunningTenantAsync(string zoneCode, string accessKey, object userState) {
            if ((this.onBeginGetCurrentRunningTenantDelegate == null)) {
                this.onBeginGetCurrentRunningTenantDelegate = new BeginOperationDelegate(this.OnBeginGetCurrentRunningTenant);
            }
            if ((this.onEndGetCurrentRunningTenantDelegate == null)) {
                this.onEndGetCurrentRunningTenantDelegate = new EndOperationDelegate(this.OnEndGetCurrentRunningTenant);
            }
            if ((this.onGetCurrentRunningTenantCompletedDelegate == null)) {
                this.onGetCurrentRunningTenantCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCurrentRunningTenantCompleted);
            }
            base.InvokeAsync(this.onBeginGetCurrentRunningTenantDelegate, new object[] {
                        zoneCode,
                        accessKey}, this.onEndGetCurrentRunningTenantDelegate, this.onGetCurrentRunningTenantCompletedDelegate, userState);
        }
        
        public string ModuleInstallationRequest(int AD_User_ID, int AD_ModuleInfo_ID, string ipAddress, int[] clients, string[] languages, string versionNo, string accessKey) {
            return base.Channel.ModuleInstallationRequest(AD_User_ID, AD_ModuleInfo_ID, ipAddress, clients, languages, versionNo, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginModuleInstallationRequest(int AD_User_ID, int AD_ModuleInfo_ID, string ipAddress, int[] clients, string[] languages, string versionNo, string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginModuleInstallationRequest(AD_User_ID, AD_ModuleInfo_ID, ipAddress, clients, languages, versionNo, accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndModuleInstallationRequest(System.IAsyncResult result) {
            return base.Channel.EndModuleInstallationRequest(result);
        }
        
        private System.IAsyncResult OnBeginModuleInstallationRequest(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int AD_User_ID = ((int)(inValues[0]));
            int AD_ModuleInfo_ID = ((int)(inValues[1]));
            string ipAddress = ((string)(inValues[2]));
            int[] clients = ((int[])(inValues[3]));
            string[] languages = ((string[])(inValues[4]));
            string versionNo = ((string)(inValues[5]));
            string accessKey = ((string)(inValues[6]));
            return this.BeginModuleInstallationRequest(AD_User_ID, AD_ModuleInfo_ID, ipAddress, clients, languages, versionNo, accessKey, callback, asyncState);
        }
        
        private object[] OnEndModuleInstallationRequest(System.IAsyncResult result) {
            string retVal = this.EndModuleInstallationRequest(result);
            return new object[] {
                    retVal};
        }
        
        private void OnModuleInstallationRequestCompleted(object state) {
            if ((this.ModuleInstallationRequestCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ModuleInstallationRequestCompleted(this, new ModuleInstallationRequestCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ModuleInstallationRequestAsync(int AD_User_ID, int AD_ModuleInfo_ID, string ipAddress, int[] clients, string[] languages, string versionNo, string accessKey) {
            this.ModuleInstallationRequestAsync(AD_User_ID, AD_ModuleInfo_ID, ipAddress, clients, languages, versionNo, accessKey, null);
        }
        
        public void ModuleInstallationRequestAsync(int AD_User_ID, int AD_ModuleInfo_ID, string ipAddress, int[] clients, string[] languages, string versionNo, string accessKey, object userState) {
            if ((this.onBeginModuleInstallationRequestDelegate == null)) {
                this.onBeginModuleInstallationRequestDelegate = new BeginOperationDelegate(this.OnBeginModuleInstallationRequest);
            }
            if ((this.onEndModuleInstallationRequestDelegate == null)) {
                this.onEndModuleInstallationRequestDelegate = new EndOperationDelegate(this.OnEndModuleInstallationRequest);
            }
            if ((this.onModuleInstallationRequestCompletedDelegate == null)) {
                this.onModuleInstallationRequestCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnModuleInstallationRequestCompleted);
            }
            base.InvokeAsync(this.onBeginModuleInstallationRequestDelegate, new object[] {
                        AD_User_ID,
                        AD_ModuleInfo_ID,
                        ipAddress,
                        clients,
                        languages,
                        versionNo,
                        accessKey}, this.onEndModuleInstallationRequestDelegate, this.onModuleInstallationRequestCompletedDelegate, userState);
        }
        
        public BaseLibrary.CloudService.RequestedModuleInfo[] GetRequestToInstallModule(string ZoneCode, string accessKey) {
            return base.Channel.GetRequestToInstallModule(ZoneCode, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetRequestToInstallModule(string ZoneCode, string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetRequestToInstallModule(ZoneCode, accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public BaseLibrary.CloudService.RequestedModuleInfo[] EndGetRequestToInstallModule(System.IAsyncResult result) {
            return base.Channel.EndGetRequestToInstallModule(result);
        }
        
        private System.IAsyncResult OnBeginGetRequestToInstallModule(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string ZoneCode = ((string)(inValues[0]));
            string accessKey = ((string)(inValues[1]));
            return this.BeginGetRequestToInstallModule(ZoneCode, accessKey, callback, asyncState);
        }
        
        private object[] OnEndGetRequestToInstallModule(System.IAsyncResult result) {
            BaseLibrary.CloudService.RequestedModuleInfo[] retVal = this.EndGetRequestToInstallModule(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetRequestToInstallModuleCompleted(object state) {
            if ((this.GetRequestToInstallModuleCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetRequestToInstallModuleCompleted(this, new GetRequestToInstallModuleCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetRequestToInstallModuleAsync(string ZoneCode, string accessKey) {
            this.GetRequestToInstallModuleAsync(ZoneCode, accessKey, null);
        }
        
        public void GetRequestToInstallModuleAsync(string ZoneCode, string accessKey, object userState) {
            if ((this.onBeginGetRequestToInstallModuleDelegate == null)) {
                this.onBeginGetRequestToInstallModuleDelegate = new BeginOperationDelegate(this.OnBeginGetRequestToInstallModule);
            }
            if ((this.onEndGetRequestToInstallModuleDelegate == null)) {
                this.onEndGetRequestToInstallModuleDelegate = new EndOperationDelegate(this.OnEndGetRequestToInstallModule);
            }
            if ((this.onGetRequestToInstallModuleCompletedDelegate == null)) {
                this.onGetRequestToInstallModuleCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetRequestToInstallModuleCompleted);
            }
            base.InvokeAsync(this.onBeginGetRequestToInstallModuleDelegate, new object[] {
                        ZoneCode,
                        accessKey}, this.onEndGetRequestToInstallModuleDelegate, this.onGetRequestToInstallModuleCompletedDelegate, userState);
        }
        
        public BaseLibrary.CloudService.CustomerPServerInfo GetCustomerPServerInfo(string ZoneCode, int A_Asset_ID, string accessKey) {
            return base.Channel.GetCustomerPServerInfo(ZoneCode, A_Asset_ID, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCustomerPServerInfo(string ZoneCode, int A_Asset_ID, string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCustomerPServerInfo(ZoneCode, A_Asset_ID, accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public BaseLibrary.CloudService.CustomerPServerInfo EndGetCustomerPServerInfo(System.IAsyncResult result) {
            return base.Channel.EndGetCustomerPServerInfo(result);
        }
        
        private System.IAsyncResult OnBeginGetCustomerPServerInfo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string ZoneCode = ((string)(inValues[0]));
            int A_Asset_ID = ((int)(inValues[1]));
            string accessKey = ((string)(inValues[2]));
            return this.BeginGetCustomerPServerInfo(ZoneCode, A_Asset_ID, accessKey, callback, asyncState);
        }
        
        private object[] OnEndGetCustomerPServerInfo(System.IAsyncResult result) {
            BaseLibrary.CloudService.CustomerPServerInfo retVal = this.EndGetCustomerPServerInfo(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCustomerPServerInfoCompleted(object state) {
            if ((this.GetCustomerPServerInfoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCustomerPServerInfoCompleted(this, new GetCustomerPServerInfoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCustomerPServerInfoAsync(string ZoneCode, int A_Asset_ID, string accessKey) {
            this.GetCustomerPServerInfoAsync(ZoneCode, A_Asset_ID, accessKey, null);
        }
        
        public void GetCustomerPServerInfoAsync(string ZoneCode, int A_Asset_ID, string accessKey, object userState) {
            if ((this.onBeginGetCustomerPServerInfoDelegate == null)) {
                this.onBeginGetCustomerPServerInfoDelegate = new BeginOperationDelegate(this.OnBeginGetCustomerPServerInfo);
            }
            if ((this.onEndGetCustomerPServerInfoDelegate == null)) {
                this.onEndGetCustomerPServerInfoDelegate = new EndOperationDelegate(this.OnEndGetCustomerPServerInfo);
            }
            if ((this.onGetCustomerPServerInfoCompletedDelegate == null)) {
                this.onGetCustomerPServerInfoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCustomerPServerInfoCompleted);
            }
            base.InvokeAsync(this.onBeginGetCustomerPServerInfoDelegate, new object[] {
                        ZoneCode,
                        A_Asset_ID,
                        accessKey}, this.onEndGetCustomerPServerInfoDelegate, this.onGetCustomerPServerInfoCompletedDelegate, userState);
        }
        
        public string GetSubscriptionDays(string url, string accessKey) {
            return base.Channel.GetSubscriptionDays(url, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetSubscriptionDays(string url, string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSubscriptionDays(url, accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGetSubscriptionDays(System.IAsyncResult result) {
            return base.Channel.EndGetSubscriptionDays(result);
        }
        
        private System.IAsyncResult OnBeginGetSubscriptionDays(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string url = ((string)(inValues[0]));
            string accessKey = ((string)(inValues[1]));
            return this.BeginGetSubscriptionDays(url, accessKey, callback, asyncState);
        }
        
        private object[] OnEndGetSubscriptionDays(System.IAsyncResult result) {
            string retVal = this.EndGetSubscriptionDays(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetSubscriptionDaysCompleted(object state) {
            if ((this.GetSubscriptionDaysCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSubscriptionDaysCompleted(this, new GetSubscriptionDaysCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSubscriptionDaysAsync(string url, string accessKey) {
            this.GetSubscriptionDaysAsync(url, accessKey, null);
        }
        
        public void GetSubscriptionDaysAsync(string url, string accessKey, object userState) {
            if ((this.onBeginGetSubscriptionDaysDelegate == null)) {
                this.onBeginGetSubscriptionDaysDelegate = new BeginOperationDelegate(this.OnBeginGetSubscriptionDays);
            }
            if ((this.onEndGetSubscriptionDaysDelegate == null)) {
                this.onEndGetSubscriptionDaysDelegate = new EndOperationDelegate(this.OnEndGetSubscriptionDays);
            }
            if ((this.onGetSubscriptionDaysCompletedDelegate == null)) {
                this.onGetSubscriptionDaysCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSubscriptionDaysCompleted);
            }
            base.InvokeAsync(this.onBeginGetSubscriptionDaysDelegate, new object[] {
                        url,
                        accessKey}, this.onEndGetSubscriptionDaysDelegate, this.onGetSubscriptionDaysCompletedDelegate, userState);
        }
        
        public void PackageEntryIntoItemMasterTest(string pdata) {
            base.Channel.PackageEntryIntoItemMasterTest(pdata);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginPackageEntryIntoItemMasterTest(string pdata, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginPackageEntryIntoItemMasterTest(pdata, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndPackageEntryIntoItemMasterTest(System.IAsyncResult result) {
            base.Channel.EndPackageEntryIntoItemMasterTest(result);
        }
        
        private System.IAsyncResult OnBeginPackageEntryIntoItemMasterTest(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string pdata = ((string)(inValues[0]));
            return this.BeginPackageEntryIntoItemMasterTest(pdata, callback, asyncState);
        }
        
        private object[] OnEndPackageEntryIntoItemMasterTest(System.IAsyncResult result) {
            this.EndPackageEntryIntoItemMasterTest(result);
            return null;
        }
        
        private void OnPackageEntryIntoItemMasterTestCompleted(object state) {
            if ((this.PackageEntryIntoItemMasterTestCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.PackageEntryIntoItemMasterTestCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void PackageEntryIntoItemMasterTestAsync(string pdata) {
            this.PackageEntryIntoItemMasterTestAsync(pdata, null);
        }
        
        public void PackageEntryIntoItemMasterTestAsync(string pdata, object userState) {
            if ((this.onBeginPackageEntryIntoItemMasterTestDelegate == null)) {
                this.onBeginPackageEntryIntoItemMasterTestDelegate = new BeginOperationDelegate(this.OnBeginPackageEntryIntoItemMasterTest);
            }
            if ((this.onEndPackageEntryIntoItemMasterTestDelegate == null)) {
                this.onEndPackageEntryIntoItemMasterTestDelegate = new EndOperationDelegate(this.OnEndPackageEntryIntoItemMasterTest);
            }
            if ((this.onPackageEntryIntoItemMasterTestCompletedDelegate == null)) {
                this.onPackageEntryIntoItemMasterTestCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnPackageEntryIntoItemMasterTestCompleted);
            }
            base.InvokeAsync(this.onBeginPackageEntryIntoItemMasterTestDelegate, new object[] {
                        pdata}, this.onEndPackageEntryIntoItemMasterTestDelegate, this.onPackageEntryIntoItemMasterTestCompletedDelegate, userState);
        }
        
        public bool PackageEntryIntoItemMaster(string pdata) {
            return base.Channel.PackageEntryIntoItemMaster(pdata);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginPackageEntryIntoItemMaster(string pdata, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginPackageEntryIntoItemMaster(pdata, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndPackageEntryIntoItemMaster(System.IAsyncResult result) {
            return base.Channel.EndPackageEntryIntoItemMaster(result);
        }
        
        private System.IAsyncResult OnBeginPackageEntryIntoItemMaster(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string pdata = ((string)(inValues[0]));
            return this.BeginPackageEntryIntoItemMaster(pdata, callback, asyncState);
        }
        
        private object[] OnEndPackageEntryIntoItemMaster(System.IAsyncResult result) {
            bool retVal = this.EndPackageEntryIntoItemMaster(result);
            return new object[] {
                    retVal};
        }
        
        private void OnPackageEntryIntoItemMasterCompleted(object state) {
            if ((this.PackageEntryIntoItemMasterCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.PackageEntryIntoItemMasterCompleted(this, new PackageEntryIntoItemMasterCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void PackageEntryIntoItemMasterAsync(string pdata) {
            this.PackageEntryIntoItemMasterAsync(pdata, null);
        }
        
        public void PackageEntryIntoItemMasterAsync(string pdata, object userState) {
            if ((this.onBeginPackageEntryIntoItemMasterDelegate == null)) {
                this.onBeginPackageEntryIntoItemMasterDelegate = new BeginOperationDelegate(this.OnBeginPackageEntryIntoItemMaster);
            }
            if ((this.onEndPackageEntryIntoItemMasterDelegate == null)) {
                this.onEndPackageEntryIntoItemMasterDelegate = new EndOperationDelegate(this.OnEndPackageEntryIntoItemMaster);
            }
            if ((this.onPackageEntryIntoItemMasterCompletedDelegate == null)) {
                this.onPackageEntryIntoItemMasterCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnPackageEntryIntoItemMasterCompleted);
            }
            base.InvokeAsync(this.onBeginPackageEntryIntoItemMasterDelegate, new object[] {
                        pdata}, this.onEndPackageEntryIntoItemMasterDelegate, this.onPackageEntryIntoItemMasterCompletedDelegate, userState);
        }
        
        public bool AuthenticateHardware(BaseLibrary.CloudService.ConfigurationData cd) {
            return base.Channel.AuthenticateHardware(cd);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAuthenticateHardware(BaseLibrary.CloudService.ConfigurationData cd, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAuthenticateHardware(cd, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndAuthenticateHardware(System.IAsyncResult result) {
            return base.Channel.EndAuthenticateHardware(result);
        }
        
        private System.IAsyncResult OnBeginAuthenticateHardware(object[] inValues, System.AsyncCallback callback, object asyncState) {
            BaseLibrary.CloudService.ConfigurationData cd = ((BaseLibrary.CloudService.ConfigurationData)(inValues[0]));
            return this.BeginAuthenticateHardware(cd, callback, asyncState);
        }
        
        private object[] OnEndAuthenticateHardware(System.IAsyncResult result) {
            bool retVal = this.EndAuthenticateHardware(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAuthenticateHardwareCompleted(object state) {
            if ((this.AuthenticateHardwareCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AuthenticateHardwareCompleted(this, new AuthenticateHardwareCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AuthenticateHardwareAsync(BaseLibrary.CloudService.ConfigurationData cd) {
            this.AuthenticateHardwareAsync(cd, null);
        }
        
        public void AuthenticateHardwareAsync(BaseLibrary.CloudService.ConfigurationData cd, object userState) {
            if ((this.onBeginAuthenticateHardwareDelegate == null)) {
                this.onBeginAuthenticateHardwareDelegate = new BeginOperationDelegate(this.OnBeginAuthenticateHardware);
            }
            if ((this.onEndAuthenticateHardwareDelegate == null)) {
                this.onEndAuthenticateHardwareDelegate = new EndOperationDelegate(this.OnEndAuthenticateHardware);
            }
            if ((this.onAuthenticateHardwareCompletedDelegate == null)) {
                this.onAuthenticateHardwareCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAuthenticateHardwareCompleted);
            }
            base.InvokeAsync(this.onBeginAuthenticateHardwareDelegate, new object[] {
                        cd}, this.onEndAuthenticateHardwareDelegate, this.onAuthenticateHardwareCompletedDelegate, userState);
        }
        
        public bool IsHardwareActivated(string o, string s) {
            return base.Channel.IsHardwareActivated(o, s);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginIsHardwareActivated(string o, string s, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginIsHardwareActivated(o, s, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndIsHardwareActivated(System.IAsyncResult result) {
            return base.Channel.EndIsHardwareActivated(result);
        }
        
        private System.IAsyncResult OnBeginIsHardwareActivated(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string o = ((string)(inValues[0]));
            string s = ((string)(inValues[1]));
            return this.BeginIsHardwareActivated(o, s, callback, asyncState);
        }
        
        private object[] OnEndIsHardwareActivated(System.IAsyncResult result) {
            bool retVal = this.EndIsHardwareActivated(result);
            return new object[] {
                    retVal};
        }
        
        private void OnIsHardwareActivatedCompleted(object state) {
            if ((this.IsHardwareActivatedCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.IsHardwareActivatedCompleted(this, new IsHardwareActivatedCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void IsHardwareActivatedAsync(string o, string s) {
            this.IsHardwareActivatedAsync(o, s, null);
        }
        
        public void IsHardwareActivatedAsync(string o, string s, object userState) {
            if ((this.onBeginIsHardwareActivatedDelegate == null)) {
                this.onBeginIsHardwareActivatedDelegate = new BeginOperationDelegate(this.OnBeginIsHardwareActivated);
            }
            if ((this.onEndIsHardwareActivatedDelegate == null)) {
                this.onEndIsHardwareActivatedDelegate = new EndOperationDelegate(this.OnEndIsHardwareActivated);
            }
            if ((this.onIsHardwareActivatedCompletedDelegate == null)) {
                this.onIsHardwareActivatedCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnIsHardwareActivatedCompleted);
            }
            base.InvokeAsync(this.onBeginIsHardwareActivatedDelegate, new object[] {
                        o,
                        s}, this.onEndIsHardwareActivatedDelegate, this.onIsHardwareActivatedCompletedDelegate, userState);
        }
        
        public string SOTCSetting(string sotcdata) {
            return base.Channel.SOTCSetting(sotcdata);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSOTCSetting(string sotcdata, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSOTCSetting(sotcdata, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndSOTCSetting(System.IAsyncResult result) {
            return base.Channel.EndSOTCSetting(result);
        }
        
        private System.IAsyncResult OnBeginSOTCSetting(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sotcdata = ((string)(inValues[0]));
            return this.BeginSOTCSetting(sotcdata, callback, asyncState);
        }
        
        private object[] OnEndSOTCSetting(System.IAsyncResult result) {
            string retVal = this.EndSOTCSetting(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSOTCSettingCompleted(object state) {
            if ((this.SOTCSettingCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SOTCSettingCompleted(this, new SOTCSettingCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SOTCSettingAsync(string sotcdata) {
            this.SOTCSettingAsync(sotcdata, null);
        }
        
        public void SOTCSettingAsync(string sotcdata, object userState) {
            if ((this.onBeginSOTCSettingDelegate == null)) {
                this.onBeginSOTCSettingDelegate = new BeginOperationDelegate(this.OnBeginSOTCSetting);
            }
            if ((this.onEndSOTCSettingDelegate == null)) {
                this.onEndSOTCSettingDelegate = new EndOperationDelegate(this.OnEndSOTCSetting);
            }
            if ((this.onSOTCSettingCompletedDelegate == null)) {
                this.onSOTCSettingCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSOTCSettingCompleted);
            }
            base.InvokeAsync(this.onBeginSOTCSettingDelegate, new object[] {
                        sotcdata}, this.onEndSOTCSettingDelegate, this.onSOTCSettingCompletedDelegate, userState);
        }
        
        public string SK(BaseLibrary.CloudService.ConfigurationData cd) {
            return base.Channel.SK(cd);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSK(BaseLibrary.CloudService.ConfigurationData cd, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSK(cd, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndSK(System.IAsyncResult result) {
            return base.Channel.EndSK(result);
        }
        
        private System.IAsyncResult OnBeginSK(object[] inValues, System.AsyncCallback callback, object asyncState) {
            BaseLibrary.CloudService.ConfigurationData cd = ((BaseLibrary.CloudService.ConfigurationData)(inValues[0]));
            return this.BeginSK(cd, callback, asyncState);
        }
        
        private object[] OnEndSK(System.IAsyncResult result) {
            string retVal = this.EndSK(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSKCompleted(object state) {
            if ((this.SKCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SKCompleted(this, new SKCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SKAsync(BaseLibrary.CloudService.ConfigurationData cd) {
            this.SKAsync(cd, null);
        }
        
        public void SKAsync(BaseLibrary.CloudService.ConfigurationData cd, object userState) {
            if ((this.onBeginSKDelegate == null)) {
                this.onBeginSKDelegate = new BeginOperationDelegate(this.OnBeginSK);
            }
            if ((this.onEndSKDelegate == null)) {
                this.onEndSKDelegate = new EndOperationDelegate(this.OnEndSK);
            }
            if ((this.onSKCompletedDelegate == null)) {
                this.onSKCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSKCompleted);
            }
            base.InvokeAsync(this.onBeginSKDelegate, new object[] {
                        cd}, this.onEndSKDelegate, this.onSKCompletedDelegate, userState);
        }
        
        public string CreadientialsWork(string sotcdata) {
            return base.Channel.CreadientialsWork(sotcdata);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCreadientialsWork(string sotcdata, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCreadientialsWork(sotcdata, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndCreadientialsWork(System.IAsyncResult result) {
            return base.Channel.EndCreadientialsWork(result);
        }
        
        private System.IAsyncResult OnBeginCreadientialsWork(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sotcdata = ((string)(inValues[0]));
            return this.BeginCreadientialsWork(sotcdata, callback, asyncState);
        }
        
        private object[] OnEndCreadientialsWork(System.IAsyncResult result) {
            string retVal = this.EndCreadientialsWork(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCreadientialsWorkCompleted(object state) {
            if ((this.CreadientialsWorkCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CreadientialsWorkCompleted(this, new CreadientialsWorkCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CreadientialsWorkAsync(string sotcdata) {
            this.CreadientialsWorkAsync(sotcdata, null);
        }
        
        public void CreadientialsWorkAsync(string sotcdata, object userState) {
            if ((this.onBeginCreadientialsWorkDelegate == null)) {
                this.onBeginCreadientialsWorkDelegate = new BeginOperationDelegate(this.OnBeginCreadientialsWork);
            }
            if ((this.onEndCreadientialsWorkDelegate == null)) {
                this.onEndCreadientialsWorkDelegate = new EndOperationDelegate(this.OnEndCreadientialsWork);
            }
            if ((this.onCreadientialsWorkCompletedDelegate == null)) {
                this.onCreadientialsWorkCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCreadientialsWorkCompleted);
            }
            base.InvokeAsync(this.onBeginCreadientialsWorkDelegate, new object[] {
                        sotcdata}, this.onEndCreadientialsWorkDelegate, this.onCreadientialsWorkCompletedDelegate, userState);
        }
        
        public string SavePrinterList(string sotcdata) {
            return base.Channel.SavePrinterList(sotcdata);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSavePrinterList(string sotcdata, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSavePrinterList(sotcdata, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndSavePrinterList(System.IAsyncResult result) {
            return base.Channel.EndSavePrinterList(result);
        }
        
        private System.IAsyncResult OnBeginSavePrinterList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sotcdata = ((string)(inValues[0]));
            return this.BeginSavePrinterList(sotcdata, callback, asyncState);
        }
        
        private object[] OnEndSavePrinterList(System.IAsyncResult result) {
            string retVal = this.EndSavePrinterList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSavePrinterListCompleted(object state) {
            if ((this.SavePrinterListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SavePrinterListCompleted(this, new SavePrinterListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SavePrinterListAsync(string sotcdata) {
            this.SavePrinterListAsync(sotcdata, null);
        }
        
        public void SavePrinterListAsync(string sotcdata, object userState) {
            if ((this.onBeginSavePrinterListDelegate == null)) {
                this.onBeginSavePrinterListDelegate = new BeginOperationDelegate(this.OnBeginSavePrinterList);
            }
            if ((this.onEndSavePrinterListDelegate == null)) {
                this.onEndSavePrinterListDelegate = new EndOperationDelegate(this.OnEndSavePrinterList);
            }
            if ((this.onSavePrinterListCompletedDelegate == null)) {
                this.onSavePrinterListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSavePrinterListCompleted);
            }
            base.InvokeAsync(this.onBeginSavePrinterListDelegate, new object[] {
                        sotcdata}, this.onEndSavePrinterListDelegate, this.onSavePrinterListCompletedDelegate, userState);
        }
        
        public string GetPrinterList(string sotcdata) {
            return base.Channel.GetPrinterList(sotcdata);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetPrinterList(string sotcdata, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPrinterList(sotcdata, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGetPrinterList(System.IAsyncResult result) {
            return base.Channel.EndGetPrinterList(result);
        }
        
        private System.IAsyncResult OnBeginGetPrinterList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sotcdata = ((string)(inValues[0]));
            return this.BeginGetPrinterList(sotcdata, callback, asyncState);
        }
        
        private object[] OnEndGetPrinterList(System.IAsyncResult result) {
            string retVal = this.EndGetPrinterList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPrinterListCompleted(object state) {
            if ((this.GetPrinterListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPrinterListCompleted(this, new GetPrinterListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPrinterListAsync(string sotcdata) {
            this.GetPrinterListAsync(sotcdata, null);
        }
        
        public void GetPrinterListAsync(string sotcdata, object userState) {
            if ((this.onBeginGetPrinterListDelegate == null)) {
                this.onBeginGetPrinterListDelegate = new BeginOperationDelegate(this.OnBeginGetPrinterList);
            }
            if ((this.onEndGetPrinterListDelegate == null)) {
                this.onEndGetPrinterListDelegate = new EndOperationDelegate(this.OnEndGetPrinterList);
            }
            if ((this.onGetPrinterListCompletedDelegate == null)) {
                this.onGetPrinterListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPrinterListCompleted);
            }
            base.InvokeAsync(this.onBeginGetPrinterListDelegate, new object[] {
                        sotcdata}, this.onEndGetPrinterListDelegate, this.onGetPrinterListCompletedDelegate, userState);
        }
        
        public string CheckUpdate(string sotcdata) {
            return base.Channel.CheckUpdate(sotcdata);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCheckUpdate(string sotcdata, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCheckUpdate(sotcdata, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndCheckUpdate(System.IAsyncResult result) {
            return base.Channel.EndCheckUpdate(result);
        }
        
        private System.IAsyncResult OnBeginCheckUpdate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sotcdata = ((string)(inValues[0]));
            return this.BeginCheckUpdate(sotcdata, callback, asyncState);
        }
        
        private object[] OnEndCheckUpdate(System.IAsyncResult result) {
            string retVal = this.EndCheckUpdate(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCheckUpdateCompleted(object state) {
            if ((this.CheckUpdateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CheckUpdateCompleted(this, new CheckUpdateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CheckUpdateAsync(string sotcdata) {
            this.CheckUpdateAsync(sotcdata, null);
        }
        
        public void CheckUpdateAsync(string sotcdata, object userState) {
            if ((this.onBeginCheckUpdateDelegate == null)) {
                this.onBeginCheckUpdateDelegate = new BeginOperationDelegate(this.OnBeginCheckUpdate);
            }
            if ((this.onEndCheckUpdateDelegate == null)) {
                this.onEndCheckUpdateDelegate = new EndOperationDelegate(this.OnEndCheckUpdate);
            }
            if ((this.onCheckUpdateCompletedDelegate == null)) {
                this.onCheckUpdateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCheckUpdateCompleted);
            }
            base.InvokeAsync(this.onBeginCheckUpdateDelegate, new object[] {
                        sotcdata}, this.onEndCheckUpdateDelegate, this.onCheckUpdateCompletedDelegate, userState);
        }
        
        public void GetUserUpdateTimeSettings(BaseLibrary.CloudService.ConfigurationData cd) {
            base.Channel.GetUserUpdateTimeSettings(cd);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetUserUpdateTimeSettings(BaseLibrary.CloudService.ConfigurationData cd, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetUserUpdateTimeSettings(cd, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndGetUserUpdateTimeSettings(System.IAsyncResult result) {
            base.Channel.EndGetUserUpdateTimeSettings(result);
        }
        
        private System.IAsyncResult OnBeginGetUserUpdateTimeSettings(object[] inValues, System.AsyncCallback callback, object asyncState) {
            BaseLibrary.CloudService.ConfigurationData cd = ((BaseLibrary.CloudService.ConfigurationData)(inValues[0]));
            return this.BeginGetUserUpdateTimeSettings(cd, callback, asyncState);
        }
        
        private object[] OnEndGetUserUpdateTimeSettings(System.IAsyncResult result) {
            this.EndGetUserUpdateTimeSettings(result);
            return null;
        }
        
        private void OnGetUserUpdateTimeSettingsCompleted(object state) {
            if ((this.GetUserUpdateTimeSettingsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetUserUpdateTimeSettingsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetUserUpdateTimeSettingsAsync(BaseLibrary.CloudService.ConfigurationData cd) {
            this.GetUserUpdateTimeSettingsAsync(cd, null);
        }
        
        public void GetUserUpdateTimeSettingsAsync(BaseLibrary.CloudService.ConfigurationData cd, object userState) {
            if ((this.onBeginGetUserUpdateTimeSettingsDelegate == null)) {
                this.onBeginGetUserUpdateTimeSettingsDelegate = new BeginOperationDelegate(this.OnBeginGetUserUpdateTimeSettings);
            }
            if ((this.onEndGetUserUpdateTimeSettingsDelegate == null)) {
                this.onEndGetUserUpdateTimeSettingsDelegate = new EndOperationDelegate(this.OnEndGetUserUpdateTimeSettings);
            }
            if ((this.onGetUserUpdateTimeSettingsCompletedDelegate == null)) {
                this.onGetUserUpdateTimeSettingsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetUserUpdateTimeSettingsCompleted);
            }
            base.InvokeAsync(this.onBeginGetUserUpdateTimeSettingsDelegate, new object[] {
                        cd}, this.onEndGetUserUpdateTimeSettingsDelegate, this.onGetUserUpdateTimeSettingsCompletedDelegate, userState);
        }
        
        public void GetUserLSSettings(BaseLibrary.CloudService.ConfigurationData cd) {
            base.Channel.GetUserLSSettings(cd);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetUserLSSettings(BaseLibrary.CloudService.ConfigurationData cd, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetUserLSSettings(cd, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndGetUserLSSettings(System.IAsyncResult result) {
            base.Channel.EndGetUserLSSettings(result);
        }
        
        private System.IAsyncResult OnBeginGetUserLSSettings(object[] inValues, System.AsyncCallback callback, object asyncState) {
            BaseLibrary.CloudService.ConfigurationData cd = ((BaseLibrary.CloudService.ConfigurationData)(inValues[0]));
            return this.BeginGetUserLSSettings(cd, callback, asyncState);
        }
        
        private object[] OnEndGetUserLSSettings(System.IAsyncResult result) {
            this.EndGetUserLSSettings(result);
            return null;
        }
        
        private void OnGetUserLSSettingsCompleted(object state) {
            if ((this.GetUserLSSettingsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetUserLSSettingsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetUserLSSettingsAsync(BaseLibrary.CloudService.ConfigurationData cd) {
            this.GetUserLSSettingsAsync(cd, null);
        }
        
        public void GetUserLSSettingsAsync(BaseLibrary.CloudService.ConfigurationData cd, object userState) {
            if ((this.onBeginGetUserLSSettingsDelegate == null)) {
                this.onBeginGetUserLSSettingsDelegate = new BeginOperationDelegate(this.OnBeginGetUserLSSettings);
            }
            if ((this.onEndGetUserLSSettingsDelegate == null)) {
                this.onEndGetUserLSSettingsDelegate = new EndOperationDelegate(this.OnEndGetUserLSSettings);
            }
            if ((this.onGetUserLSSettingsCompletedDelegate == null)) {
                this.onGetUserLSSettingsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetUserLSSettingsCompleted);
            }
            base.InvokeAsync(this.onBeginGetUserLSSettingsDelegate, new object[] {
                        cd}, this.onEndGetUserLSSettingsDelegate, this.onGetUserLSSettingsCompletedDelegate, userState);
        }
        
        public string MarkReady(string sotcdata) {
            return base.Channel.MarkReady(sotcdata);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginMarkReady(string sotcdata, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginMarkReady(sotcdata, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndMarkReady(System.IAsyncResult result) {
            return base.Channel.EndMarkReady(result);
        }
        
        private System.IAsyncResult OnBeginMarkReady(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sotcdata = ((string)(inValues[0]));
            return this.BeginMarkReady(sotcdata, callback, asyncState);
        }
        
        private object[] OnEndMarkReady(System.IAsyncResult result) {
            string retVal = this.EndMarkReady(result);
            return new object[] {
                    retVal};
        }
        
        private void OnMarkReadyCompleted(object state) {
            if ((this.MarkReadyCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.MarkReadyCompleted(this, new MarkReadyCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void MarkReadyAsync(string sotcdata) {
            this.MarkReadyAsync(sotcdata, null);
        }
        
        public void MarkReadyAsync(string sotcdata, object userState) {
            if ((this.onBeginMarkReadyDelegate == null)) {
                this.onBeginMarkReadyDelegate = new BeginOperationDelegate(this.OnBeginMarkReady);
            }
            if ((this.onEndMarkReadyDelegate == null)) {
                this.onEndMarkReadyDelegate = new EndOperationDelegate(this.OnEndMarkReady);
            }
            if ((this.onMarkReadyCompletedDelegate == null)) {
                this.onMarkReadyCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnMarkReadyCompleted);
            }
            base.InvokeAsync(this.onBeginMarkReadyDelegate, new object[] {
                        sotcdata}, this.onEndMarkReadyDelegate, this.onMarkReadyCompletedDelegate, userState);
        }
        
        public bool InsertUpdateConfig(BaseLibrary.CloudService.ConfigurationData cd) {
            return base.Channel.InsertUpdateConfig(cd);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginInsertUpdateConfig(BaseLibrary.CloudService.ConfigurationData cd, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertUpdateConfig(cd, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndInsertUpdateConfig(System.IAsyncResult result) {
            return base.Channel.EndInsertUpdateConfig(result);
        }
        
        private System.IAsyncResult OnBeginInsertUpdateConfig(object[] inValues, System.AsyncCallback callback, object asyncState) {
            BaseLibrary.CloudService.ConfigurationData cd = ((BaseLibrary.CloudService.ConfigurationData)(inValues[0]));
            return this.BeginInsertUpdateConfig(cd, callback, asyncState);
        }
        
        private object[] OnEndInsertUpdateConfig(System.IAsyncResult result) {
            bool retVal = this.EndInsertUpdateConfig(result);
            return new object[] {
                    retVal};
        }
        
        private void OnInsertUpdateConfigCompleted(object state) {
            if ((this.InsertUpdateConfigCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertUpdateConfigCompleted(this, new InsertUpdateConfigCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertUpdateConfigAsync(BaseLibrary.CloudService.ConfigurationData cd) {
            this.InsertUpdateConfigAsync(cd, null);
        }
        
        public void InsertUpdateConfigAsync(BaseLibrary.CloudService.ConfigurationData cd, object userState) {
            if ((this.onBeginInsertUpdateConfigDelegate == null)) {
                this.onBeginInsertUpdateConfigDelegate = new BeginOperationDelegate(this.OnBeginInsertUpdateConfig);
            }
            if ((this.onEndInsertUpdateConfigDelegate == null)) {
                this.onEndInsertUpdateConfigDelegate = new EndOperationDelegate(this.OnEndInsertUpdateConfig);
            }
            if ((this.onInsertUpdateConfigCompletedDelegate == null)) {
                this.onInsertUpdateConfigCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertUpdateConfigCompleted);
            }
            base.InvokeAsync(this.onBeginInsertUpdateConfigDelegate, new object[] {
                        cd}, this.onEndInsertUpdateConfigDelegate, this.onInsertUpdateConfigCompletedDelegate, userState);
        }
        
        public void EmailToUser(BaseLibrary.CloudService.ConfigurationData cd) {
            base.Channel.EmailToUser(cd);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginEmailToUser(BaseLibrary.CloudService.ConfigurationData cd, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginEmailToUser(cd, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndEmailToUser(System.IAsyncResult result) {
            base.Channel.EndEmailToUser(result);
        }
        
        private System.IAsyncResult OnBeginEmailToUser(object[] inValues, System.AsyncCallback callback, object asyncState) {
            BaseLibrary.CloudService.ConfigurationData cd = ((BaseLibrary.CloudService.ConfigurationData)(inValues[0]));
            return this.BeginEmailToUser(cd, callback, asyncState);
        }
        
        private object[] OnEndEmailToUser(System.IAsyncResult result) {
            this.EndEmailToUser(result);
            return null;
        }
        
        private void OnEmailToUserCompleted(object state) {
            if ((this.EmailToUserCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.EmailToUserCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void EmailToUserAsync(BaseLibrary.CloudService.ConfigurationData cd) {
            this.EmailToUserAsync(cd, null);
        }
        
        public void EmailToUserAsync(BaseLibrary.CloudService.ConfigurationData cd, object userState) {
            if ((this.onBeginEmailToUserDelegate == null)) {
                this.onBeginEmailToUserDelegate = new BeginOperationDelegate(this.OnBeginEmailToUser);
            }
            if ((this.onEndEmailToUserDelegate == null)) {
                this.onEndEmailToUserDelegate = new EndOperationDelegate(this.OnEndEmailToUser);
            }
            if ((this.onEmailToUserCompletedDelegate == null)) {
                this.onEmailToUserCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnEmailToUserCompleted);
            }
            base.InvokeAsync(this.onBeginEmailToUserDelegate, new object[] {
                        cd}, this.onEndEmailToUserDelegate, this.onEmailToUserCompletedDelegate, userState);
        }
        
        public void GetUserUpdateTimeSettingsDemo(string sotcdata) {
            base.Channel.GetUserUpdateTimeSettingsDemo(sotcdata);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetUserUpdateTimeSettingsDemo(string sotcdata, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetUserUpdateTimeSettingsDemo(sotcdata, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndGetUserUpdateTimeSettingsDemo(System.IAsyncResult result) {
            base.Channel.EndGetUserUpdateTimeSettingsDemo(result);
        }
        
        private System.IAsyncResult OnBeginGetUserUpdateTimeSettingsDemo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sotcdata = ((string)(inValues[0]));
            return this.BeginGetUserUpdateTimeSettingsDemo(sotcdata, callback, asyncState);
        }
        
        private object[] OnEndGetUserUpdateTimeSettingsDemo(System.IAsyncResult result) {
            this.EndGetUserUpdateTimeSettingsDemo(result);
            return null;
        }
        
        private void OnGetUserUpdateTimeSettingsDemoCompleted(object state) {
            if ((this.GetUserUpdateTimeSettingsDemoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetUserUpdateTimeSettingsDemoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetUserUpdateTimeSettingsDemoAsync(string sotcdata) {
            this.GetUserUpdateTimeSettingsDemoAsync(sotcdata, null);
        }
        
        public void GetUserUpdateTimeSettingsDemoAsync(string sotcdata, object userState) {
            if ((this.onBeginGetUserUpdateTimeSettingsDemoDelegate == null)) {
                this.onBeginGetUserUpdateTimeSettingsDemoDelegate = new BeginOperationDelegate(this.OnBeginGetUserUpdateTimeSettingsDemo);
            }
            if ((this.onEndGetUserUpdateTimeSettingsDemoDelegate == null)) {
                this.onEndGetUserUpdateTimeSettingsDemoDelegate = new EndOperationDelegate(this.OnEndGetUserUpdateTimeSettingsDemo);
            }
            if ((this.onGetUserUpdateTimeSettingsDemoCompletedDelegate == null)) {
                this.onGetUserUpdateTimeSettingsDemoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetUserUpdateTimeSettingsDemoCompleted);
            }
            base.InvokeAsync(this.onBeginGetUserUpdateTimeSettingsDemoDelegate, new object[] {
                        sotcdata}, this.onEndGetUserUpdateTimeSettingsDemoDelegate, this.onGetUserUpdateTimeSettingsDemoCompletedDelegate, userState);
        }
        
        public string GetHardwares(string hardwaredata) {
            return base.Channel.GetHardwares(hardwaredata);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetHardwares(string hardwaredata, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetHardwares(hardwaredata, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGetHardwares(System.IAsyncResult result) {
            return base.Channel.EndGetHardwares(result);
        }
        
        private System.IAsyncResult OnBeginGetHardwares(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string hardwaredata = ((string)(inValues[0]));
            return this.BeginGetHardwares(hardwaredata, callback, asyncState);
        }
        
        private object[] OnEndGetHardwares(System.IAsyncResult result) {
            string retVal = this.EndGetHardwares(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetHardwaresCompleted(object state) {
            if ((this.GetHardwaresCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetHardwaresCompleted(this, new GetHardwaresCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetHardwaresAsync(string hardwaredata) {
            this.GetHardwaresAsync(hardwaredata, null);
        }
        
        public void GetHardwaresAsync(string hardwaredata, object userState) {
            if ((this.onBeginGetHardwaresDelegate == null)) {
                this.onBeginGetHardwaresDelegate = new BeginOperationDelegate(this.OnBeginGetHardwares);
            }
            if ((this.onEndGetHardwaresDelegate == null)) {
                this.onEndGetHardwaresDelegate = new EndOperationDelegate(this.OnEndGetHardwares);
            }
            if ((this.onGetHardwaresCompletedDelegate == null)) {
                this.onGetHardwaresCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetHardwaresCompleted);
            }
            base.InvokeAsync(this.onBeginGetHardwaresDelegate, new object[] {
                        hardwaredata}, this.onEndGetHardwaresDelegate, this.onGetHardwaresCompletedDelegate, userState);
        }
        
        public string ActivateUpdateHardware(string hardwaredata) {
            return base.Channel.ActivateUpdateHardware(hardwaredata);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginActivateUpdateHardware(string hardwaredata, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginActivateUpdateHardware(hardwaredata, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndActivateUpdateHardware(System.IAsyncResult result) {
            return base.Channel.EndActivateUpdateHardware(result);
        }
        
        private System.IAsyncResult OnBeginActivateUpdateHardware(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string hardwaredata = ((string)(inValues[0]));
            return this.BeginActivateUpdateHardware(hardwaredata, callback, asyncState);
        }
        
        private object[] OnEndActivateUpdateHardware(System.IAsyncResult result) {
            string retVal = this.EndActivateUpdateHardware(result);
            return new object[] {
                    retVal};
        }
        
        private void OnActivateUpdateHardwareCompleted(object state) {
            if ((this.ActivateUpdateHardwareCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ActivateUpdateHardwareCompleted(this, new ActivateUpdateHardwareCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ActivateUpdateHardwareAsync(string hardwaredata) {
            this.ActivateUpdateHardwareAsync(hardwaredata, null);
        }
        
        public void ActivateUpdateHardwareAsync(string hardwaredata, object userState) {
            if ((this.onBeginActivateUpdateHardwareDelegate == null)) {
                this.onBeginActivateUpdateHardwareDelegate = new BeginOperationDelegate(this.OnBeginActivateUpdateHardware);
            }
            if ((this.onEndActivateUpdateHardwareDelegate == null)) {
                this.onEndActivateUpdateHardwareDelegate = new EndOperationDelegate(this.OnEndActivateUpdateHardware);
            }
            if ((this.onActivateUpdateHardwareCompletedDelegate == null)) {
                this.onActivateUpdateHardwareCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnActivateUpdateHardwareCompleted);
            }
            base.InvokeAsync(this.onBeginActivateUpdateHardwareDelegate, new object[] {
                        hardwaredata}, this.onEndActivateUpdateHardwareDelegate, this.onActivateUpdateHardwareCompletedDelegate, userState);
        }
        
        public string GetConsoles(string printerdata) {
            return base.Channel.GetConsoles(printerdata);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetConsoles(string printerdata, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetConsoles(printerdata, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGetConsoles(System.IAsyncResult result) {
            return base.Channel.EndGetConsoles(result);
        }
        
        private System.IAsyncResult OnBeginGetConsoles(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string printerdata = ((string)(inValues[0]));
            return this.BeginGetConsoles(printerdata, callback, asyncState);
        }
        
        private object[] OnEndGetConsoles(System.IAsyncResult result) {
            string retVal = this.EndGetConsoles(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetConsolesCompleted(object state) {
            if ((this.GetConsolesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetConsolesCompleted(this, new GetConsolesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetConsolesAsync(string printerdata) {
            this.GetConsolesAsync(printerdata, null);
        }
        
        public void GetConsolesAsync(string printerdata, object userState) {
            if ((this.onBeginGetConsolesDelegate == null)) {
                this.onBeginGetConsolesDelegate = new BeginOperationDelegate(this.OnBeginGetConsoles);
            }
            if ((this.onEndGetConsolesDelegate == null)) {
                this.onEndGetConsolesDelegate = new EndOperationDelegate(this.OnEndGetConsoles);
            }
            if ((this.onGetConsolesCompletedDelegate == null)) {
                this.onGetConsolesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetConsolesCompleted);
            }
            base.InvokeAsync(this.onBeginGetConsolesDelegate, new object[] {
                        printerdata}, this.onEndGetConsolesDelegate, this.onGetConsolesCompletedDelegate, userState);
        }
        
        public string GetModelBrandDriver(string printerdata) {
            return base.Channel.GetModelBrandDriver(printerdata);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetModelBrandDriver(string printerdata, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetModelBrandDriver(printerdata, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGetModelBrandDriver(System.IAsyncResult result) {
            return base.Channel.EndGetModelBrandDriver(result);
        }
        
        private System.IAsyncResult OnBeginGetModelBrandDriver(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string printerdata = ((string)(inValues[0]));
            return this.BeginGetModelBrandDriver(printerdata, callback, asyncState);
        }
        
        private object[] OnEndGetModelBrandDriver(System.IAsyncResult result) {
            string retVal = this.EndGetModelBrandDriver(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetModelBrandDriverCompleted(object state) {
            if ((this.GetModelBrandDriverCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetModelBrandDriverCompleted(this, new GetModelBrandDriverCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetModelBrandDriverAsync(string printerdata) {
            this.GetModelBrandDriverAsync(printerdata, null);
        }
        
        public void GetModelBrandDriverAsync(string printerdata, object userState) {
            if ((this.onBeginGetModelBrandDriverDelegate == null)) {
                this.onBeginGetModelBrandDriverDelegate = new BeginOperationDelegate(this.OnBeginGetModelBrandDriver);
            }
            if ((this.onEndGetModelBrandDriverDelegate == null)) {
                this.onEndGetModelBrandDriverDelegate = new EndOperationDelegate(this.OnEndGetModelBrandDriver);
            }
            if ((this.onGetModelBrandDriverCompletedDelegate == null)) {
                this.onGetModelBrandDriverCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetModelBrandDriverCompleted);
            }
            base.InvokeAsync(this.onBeginGetModelBrandDriverDelegate, new object[] {
                        printerdata}, this.onEndGetModelBrandDriverDelegate, this.onGetModelBrandDriverCompletedDelegate, userState);
        }
        
        public string GetSetPrinters(string printerdata) {
            return base.Channel.GetSetPrinters(printerdata);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetSetPrinters(string printerdata, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSetPrinters(printerdata, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGetSetPrinters(System.IAsyncResult result) {
            return base.Channel.EndGetSetPrinters(result);
        }
        
        private System.IAsyncResult OnBeginGetSetPrinters(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string printerdata = ((string)(inValues[0]));
            return this.BeginGetSetPrinters(printerdata, callback, asyncState);
        }
        
        private object[] OnEndGetSetPrinters(System.IAsyncResult result) {
            string retVal = this.EndGetSetPrinters(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetSetPrintersCompleted(object state) {
            if ((this.GetSetPrintersCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSetPrintersCompleted(this, new GetSetPrintersCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSetPrintersAsync(string printerdata) {
            this.GetSetPrintersAsync(printerdata, null);
        }
        
        public void GetSetPrintersAsync(string printerdata, object userState) {
            if ((this.onBeginGetSetPrintersDelegate == null)) {
                this.onBeginGetSetPrintersDelegate = new BeginOperationDelegate(this.OnBeginGetSetPrinters);
            }
            if ((this.onEndGetSetPrintersDelegate == null)) {
                this.onEndGetSetPrintersDelegate = new EndOperationDelegate(this.OnEndGetSetPrinters);
            }
            if ((this.onGetSetPrintersCompletedDelegate == null)) {
                this.onGetSetPrintersCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSetPrintersCompleted);
            }
            base.InvokeAsync(this.onBeginGetSetPrintersDelegate, new object[] {
                        printerdata}, this.onEndGetSetPrintersDelegate, this.onGetSetPrintersCompletedDelegate, userState);
        }
        
        public string GetPrinters(string printerdata) {
            return base.Channel.GetPrinters(printerdata);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetPrinters(string printerdata, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPrinters(printerdata, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGetPrinters(System.IAsyncResult result) {
            return base.Channel.EndGetPrinters(result);
        }
        
        private System.IAsyncResult OnBeginGetPrinters(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string printerdata = ((string)(inValues[0]));
            return this.BeginGetPrinters(printerdata, callback, asyncState);
        }
        
        private object[] OnEndGetPrinters(System.IAsyncResult result) {
            string retVal = this.EndGetPrinters(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPrintersCompleted(object state) {
            if ((this.GetPrintersCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPrintersCompleted(this, new GetPrintersCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPrintersAsync(string printerdata) {
            this.GetPrintersAsync(printerdata, null);
        }
        
        public void GetPrintersAsync(string printerdata, object userState) {
            if ((this.onBeginGetPrintersDelegate == null)) {
                this.onBeginGetPrintersDelegate = new BeginOperationDelegate(this.OnBeginGetPrinters);
            }
            if ((this.onEndGetPrintersDelegate == null)) {
                this.onEndGetPrintersDelegate = new EndOperationDelegate(this.OnEndGetPrinters);
            }
            if ((this.onGetPrintersCompletedDelegate == null)) {
                this.onGetPrintersCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPrintersCompleted);
            }
            base.InvokeAsync(this.onBeginGetPrintersDelegate, new object[] {
                        printerdata}, this.onEndGetPrintersDelegate, this.onGetPrintersCompletedDelegate, userState);
        }
        
        public string GetSetLocalServers(string localserverdata) {
            return base.Channel.GetSetLocalServers(localserverdata);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetSetLocalServers(string localserverdata, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSetLocalServers(localserverdata, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGetSetLocalServers(System.IAsyncResult result) {
            return base.Channel.EndGetSetLocalServers(result);
        }
        
        private System.IAsyncResult OnBeginGetSetLocalServers(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string localserverdata = ((string)(inValues[0]));
            return this.BeginGetSetLocalServers(localserverdata, callback, asyncState);
        }
        
        private object[] OnEndGetSetLocalServers(System.IAsyncResult result) {
            string retVal = this.EndGetSetLocalServers(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetSetLocalServersCompleted(object state) {
            if ((this.GetSetLocalServersCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSetLocalServersCompleted(this, new GetSetLocalServersCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSetLocalServersAsync(string localserverdata) {
            this.GetSetLocalServersAsync(localserverdata, null);
        }
        
        public void GetSetLocalServersAsync(string localserverdata, object userState) {
            if ((this.onBeginGetSetLocalServersDelegate == null)) {
                this.onBeginGetSetLocalServersDelegate = new BeginOperationDelegate(this.OnBeginGetSetLocalServers);
            }
            if ((this.onEndGetSetLocalServersDelegate == null)) {
                this.onEndGetSetLocalServersDelegate = new EndOperationDelegate(this.OnEndGetSetLocalServers);
            }
            if ((this.onGetSetLocalServersCompletedDelegate == null)) {
                this.onGetSetLocalServersCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSetLocalServersCompleted);
            }
            base.InvokeAsync(this.onBeginGetSetLocalServersDelegate, new object[] {
                        localserverdata}, this.onEndGetSetLocalServersDelegate, this.onGetSetLocalServersCompletedDelegate, userState);
        }
        
        public string GetSetUpdateTimeSettings(string consoledata) {
            return base.Channel.GetSetUpdateTimeSettings(consoledata);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetSetUpdateTimeSettings(string consoledata, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSetUpdateTimeSettings(consoledata, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGetSetUpdateTimeSettings(System.IAsyncResult result) {
            return base.Channel.EndGetSetUpdateTimeSettings(result);
        }
        
        private System.IAsyncResult OnBeginGetSetUpdateTimeSettings(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string consoledata = ((string)(inValues[0]));
            return this.BeginGetSetUpdateTimeSettings(consoledata, callback, asyncState);
        }
        
        private object[] OnEndGetSetUpdateTimeSettings(System.IAsyncResult result) {
            string retVal = this.EndGetSetUpdateTimeSettings(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetSetUpdateTimeSettingsCompleted(object state) {
            if ((this.GetSetUpdateTimeSettingsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSetUpdateTimeSettingsCompleted(this, new GetSetUpdateTimeSettingsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSetUpdateTimeSettingsAsync(string consoledata) {
            this.GetSetUpdateTimeSettingsAsync(consoledata, null);
        }
        
        public void GetSetUpdateTimeSettingsAsync(string consoledata, object userState) {
            if ((this.onBeginGetSetUpdateTimeSettingsDelegate == null)) {
                this.onBeginGetSetUpdateTimeSettingsDelegate = new BeginOperationDelegate(this.OnBeginGetSetUpdateTimeSettings);
            }
            if ((this.onEndGetSetUpdateTimeSettingsDelegate == null)) {
                this.onEndGetSetUpdateTimeSettingsDelegate = new EndOperationDelegate(this.OnEndGetSetUpdateTimeSettings);
            }
            if ((this.onGetSetUpdateTimeSettingsCompletedDelegate == null)) {
                this.onGetSetUpdateTimeSettingsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSetUpdateTimeSettingsCompleted);
            }
            base.InvokeAsync(this.onBeginGetSetUpdateTimeSettingsDelegate, new object[] {
                        consoledata}, this.onEndGetSetUpdateTimeSettingsDelegate, this.onGetSetUpdateTimeSettingsCompletedDelegate, userState);
        }
        
        public BaseLibrary.CloudService.Site[] GetSiteInfo(string accessKey) {
            return base.Channel.GetSiteInfo(accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetSiteInfo(string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSiteInfo(accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public BaseLibrary.CloudService.Site[] EndGetSiteInfo(System.IAsyncResult result) {
            return base.Channel.EndGetSiteInfo(result);
        }
        
        private System.IAsyncResult OnBeginGetSiteInfo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string accessKey = ((string)(inValues[0]));
            return this.BeginGetSiteInfo(accessKey, callback, asyncState);
        }
        
        private object[] OnEndGetSiteInfo(System.IAsyncResult result) {
            BaseLibrary.CloudService.Site[] retVal = this.EndGetSiteInfo(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetSiteInfoCompleted(object state) {
            if ((this.GetSiteInfoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSiteInfoCompleted(this, new GetSiteInfoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSiteInfoAsync(string accessKey) {
            this.GetSiteInfoAsync(accessKey, null);
        }
        
        public void GetSiteInfoAsync(string accessKey, object userState) {
            if ((this.onBeginGetSiteInfoDelegate == null)) {
                this.onBeginGetSiteInfoDelegate = new BeginOperationDelegate(this.OnBeginGetSiteInfo);
            }
            if ((this.onEndGetSiteInfoDelegate == null)) {
                this.onEndGetSiteInfoDelegate = new EndOperationDelegate(this.OnEndGetSiteInfo);
            }
            if ((this.onGetSiteInfoCompletedDelegate == null)) {
                this.onGetSiteInfoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSiteInfoCompleted);
            }
            base.InvokeAsync(this.onBeginGetSiteInfoDelegate, new object[] {
                        accessKey}, this.onEndGetSiteInfoDelegate, this.onGetSiteInfoCompletedDelegate, userState);
        }
        
        public BaseLibrary.CloudService.SiteZone[] GetSiteZoneInfo(string accessKey, int SiteID) {
            return base.Channel.GetSiteZoneInfo(accessKey, SiteID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetSiteZoneInfo(string accessKey, int SiteID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSiteZoneInfo(accessKey, SiteID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public BaseLibrary.CloudService.SiteZone[] EndGetSiteZoneInfo(System.IAsyncResult result) {
            return base.Channel.EndGetSiteZoneInfo(result);
        }
        
        private System.IAsyncResult OnBeginGetSiteZoneInfo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string accessKey = ((string)(inValues[0]));
            int SiteID = ((int)(inValues[1]));
            return this.BeginGetSiteZoneInfo(accessKey, SiteID, callback, asyncState);
        }
        
        private object[] OnEndGetSiteZoneInfo(System.IAsyncResult result) {
            BaseLibrary.CloudService.SiteZone[] retVal = this.EndGetSiteZoneInfo(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetSiteZoneInfoCompleted(object state) {
            if ((this.GetSiteZoneInfoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSiteZoneInfoCompleted(this, new GetSiteZoneInfoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSiteZoneInfoAsync(string accessKey, int SiteID) {
            this.GetSiteZoneInfoAsync(accessKey, SiteID, null);
        }
        
        public void GetSiteZoneInfoAsync(string accessKey, int SiteID, object userState) {
            if ((this.onBeginGetSiteZoneInfoDelegate == null)) {
                this.onBeginGetSiteZoneInfoDelegate = new BeginOperationDelegate(this.OnBeginGetSiteZoneInfo);
            }
            if ((this.onEndGetSiteZoneInfoDelegate == null)) {
                this.onEndGetSiteZoneInfoDelegate = new EndOperationDelegate(this.OnEndGetSiteZoneInfo);
            }
            if ((this.onGetSiteZoneInfoCompletedDelegate == null)) {
                this.onGetSiteZoneInfoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSiteZoneInfoCompleted);
            }
            base.InvokeAsync(this.onBeginGetSiteZoneInfoDelegate, new object[] {
                        accessKey,
                        SiteID}, this.onEndGetSiteZoneInfoDelegate, this.onGetSiteZoneInfoCompletedDelegate, userState);
        }
        
        public BaseLibrary.CloudService.SiteProduct[] GetSiteProductInfo(string accessKey, int SiteID) {
            return base.Channel.GetSiteProductInfo(accessKey, SiteID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetSiteProductInfo(string accessKey, int SiteID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSiteProductInfo(accessKey, SiteID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public BaseLibrary.CloudService.SiteProduct[] EndGetSiteProductInfo(System.IAsyncResult result) {
            return base.Channel.EndGetSiteProductInfo(result);
        }
        
        private System.IAsyncResult OnBeginGetSiteProductInfo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string accessKey = ((string)(inValues[0]));
            int SiteID = ((int)(inValues[1]));
            return this.BeginGetSiteProductInfo(accessKey, SiteID, callback, asyncState);
        }
        
        private object[] OnEndGetSiteProductInfo(System.IAsyncResult result) {
            BaseLibrary.CloudService.SiteProduct[] retVal = this.EndGetSiteProductInfo(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetSiteProductInfoCompleted(object state) {
            if ((this.GetSiteProductInfoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSiteProductInfoCompleted(this, new GetSiteProductInfoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSiteProductInfoAsync(string accessKey, int SiteID) {
            this.GetSiteProductInfoAsync(accessKey, SiteID, null);
        }
        
        public void GetSiteProductInfoAsync(string accessKey, int SiteID, object userState) {
            if ((this.onBeginGetSiteProductInfoDelegate == null)) {
                this.onBeginGetSiteProductInfoDelegate = new BeginOperationDelegate(this.OnBeginGetSiteProductInfo);
            }
            if ((this.onEndGetSiteProductInfoDelegate == null)) {
                this.onEndGetSiteProductInfoDelegate = new EndOperationDelegate(this.OnEndGetSiteProductInfo);
            }
            if ((this.onGetSiteProductInfoCompletedDelegate == null)) {
                this.onGetSiteProductInfoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSiteProductInfoCompleted);
            }
            base.InvokeAsync(this.onBeginGetSiteProductInfoDelegate, new object[] {
                        accessKey,
                        SiteID}, this.onEndGetSiteProductInfoDelegate, this.onGetSiteProductInfoCompletedDelegate, userState);
        }
        
        public string Hello(string abc) {
            return base.Channel.Hello(abc);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginHello(string abc, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginHello(abc, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndHello(System.IAsyncResult result) {
            return base.Channel.EndHello(result);
        }
        
        private System.IAsyncResult OnBeginHello(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string abc = ((string)(inValues[0]));
            return this.BeginHello(abc, callback, asyncState);
        }
        
        private object[] OnEndHello(System.IAsyncResult result) {
            string retVal = this.EndHello(result);
            return new object[] {
                    retVal};
        }
        
        private void OnHelloCompleted(object state) {
            if ((this.HelloCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.HelloCompleted(this, new HelloCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void HelloAsync(string abc) {
            this.HelloAsync(abc, null);
        }
        
        public void HelloAsync(string abc, object userState) {
            if ((this.onBeginHelloDelegate == null)) {
                this.onBeginHelloDelegate = new BeginOperationDelegate(this.OnBeginHello);
            }
            if ((this.onEndHelloDelegate == null)) {
                this.onEndHelloDelegate = new EndOperationDelegate(this.OnEndHello);
            }
            if ((this.onHelloCompletedDelegate == null)) {
                this.onHelloCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnHelloCompleted);
            }
            base.InvokeAsync(this.onBeginHelloDelegate, new object[] {
                        abc}, this.onEndHelloDelegate, this.onHelloCompletedDelegate, userState);
        }
        
        public string SaveCustomerTenentInfoM1(string domainName, string tenentName, string orgName, string adminUserName, int currency_ID, int country_ID, string city, int regionID, int AD_User_ID, int CS_ZoneMasterServer_ID, string ipaddress, string accessKey) {
            return base.Channel.SaveCustomerTenentInfoM1(domainName, tenentName, orgName, adminUserName, currency_ID, country_ID, city, regionID, AD_User_ID, CS_ZoneMasterServer_ID, ipaddress, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSaveCustomerTenentInfoM1(string domainName, string tenentName, string orgName, string adminUserName, int currency_ID, int country_ID, string city, int regionID, int AD_User_ID, int CS_ZoneMasterServer_ID, string ipaddress, string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSaveCustomerTenentInfoM1(domainName, tenentName, orgName, adminUserName, currency_ID, country_ID, city, regionID, AD_User_ID, CS_ZoneMasterServer_ID, ipaddress, accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndSaveCustomerTenentInfoM1(System.IAsyncResult result) {
            return base.Channel.EndSaveCustomerTenentInfoM1(result);
        }
        
        private System.IAsyncResult OnBeginSaveCustomerTenentInfoM1(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string domainName = ((string)(inValues[0]));
            string tenentName = ((string)(inValues[1]));
            string orgName = ((string)(inValues[2]));
            string adminUserName = ((string)(inValues[3]));
            int currency_ID = ((int)(inValues[4]));
            int country_ID = ((int)(inValues[5]));
            string city = ((string)(inValues[6]));
            int regionID = ((int)(inValues[7]));
            int AD_User_ID = ((int)(inValues[8]));
            int CS_ZoneMasterServer_ID = ((int)(inValues[9]));
            string ipaddress = ((string)(inValues[10]));
            string accessKey = ((string)(inValues[11]));
            return this.BeginSaveCustomerTenentInfoM1(domainName, tenentName, orgName, adminUserName, currency_ID, country_ID, city, regionID, AD_User_ID, CS_ZoneMasterServer_ID, ipaddress, accessKey, callback, asyncState);
        }
        
        private object[] OnEndSaveCustomerTenentInfoM1(System.IAsyncResult result) {
            string retVal = this.EndSaveCustomerTenentInfoM1(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSaveCustomerTenentInfoM1Completed(object state) {
            if ((this.SaveCustomerTenentInfoM1Completed != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaveCustomerTenentInfoM1Completed(this, new SaveCustomerTenentInfoM1CompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SaveCustomerTenentInfoM1Async(string domainName, string tenentName, string orgName, string adminUserName, int currency_ID, int country_ID, string city, int regionID, int AD_User_ID, int CS_ZoneMasterServer_ID, string ipaddress, string accessKey) {
            this.SaveCustomerTenentInfoM1Async(domainName, tenentName, orgName, adminUserName, currency_ID, country_ID, city, regionID, AD_User_ID, CS_ZoneMasterServer_ID, ipaddress, accessKey, null);
        }
        
        public void SaveCustomerTenentInfoM1Async(string domainName, string tenentName, string orgName, string adminUserName, int currency_ID, int country_ID, string city, int regionID, int AD_User_ID, int CS_ZoneMasterServer_ID, string ipaddress, string accessKey, object userState) {
            if ((this.onBeginSaveCustomerTenentInfoM1Delegate == null)) {
                this.onBeginSaveCustomerTenentInfoM1Delegate = new BeginOperationDelegate(this.OnBeginSaveCustomerTenentInfoM1);
            }
            if ((this.onEndSaveCustomerTenentInfoM1Delegate == null)) {
                this.onEndSaveCustomerTenentInfoM1Delegate = new EndOperationDelegate(this.OnEndSaveCustomerTenentInfoM1);
            }
            if ((this.onSaveCustomerTenentInfoM1CompletedDelegate == null)) {
                this.onSaveCustomerTenentInfoM1CompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveCustomerTenentInfoM1Completed);
            }
            base.InvokeAsync(this.onBeginSaveCustomerTenentInfoM1Delegate, new object[] {
                        domainName,
                        tenentName,
                        orgName,
                        adminUserName,
                        currency_ID,
                        country_ID,
                        city,
                        regionID,
                        AD_User_ID,
                        CS_ZoneMasterServer_ID,
                        ipaddress,
                        accessKey}, this.onEndSaveCustomerTenentInfoM1Delegate, this.onSaveCustomerTenentInfoM1CompletedDelegate, userState);
        }
        
        public string SaveCustomerTenentInfoM1fromMobile(string domainName, string tenentName, string orgName, string adminUserName, int currency_ID, int country_ID, string city, int regionID, int AD_User_ID, int CS_ZoneMasterServer_ID, string ipaddress, string accessKey) {
            return base.Channel.SaveCustomerTenentInfoM1fromMobile(domainName, tenentName, orgName, adminUserName, currency_ID, country_ID, city, regionID, AD_User_ID, CS_ZoneMasterServer_ID, ipaddress, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSaveCustomerTenentInfoM1fromMobile(string domainName, string tenentName, string orgName, string adminUserName, int currency_ID, int country_ID, string city, int regionID, int AD_User_ID, int CS_ZoneMasterServer_ID, string ipaddress, string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSaveCustomerTenentInfoM1fromMobile(domainName, tenentName, orgName, adminUserName, currency_ID, country_ID, city, regionID, AD_User_ID, CS_ZoneMasterServer_ID, ipaddress, accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndSaveCustomerTenentInfoM1fromMobile(System.IAsyncResult result) {
            return base.Channel.EndSaveCustomerTenentInfoM1fromMobile(result);
        }
        
        private System.IAsyncResult OnBeginSaveCustomerTenentInfoM1fromMobile(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string domainName = ((string)(inValues[0]));
            string tenentName = ((string)(inValues[1]));
            string orgName = ((string)(inValues[2]));
            string adminUserName = ((string)(inValues[3]));
            int currency_ID = ((int)(inValues[4]));
            int country_ID = ((int)(inValues[5]));
            string city = ((string)(inValues[6]));
            int regionID = ((int)(inValues[7]));
            int AD_User_ID = ((int)(inValues[8]));
            int CS_ZoneMasterServer_ID = ((int)(inValues[9]));
            string ipaddress = ((string)(inValues[10]));
            string accessKey = ((string)(inValues[11]));
            return this.BeginSaveCustomerTenentInfoM1fromMobile(domainName, tenentName, orgName, adminUserName, currency_ID, country_ID, city, regionID, AD_User_ID, CS_ZoneMasterServer_ID, ipaddress, accessKey, callback, asyncState);
        }
        
        private object[] OnEndSaveCustomerTenentInfoM1fromMobile(System.IAsyncResult result) {
            string retVal = this.EndSaveCustomerTenentInfoM1fromMobile(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSaveCustomerTenentInfoM1fromMobileCompleted(object state) {
            if ((this.SaveCustomerTenentInfoM1fromMobileCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaveCustomerTenentInfoM1fromMobileCompleted(this, new SaveCustomerTenentInfoM1fromMobileCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SaveCustomerTenentInfoM1fromMobileAsync(string domainName, string tenentName, string orgName, string adminUserName, int currency_ID, int country_ID, string city, int regionID, int AD_User_ID, int CS_ZoneMasterServer_ID, string ipaddress, string accessKey) {
            this.SaveCustomerTenentInfoM1fromMobileAsync(domainName, tenentName, orgName, adminUserName, currency_ID, country_ID, city, regionID, AD_User_ID, CS_ZoneMasterServer_ID, ipaddress, accessKey, null);
        }
        
        public void SaveCustomerTenentInfoM1fromMobileAsync(string domainName, string tenentName, string orgName, string adminUserName, int currency_ID, int country_ID, string city, int regionID, int AD_User_ID, int CS_ZoneMasterServer_ID, string ipaddress, string accessKey, object userState) {
            if ((this.onBeginSaveCustomerTenentInfoM1fromMobileDelegate == null)) {
                this.onBeginSaveCustomerTenentInfoM1fromMobileDelegate = new BeginOperationDelegate(this.OnBeginSaveCustomerTenentInfoM1fromMobile);
            }
            if ((this.onEndSaveCustomerTenentInfoM1fromMobileDelegate == null)) {
                this.onEndSaveCustomerTenentInfoM1fromMobileDelegate = new EndOperationDelegate(this.OnEndSaveCustomerTenentInfoM1fromMobile);
            }
            if ((this.onSaveCustomerTenentInfoM1fromMobileCompletedDelegate == null)) {
                this.onSaveCustomerTenentInfoM1fromMobileCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveCustomerTenentInfoM1fromMobileCompleted);
            }
            base.InvokeAsync(this.onBeginSaveCustomerTenentInfoM1fromMobileDelegate, new object[] {
                        domainName,
                        tenentName,
                        orgName,
                        adminUserName,
                        currency_ID,
                        country_ID,
                        city,
                        regionID,
                        AD_User_ID,
                        CS_ZoneMasterServer_ID,
                        ipaddress,
                        accessKey}, this.onEndSaveCustomerTenentInfoM1fromMobileDelegate, this.onSaveCustomerTenentInfoM1fromMobileCompletedDelegate, userState);
        }
        
        public string SaveCustomerTenentInfo(string tenentName, string orgName, string adminUserName, int currency_ID, int country_ID, string city, int regionID, int AD_User_ID, int CS_ZoneMasterServer_ID, string ipaddress, string accessKey) {
            return base.Channel.SaveCustomerTenentInfo(tenentName, orgName, adminUserName, currency_ID, country_ID, city, regionID, AD_User_ID, CS_ZoneMasterServer_ID, ipaddress, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSaveCustomerTenentInfo(string tenentName, string orgName, string adminUserName, int currency_ID, int country_ID, string city, int regionID, int AD_User_ID, int CS_ZoneMasterServer_ID, string ipaddress, string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSaveCustomerTenentInfo(tenentName, orgName, adminUserName, currency_ID, country_ID, city, regionID, AD_User_ID, CS_ZoneMasterServer_ID, ipaddress, accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndSaveCustomerTenentInfo(System.IAsyncResult result) {
            return base.Channel.EndSaveCustomerTenentInfo(result);
        }
        
        private System.IAsyncResult OnBeginSaveCustomerTenentInfo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string tenentName = ((string)(inValues[0]));
            string orgName = ((string)(inValues[1]));
            string adminUserName = ((string)(inValues[2]));
            int currency_ID = ((int)(inValues[3]));
            int country_ID = ((int)(inValues[4]));
            string city = ((string)(inValues[5]));
            int regionID = ((int)(inValues[6]));
            int AD_User_ID = ((int)(inValues[7]));
            int CS_ZoneMasterServer_ID = ((int)(inValues[8]));
            string ipaddress = ((string)(inValues[9]));
            string accessKey = ((string)(inValues[10]));
            return this.BeginSaveCustomerTenentInfo(tenentName, orgName, adminUserName, currency_ID, country_ID, city, regionID, AD_User_ID, CS_ZoneMasterServer_ID, ipaddress, accessKey, callback, asyncState);
        }
        
        private object[] OnEndSaveCustomerTenentInfo(System.IAsyncResult result) {
            string retVal = this.EndSaveCustomerTenentInfo(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSaveCustomerTenentInfoCompleted(object state) {
            if ((this.SaveCustomerTenentInfoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaveCustomerTenentInfoCompleted(this, new SaveCustomerTenentInfoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SaveCustomerTenentInfoAsync(string tenentName, string orgName, string adminUserName, int currency_ID, int country_ID, string city, int regionID, int AD_User_ID, int CS_ZoneMasterServer_ID, string ipaddress, string accessKey) {
            this.SaveCustomerTenentInfoAsync(tenentName, orgName, adminUserName, currency_ID, country_ID, city, regionID, AD_User_ID, CS_ZoneMasterServer_ID, ipaddress, accessKey, null);
        }
        
        public void SaveCustomerTenentInfoAsync(string tenentName, string orgName, string adminUserName, int currency_ID, int country_ID, string city, int regionID, int AD_User_ID, int CS_ZoneMasterServer_ID, string ipaddress, string accessKey, object userState) {
            if ((this.onBeginSaveCustomerTenentInfoDelegate == null)) {
                this.onBeginSaveCustomerTenentInfoDelegate = new BeginOperationDelegate(this.OnBeginSaveCustomerTenentInfo);
            }
            if ((this.onEndSaveCustomerTenentInfoDelegate == null)) {
                this.onEndSaveCustomerTenentInfoDelegate = new EndOperationDelegate(this.OnEndSaveCustomerTenentInfo);
            }
            if ((this.onSaveCustomerTenentInfoCompletedDelegate == null)) {
                this.onSaveCustomerTenentInfoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveCustomerTenentInfoCompleted);
            }
            base.InvokeAsync(this.onBeginSaveCustomerTenentInfoDelegate, new object[] {
                        tenentName,
                        orgName,
                        adminUserName,
                        currency_ID,
                        country_ID,
                        city,
                        regionID,
                        AD_User_ID,
                        CS_ZoneMasterServer_ID,
                        ipaddress,
                        accessKey}, this.onEndSaveCustomerTenentInfoDelegate, this.onSaveCustomerTenentInfoCompletedDelegate, userState);
        }
        
        public string IsDomainExist(string domainName, string accessKey) {
            return base.Channel.IsDomainExist(domainName, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginIsDomainExist(string domainName, string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginIsDomainExist(domainName, accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndIsDomainExist(System.IAsyncResult result) {
            return base.Channel.EndIsDomainExist(result);
        }
        
        private System.IAsyncResult OnBeginIsDomainExist(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string domainName = ((string)(inValues[0]));
            string accessKey = ((string)(inValues[1]));
            return this.BeginIsDomainExist(domainName, accessKey, callback, asyncState);
        }
        
        private object[] OnEndIsDomainExist(System.IAsyncResult result) {
            string retVal = this.EndIsDomainExist(result);
            return new object[] {
                    retVal};
        }
        
        private void OnIsDomainExistCompleted(object state) {
            if ((this.IsDomainExistCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.IsDomainExistCompleted(this, new IsDomainExistCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void IsDomainExistAsync(string domainName, string accessKey) {
            this.IsDomainExistAsync(domainName, accessKey, null);
        }
        
        public void IsDomainExistAsync(string domainName, string accessKey, object userState) {
            if ((this.onBeginIsDomainExistDelegate == null)) {
                this.onBeginIsDomainExistDelegate = new BeginOperationDelegate(this.OnBeginIsDomainExist);
            }
            if ((this.onEndIsDomainExistDelegate == null)) {
                this.onEndIsDomainExistDelegate = new EndOperationDelegate(this.OnEndIsDomainExist);
            }
            if ((this.onIsDomainExistCompletedDelegate == null)) {
                this.onIsDomainExistCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnIsDomainExistCompleted);
            }
            base.InvokeAsync(this.onBeginIsDomainExistDelegate, new object[] {
                        domainName,
                        accessKey}, this.onEndIsDomainExistDelegate, this.onIsDomainExistCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BaseLibrary.CloudService.RegisterInfoFromModuleResponse BaseLibrary.CloudService.ServiceSoap.RegisterInfoFromModule(BaseLibrary.CloudService.RegisterInfoFromModuleRequest request) {
            return base.Channel.RegisterInfoFromModule(request);
        }
        
        public string RegisterInfoFromModule(
                    string userName, 
                    string pwd, 
                    string companyName, 
                    string fullName, 
                    string mobile, 
                    string phone, 
                    string emailid, 
                    string address, 
                    int countryid, 
                    int regionid, 
                    string city, 
                    int productID, 
                    string productName, 
                    string cardType, 
                    string cardNumber, 
                    string csvNumber, 
                    string cardName, 
                    int expiryDay, 
                    int expiryMonth, 
                    int expiryYear, 
                    string billingAddress, 
                    string billingCity, 
                    string billingZip, 
                    int billingCountryID, 
                    string domainUserID, 
                    string domainUserLink, 
                    string domainName, 
                    string gender, 
                    int birthDay, 
                    int birthMonth, 
                    int birthYear, 
                    string ipAddress, 
                    System.Nullable<int> Campaign_ID, 
                    string accessKey) {
            BaseLibrary.CloudService.RegisterInfoFromModuleRequest inValue = new BaseLibrary.CloudService.RegisterInfoFromModuleRequest();
            inValue.userName = userName;
            inValue.pwd = pwd;
            inValue.companyName = companyName;
            inValue.fullName = fullName;
            inValue.mobile = mobile;
            inValue.phone = phone;
            inValue.emailid = emailid;
            inValue.address = address;
            inValue.countryid = countryid;
            inValue.regionid = regionid;
            inValue.city = city;
            inValue.productID = productID;
            inValue.productName = productName;
            inValue.cardType = cardType;
            inValue.cardNumber = cardNumber;
            inValue.csvNumber = csvNumber;
            inValue.cardName = cardName;
            inValue.expiryDay = expiryDay;
            inValue.expiryMonth = expiryMonth;
            inValue.expiryYear = expiryYear;
            inValue.billingAddress = billingAddress;
            inValue.billingCity = billingCity;
            inValue.billingZip = billingZip;
            inValue.billingCountryID = billingCountryID;
            inValue.domainUserID = domainUserID;
            inValue.domainUserLink = domainUserLink;
            inValue.domainName = domainName;
            inValue.gender = gender;
            inValue.birthDay = birthDay;
            inValue.birthMonth = birthMonth;
            inValue.birthYear = birthYear;
            inValue.ipAddress = ipAddress;
            inValue.Campaign_ID = Campaign_ID;
            inValue.accessKey = accessKey;
            BaseLibrary.CloudService.RegisterInfoFromModuleResponse retVal = ((BaseLibrary.CloudService.ServiceSoap)(this)).RegisterInfoFromModule(inValue);
            return retVal.RegisterInfoFromModuleResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult BaseLibrary.CloudService.ServiceSoap.BeginRegisterInfoFromModule(BaseLibrary.CloudService.RegisterInfoFromModuleRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRegisterInfoFromModule(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginRegisterInfoFromModule(
                    string userName, 
                    string pwd, 
                    string companyName, 
                    string fullName, 
                    string mobile, 
                    string phone, 
                    string emailid, 
                    string address, 
                    int countryid, 
                    int regionid, 
                    string city, 
                    int productID, 
                    string productName, 
                    string cardType, 
                    string cardNumber, 
                    string csvNumber, 
                    string cardName, 
                    int expiryDay, 
                    int expiryMonth, 
                    int expiryYear, 
                    string billingAddress, 
                    string billingCity, 
                    string billingZip, 
                    int billingCountryID, 
                    string domainUserID, 
                    string domainUserLink, 
                    string domainName, 
                    string gender, 
                    int birthDay, 
                    int birthMonth, 
                    int birthYear, 
                    string ipAddress, 
                    System.Nullable<int> Campaign_ID, 
                    string accessKey, 
                    System.AsyncCallback callback, 
                    object asyncState) {
            BaseLibrary.CloudService.RegisterInfoFromModuleRequest inValue = new BaseLibrary.CloudService.RegisterInfoFromModuleRequest();
            inValue.userName = userName;
            inValue.pwd = pwd;
            inValue.companyName = companyName;
            inValue.fullName = fullName;
            inValue.mobile = mobile;
            inValue.phone = phone;
            inValue.emailid = emailid;
            inValue.address = address;
            inValue.countryid = countryid;
            inValue.regionid = regionid;
            inValue.city = city;
            inValue.productID = productID;
            inValue.productName = productName;
            inValue.cardType = cardType;
            inValue.cardNumber = cardNumber;
            inValue.csvNumber = csvNumber;
            inValue.cardName = cardName;
            inValue.expiryDay = expiryDay;
            inValue.expiryMonth = expiryMonth;
            inValue.expiryYear = expiryYear;
            inValue.billingAddress = billingAddress;
            inValue.billingCity = billingCity;
            inValue.billingZip = billingZip;
            inValue.billingCountryID = billingCountryID;
            inValue.domainUserID = domainUserID;
            inValue.domainUserLink = domainUserLink;
            inValue.domainName = domainName;
            inValue.gender = gender;
            inValue.birthDay = birthDay;
            inValue.birthMonth = birthMonth;
            inValue.birthYear = birthYear;
            inValue.ipAddress = ipAddress;
            inValue.Campaign_ID = Campaign_ID;
            inValue.accessKey = accessKey;
            return ((BaseLibrary.CloudService.ServiceSoap)(this)).BeginRegisterInfoFromModule(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BaseLibrary.CloudService.RegisterInfoFromModuleResponse BaseLibrary.CloudService.ServiceSoap.EndRegisterInfoFromModule(System.IAsyncResult result) {
            return base.Channel.EndRegisterInfoFromModule(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndRegisterInfoFromModule(System.IAsyncResult result) {
            BaseLibrary.CloudService.RegisterInfoFromModuleResponse retVal = ((BaseLibrary.CloudService.ServiceSoap)(this)).EndRegisterInfoFromModule(result);
            return retVal.RegisterInfoFromModuleResult;
        }
        
        private System.IAsyncResult OnBeginRegisterInfoFromModule(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userName = ((string)(inValues[0]));
            string pwd = ((string)(inValues[1]));
            string companyName = ((string)(inValues[2]));
            string fullName = ((string)(inValues[3]));
            string mobile = ((string)(inValues[4]));
            string phone = ((string)(inValues[5]));
            string emailid = ((string)(inValues[6]));
            string address = ((string)(inValues[7]));
            int countryid = ((int)(inValues[8]));
            int regionid = ((int)(inValues[9]));
            string city = ((string)(inValues[10]));
            int productID = ((int)(inValues[11]));
            string productName = ((string)(inValues[12]));
            string cardType = ((string)(inValues[13]));
            string cardNumber = ((string)(inValues[14]));
            string csvNumber = ((string)(inValues[15]));
            string cardName = ((string)(inValues[16]));
            int expiryDay = ((int)(inValues[17]));
            int expiryMonth = ((int)(inValues[18]));
            int expiryYear = ((int)(inValues[19]));
            string billingAddress = ((string)(inValues[20]));
            string billingCity = ((string)(inValues[21]));
            string billingZip = ((string)(inValues[22]));
            int billingCountryID = ((int)(inValues[23]));
            string domainUserID = ((string)(inValues[24]));
            string domainUserLink = ((string)(inValues[25]));
            string domainName = ((string)(inValues[26]));
            string gender = ((string)(inValues[27]));
            int birthDay = ((int)(inValues[28]));
            int birthMonth = ((int)(inValues[29]));
            int birthYear = ((int)(inValues[30]));
            string ipAddress = ((string)(inValues[31]));
            System.Nullable<int> Campaign_ID = ((System.Nullable<int>)(inValues[32]));
            string accessKey = ((string)(inValues[33]));
            return this.BeginRegisterInfoFromModule(userName, pwd, companyName, fullName, mobile, phone, emailid, address, countryid, regionid, city, productID, productName, cardType, cardNumber, csvNumber, cardName, expiryDay, expiryMonth, expiryYear, billingAddress, billingCity, billingZip, billingCountryID, domainUserID, domainUserLink, domainName, gender, birthDay, birthMonth, birthYear, ipAddress, Campaign_ID, accessKey, callback, asyncState);
        }
        
        private object[] OnEndRegisterInfoFromModule(System.IAsyncResult result) {
            string retVal = this.EndRegisterInfoFromModule(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRegisterInfoFromModuleCompleted(object state) {
            if ((this.RegisterInfoFromModuleCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RegisterInfoFromModuleCompleted(this, new RegisterInfoFromModuleCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RegisterInfoFromModuleAsync(
                    string userName, 
                    string pwd, 
                    string companyName, 
                    string fullName, 
                    string mobile, 
                    string phone, 
                    string emailid, 
                    string address, 
                    int countryid, 
                    int regionid, 
                    string city, 
                    int productID, 
                    string productName, 
                    string cardType, 
                    string cardNumber, 
                    string csvNumber, 
                    string cardName, 
                    int expiryDay, 
                    int expiryMonth, 
                    int expiryYear, 
                    string billingAddress, 
                    string billingCity, 
                    string billingZip, 
                    int billingCountryID, 
                    string domainUserID, 
                    string domainUserLink, 
                    string domainName, 
                    string gender, 
                    int birthDay, 
                    int birthMonth, 
                    int birthYear, 
                    string ipAddress, 
                    System.Nullable<int> Campaign_ID, 
                    string accessKey) {
            this.RegisterInfoFromModuleAsync(userName, pwd, companyName, fullName, mobile, phone, emailid, address, countryid, regionid, city, productID, productName, cardType, cardNumber, csvNumber, cardName, expiryDay, expiryMonth, expiryYear, billingAddress, billingCity, billingZip, billingCountryID, domainUserID, domainUserLink, domainName, gender, birthDay, birthMonth, birthYear, ipAddress, Campaign_ID, accessKey, null);
        }
        
        public void RegisterInfoFromModuleAsync(
                    string userName, 
                    string pwd, 
                    string companyName, 
                    string fullName, 
                    string mobile, 
                    string phone, 
                    string emailid, 
                    string address, 
                    int countryid, 
                    int regionid, 
                    string city, 
                    int productID, 
                    string productName, 
                    string cardType, 
                    string cardNumber, 
                    string csvNumber, 
                    string cardName, 
                    int expiryDay, 
                    int expiryMonth, 
                    int expiryYear, 
                    string billingAddress, 
                    string billingCity, 
                    string billingZip, 
                    int billingCountryID, 
                    string domainUserID, 
                    string domainUserLink, 
                    string domainName, 
                    string gender, 
                    int birthDay, 
                    int birthMonth, 
                    int birthYear, 
                    string ipAddress, 
                    System.Nullable<int> Campaign_ID, 
                    string accessKey, 
                    object userState) {
            if ((this.onBeginRegisterInfoFromModuleDelegate == null)) {
                this.onBeginRegisterInfoFromModuleDelegate = new BeginOperationDelegate(this.OnBeginRegisterInfoFromModule);
            }
            if ((this.onEndRegisterInfoFromModuleDelegate == null)) {
                this.onEndRegisterInfoFromModuleDelegate = new EndOperationDelegate(this.OnEndRegisterInfoFromModule);
            }
            if ((this.onRegisterInfoFromModuleCompletedDelegate == null)) {
                this.onRegisterInfoFromModuleCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRegisterInfoFromModuleCompleted);
            }
            base.InvokeAsync(this.onBeginRegisterInfoFromModuleDelegate, new object[] {
                        userName,
                        pwd,
                        companyName,
                        fullName,
                        mobile,
                        phone,
                        emailid,
                        address,
                        countryid,
                        regionid,
                        city,
                        productID,
                        productName,
                        cardType,
                        cardNumber,
                        csvNumber,
                        cardName,
                        expiryDay,
                        expiryMonth,
                        expiryYear,
                        billingAddress,
                        billingCity,
                        billingZip,
                        billingCountryID,
                        domainUserID,
                        domainUserLink,
                        domainName,
                        gender,
                        birthDay,
                        birthMonth,
                        birthYear,
                        ipAddress,
                        Campaign_ID,
                        accessKey}, this.onEndRegisterInfoFromModuleDelegate, this.onRegisterInfoFromModuleCompletedDelegate, userState);
        }
        
        public string GetVideosFromDMS(string AD_Client_ID, string AD_User_ID, string C_BPartner_ID, int C_Lead_ID, string accessKey) {
            return base.Channel.GetVideosFromDMS(AD_Client_ID, AD_User_ID, C_BPartner_ID, C_Lead_ID, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetVideosFromDMS(string AD_Client_ID, string AD_User_ID, string C_BPartner_ID, int C_Lead_ID, string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetVideosFromDMS(AD_Client_ID, AD_User_ID, C_BPartner_ID, C_Lead_ID, accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGetVideosFromDMS(System.IAsyncResult result) {
            return base.Channel.EndGetVideosFromDMS(result);
        }
        
        private System.IAsyncResult OnBeginGetVideosFromDMS(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string AD_Client_ID = ((string)(inValues[0]));
            string AD_User_ID = ((string)(inValues[1]));
            string C_BPartner_ID = ((string)(inValues[2]));
            int C_Lead_ID = ((int)(inValues[3]));
            string accessKey = ((string)(inValues[4]));
            return this.BeginGetVideosFromDMS(AD_Client_ID, AD_User_ID, C_BPartner_ID, C_Lead_ID, accessKey, callback, asyncState);
        }
        
        private object[] OnEndGetVideosFromDMS(System.IAsyncResult result) {
            string retVal = this.EndGetVideosFromDMS(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetVideosFromDMSCompleted(object state) {
            if ((this.GetVideosFromDMSCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetVideosFromDMSCompleted(this, new GetVideosFromDMSCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetVideosFromDMSAsync(string AD_Client_ID, string AD_User_ID, string C_BPartner_ID, int C_Lead_ID, string accessKey) {
            this.GetVideosFromDMSAsync(AD_Client_ID, AD_User_ID, C_BPartner_ID, C_Lead_ID, accessKey, null);
        }
        
        public void GetVideosFromDMSAsync(string AD_Client_ID, string AD_User_ID, string C_BPartner_ID, int C_Lead_ID, string accessKey, object userState) {
            if ((this.onBeginGetVideosFromDMSDelegate == null)) {
                this.onBeginGetVideosFromDMSDelegate = new BeginOperationDelegate(this.OnBeginGetVideosFromDMS);
            }
            if ((this.onEndGetVideosFromDMSDelegate == null)) {
                this.onEndGetVideosFromDMSDelegate = new EndOperationDelegate(this.OnEndGetVideosFromDMS);
            }
            if ((this.onGetVideosFromDMSCompletedDelegate == null)) {
                this.onGetVideosFromDMSCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetVideosFromDMSCompleted);
            }
            base.InvokeAsync(this.onBeginGetVideosFromDMSDelegate, new object[] {
                        AD_Client_ID,
                        AD_User_ID,
                        C_BPartner_ID,
                        C_Lead_ID,
                        accessKey}, this.onEndGetVideosFromDMSDelegate, this.onGetVideosFromDMSCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BaseLibrary.CloudService.RegisterTempInfoResponse BaseLibrary.CloudService.ServiceSoap.RegisterTempInfo(BaseLibrary.CloudService.RegisterTempInfoRequest request) {
            return base.Channel.RegisterTempInfo(request);
        }
        
        public string RegisterTempInfo(string firstName, string lastName, string fullName, string userName, string companyName, string emailid, string password, System.Nullable<int> countryid, string city, int productID, string productName, string ipAddress, System.Nullable<int> Campaign_ID, string accessKey) {
            BaseLibrary.CloudService.RegisterTempInfoRequest inValue = new BaseLibrary.CloudService.RegisterTempInfoRequest();
            inValue.firstName = firstName;
            inValue.lastName = lastName;
            inValue.fullName = fullName;
            inValue.userName = userName;
            inValue.companyName = companyName;
            inValue.emailid = emailid;
            inValue.password = password;
            inValue.countryid = countryid;
            inValue.city = city;
            inValue.productID = productID;
            inValue.productName = productName;
            inValue.ipAddress = ipAddress;
            inValue.Campaign_ID = Campaign_ID;
            inValue.accessKey = accessKey;
            BaseLibrary.CloudService.RegisterTempInfoResponse retVal = ((BaseLibrary.CloudService.ServiceSoap)(this)).RegisterTempInfo(inValue);
            return retVal.RegisterTempInfoResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult BaseLibrary.CloudService.ServiceSoap.BeginRegisterTempInfo(BaseLibrary.CloudService.RegisterTempInfoRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRegisterTempInfo(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginRegisterTempInfo(
                    string firstName, 
                    string lastName, 
                    string fullName, 
                    string userName, 
                    string companyName, 
                    string emailid, 
                    string password, 
                    System.Nullable<int> countryid, 
                    string city, 
                    int productID, 
                    string productName, 
                    string ipAddress, 
                    System.Nullable<int> Campaign_ID, 
                    string accessKey, 
                    System.AsyncCallback callback, 
                    object asyncState) {
            BaseLibrary.CloudService.RegisterTempInfoRequest inValue = new BaseLibrary.CloudService.RegisterTempInfoRequest();
            inValue.firstName = firstName;
            inValue.lastName = lastName;
            inValue.fullName = fullName;
            inValue.userName = userName;
            inValue.companyName = companyName;
            inValue.emailid = emailid;
            inValue.password = password;
            inValue.countryid = countryid;
            inValue.city = city;
            inValue.productID = productID;
            inValue.productName = productName;
            inValue.ipAddress = ipAddress;
            inValue.Campaign_ID = Campaign_ID;
            inValue.accessKey = accessKey;
            return ((BaseLibrary.CloudService.ServiceSoap)(this)).BeginRegisterTempInfo(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BaseLibrary.CloudService.RegisterTempInfoResponse BaseLibrary.CloudService.ServiceSoap.EndRegisterTempInfo(System.IAsyncResult result) {
            return base.Channel.EndRegisterTempInfo(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndRegisterTempInfo(System.IAsyncResult result) {
            BaseLibrary.CloudService.RegisterTempInfoResponse retVal = ((BaseLibrary.CloudService.ServiceSoap)(this)).EndRegisterTempInfo(result);
            return retVal.RegisterTempInfoResult;
        }
        
        private System.IAsyncResult OnBeginRegisterTempInfo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string firstName = ((string)(inValues[0]));
            string lastName = ((string)(inValues[1]));
            string fullName = ((string)(inValues[2]));
            string userName = ((string)(inValues[3]));
            string companyName = ((string)(inValues[4]));
            string emailid = ((string)(inValues[5]));
            string password = ((string)(inValues[6]));
            System.Nullable<int> countryid = ((System.Nullable<int>)(inValues[7]));
            string city = ((string)(inValues[8]));
            int productID = ((int)(inValues[9]));
            string productName = ((string)(inValues[10]));
            string ipAddress = ((string)(inValues[11]));
            System.Nullable<int> Campaign_ID = ((System.Nullable<int>)(inValues[12]));
            string accessKey = ((string)(inValues[13]));
            return this.BeginRegisterTempInfo(firstName, lastName, fullName, userName, companyName, emailid, password, countryid, city, productID, productName, ipAddress, Campaign_ID, accessKey, callback, asyncState);
        }
        
        private object[] OnEndRegisterTempInfo(System.IAsyncResult result) {
            string retVal = this.EndRegisterTempInfo(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRegisterTempInfoCompleted(object state) {
            if ((this.RegisterTempInfoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RegisterTempInfoCompleted(this, new RegisterTempInfoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RegisterTempInfoAsync(string firstName, string lastName, string fullName, string userName, string companyName, string emailid, string password, System.Nullable<int> countryid, string city, int productID, string productName, string ipAddress, System.Nullable<int> Campaign_ID, string accessKey) {
            this.RegisterTempInfoAsync(firstName, lastName, fullName, userName, companyName, emailid, password, countryid, city, productID, productName, ipAddress, Campaign_ID, accessKey, null);
        }
        
        public void RegisterTempInfoAsync(string firstName, string lastName, string fullName, string userName, string companyName, string emailid, string password, System.Nullable<int> countryid, string city, int productID, string productName, string ipAddress, System.Nullable<int> Campaign_ID, string accessKey, object userState) {
            if ((this.onBeginRegisterTempInfoDelegate == null)) {
                this.onBeginRegisterTempInfoDelegate = new BeginOperationDelegate(this.OnBeginRegisterTempInfo);
            }
            if ((this.onEndRegisterTempInfoDelegate == null)) {
                this.onEndRegisterTempInfoDelegate = new EndOperationDelegate(this.OnEndRegisterTempInfo);
            }
            if ((this.onRegisterTempInfoCompletedDelegate == null)) {
                this.onRegisterTempInfoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRegisterTempInfoCompleted);
            }
            base.InvokeAsync(this.onBeginRegisterTempInfoDelegate, new object[] {
                        firstName,
                        lastName,
                        fullName,
                        userName,
                        companyName,
                        emailid,
                        password,
                        countryid,
                        city,
                        productID,
                        productName,
                        ipAddress,
                        Campaign_ID,
                        accessKey}, this.onEndRegisterTempInfoDelegate, this.onRegisterTempInfoCompletedDelegate, userState);
        }
        
        public string RegisterInfo(
                    string userName, 
                    string pwd, 
                    string companyName, 
                    string fullName, 
                    string mobile, 
                    string phone, 
                    string emailid, 
                    string address, 
                    int countryid, 
                    int regionid, 
                    string city, 
                    int productID, 
                    string productName, 
                    string cardType, 
                    string cardNumber, 
                    string csvNumber, 
                    string cardName, 
                    int expiryDay, 
                    int expiryMonth, 
                    int expiryYear, 
                    string billingAddress, 
                    string billingCity, 
                    string billingZip, 
                    int billingCountryID, 
                    string domainUserID, 
                    string domainUserLink, 
                    string domainName, 
                    string gender, 
                    int birthDay, 
                    int birthMonth, 
                    int birthYear, 
                    string ipAddress, 
                    int Campaign_ID, 
                    string accessKey, 
                    string firstName, 
                    string lastName, 
                    string originFrom) {
            return base.Channel.RegisterInfo(userName, pwd, companyName, fullName, mobile, phone, emailid, address, countryid, regionid, city, productID, productName, cardType, cardNumber, csvNumber, cardName, expiryDay, expiryMonth, expiryYear, billingAddress, billingCity, billingZip, billingCountryID, domainUserID, domainUserLink, domainName, gender, birthDay, birthMonth, birthYear, ipAddress, Campaign_ID, accessKey, firstName, lastName, originFrom);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginRegisterInfo(
                    string userName, 
                    string pwd, 
                    string companyName, 
                    string fullName, 
                    string mobile, 
                    string phone, 
                    string emailid, 
                    string address, 
                    int countryid, 
                    int regionid, 
                    string city, 
                    int productID, 
                    string productName, 
                    string cardType, 
                    string cardNumber, 
                    string csvNumber, 
                    string cardName, 
                    int expiryDay, 
                    int expiryMonth, 
                    int expiryYear, 
                    string billingAddress, 
                    string billingCity, 
                    string billingZip, 
                    int billingCountryID, 
                    string domainUserID, 
                    string domainUserLink, 
                    string domainName, 
                    string gender, 
                    int birthDay, 
                    int birthMonth, 
                    int birthYear, 
                    string ipAddress, 
                    int Campaign_ID, 
                    string accessKey, 
                    string firstName, 
                    string lastName, 
                    string originFrom, 
                    System.AsyncCallback callback, 
                    object asyncState) {
            return base.Channel.BeginRegisterInfo(userName, pwd, companyName, fullName, mobile, phone, emailid, address, countryid, regionid, city, productID, productName, cardType, cardNumber, csvNumber, cardName, expiryDay, expiryMonth, expiryYear, billingAddress, billingCity, billingZip, billingCountryID, domainUserID, domainUserLink, domainName, gender, birthDay, birthMonth, birthYear, ipAddress, Campaign_ID, accessKey, firstName, lastName, originFrom, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndRegisterInfo(System.IAsyncResult result) {
            return base.Channel.EndRegisterInfo(result);
        }
        
        private System.IAsyncResult OnBeginRegisterInfo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userName = ((string)(inValues[0]));
            string pwd = ((string)(inValues[1]));
            string companyName = ((string)(inValues[2]));
            string fullName = ((string)(inValues[3]));
            string mobile = ((string)(inValues[4]));
            string phone = ((string)(inValues[5]));
            string emailid = ((string)(inValues[6]));
            string address = ((string)(inValues[7]));
            int countryid = ((int)(inValues[8]));
            int regionid = ((int)(inValues[9]));
            string city = ((string)(inValues[10]));
            int productID = ((int)(inValues[11]));
            string productName = ((string)(inValues[12]));
            string cardType = ((string)(inValues[13]));
            string cardNumber = ((string)(inValues[14]));
            string csvNumber = ((string)(inValues[15]));
            string cardName = ((string)(inValues[16]));
            int expiryDay = ((int)(inValues[17]));
            int expiryMonth = ((int)(inValues[18]));
            int expiryYear = ((int)(inValues[19]));
            string billingAddress = ((string)(inValues[20]));
            string billingCity = ((string)(inValues[21]));
            string billingZip = ((string)(inValues[22]));
            int billingCountryID = ((int)(inValues[23]));
            string domainUserID = ((string)(inValues[24]));
            string domainUserLink = ((string)(inValues[25]));
            string domainName = ((string)(inValues[26]));
            string gender = ((string)(inValues[27]));
            int birthDay = ((int)(inValues[28]));
            int birthMonth = ((int)(inValues[29]));
            int birthYear = ((int)(inValues[30]));
            string ipAddress = ((string)(inValues[31]));
            int Campaign_ID = ((int)(inValues[32]));
            string accessKey = ((string)(inValues[33]));
            string firstName = ((string)(inValues[34]));
            string lastName = ((string)(inValues[35]));
            string originFrom = ((string)(inValues[36]));
            return this.BeginRegisterInfo(userName, pwd, companyName, fullName, mobile, phone, emailid, address, countryid, regionid, city, productID, productName, cardType, cardNumber, csvNumber, cardName, expiryDay, expiryMonth, expiryYear, billingAddress, billingCity, billingZip, billingCountryID, domainUserID, domainUserLink, domainName, gender, birthDay, birthMonth, birthYear, ipAddress, Campaign_ID, accessKey, firstName, lastName, originFrom, callback, asyncState);
        }
        
        private object[] OnEndRegisterInfo(System.IAsyncResult result) {
            string retVal = this.EndRegisterInfo(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRegisterInfoCompleted(object state) {
            if ((this.RegisterInfoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RegisterInfoCompleted(this, new RegisterInfoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RegisterInfoAsync(
                    string userName, 
                    string pwd, 
                    string companyName, 
                    string fullName, 
                    string mobile, 
                    string phone, 
                    string emailid, 
                    string address, 
                    int countryid, 
                    int regionid, 
                    string city, 
                    int productID, 
                    string productName, 
                    string cardType, 
                    string cardNumber, 
                    string csvNumber, 
                    string cardName, 
                    int expiryDay, 
                    int expiryMonth, 
                    int expiryYear, 
                    string billingAddress, 
                    string billingCity, 
                    string billingZip, 
                    int billingCountryID, 
                    string domainUserID, 
                    string domainUserLink, 
                    string domainName, 
                    string gender, 
                    int birthDay, 
                    int birthMonth, 
                    int birthYear, 
                    string ipAddress, 
                    int Campaign_ID, 
                    string accessKey, 
                    string firstName, 
                    string lastName, 
                    string originFrom) {
            this.RegisterInfoAsync(userName, pwd, companyName, fullName, mobile, phone, emailid, address, countryid, regionid, city, productID, productName, cardType, cardNumber, csvNumber, cardName, expiryDay, expiryMonth, expiryYear, billingAddress, billingCity, billingZip, billingCountryID, domainUserID, domainUserLink, domainName, gender, birthDay, birthMonth, birthYear, ipAddress, Campaign_ID, accessKey, firstName, lastName, originFrom, null);
        }
        
        public void RegisterInfoAsync(
                    string userName, 
                    string pwd, 
                    string companyName, 
                    string fullName, 
                    string mobile, 
                    string phone, 
                    string emailid, 
                    string address, 
                    int countryid, 
                    int regionid, 
                    string city, 
                    int productID, 
                    string productName, 
                    string cardType, 
                    string cardNumber, 
                    string csvNumber, 
                    string cardName, 
                    int expiryDay, 
                    int expiryMonth, 
                    int expiryYear, 
                    string billingAddress, 
                    string billingCity, 
                    string billingZip, 
                    int billingCountryID, 
                    string domainUserID, 
                    string domainUserLink, 
                    string domainName, 
                    string gender, 
                    int birthDay, 
                    int birthMonth, 
                    int birthYear, 
                    string ipAddress, 
                    int Campaign_ID, 
                    string accessKey, 
                    string firstName, 
                    string lastName, 
                    string originFrom, 
                    object userState) {
            if ((this.onBeginRegisterInfoDelegate == null)) {
                this.onBeginRegisterInfoDelegate = new BeginOperationDelegate(this.OnBeginRegisterInfo);
            }
            if ((this.onEndRegisterInfoDelegate == null)) {
                this.onEndRegisterInfoDelegate = new EndOperationDelegate(this.OnEndRegisterInfo);
            }
            if ((this.onRegisterInfoCompletedDelegate == null)) {
                this.onRegisterInfoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRegisterInfoCompleted);
            }
            base.InvokeAsync(this.onBeginRegisterInfoDelegate, new object[] {
                        userName,
                        pwd,
                        companyName,
                        fullName,
                        mobile,
                        phone,
                        emailid,
                        address,
                        countryid,
                        regionid,
                        city,
                        productID,
                        productName,
                        cardType,
                        cardNumber,
                        csvNumber,
                        cardName,
                        expiryDay,
                        expiryMonth,
                        expiryYear,
                        billingAddress,
                        billingCity,
                        billingZip,
                        billingCountryID,
                        domainUserID,
                        domainUserLink,
                        domainName,
                        gender,
                        birthDay,
                        birthMonth,
                        birthYear,
                        ipAddress,
                        Campaign_ID,
                        accessKey,
                        firstName,
                        lastName,
                        originFrom}, this.onEndRegisterInfoDelegate, this.onRegisterInfoCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BaseLibrary.CloudService.VRegisterInfoTResponse BaseLibrary.CloudService.ServiceSoap.VRegisterInfoT(BaseLibrary.CloudService.VRegisterInfoTRequest request) {
            return base.Channel.VRegisterInfoT(request);
        }
        
        public string VRegisterInfoT(string firstName, string lastName, string fullName, string userName, string companyName, string emailid, string password, System.Nullable<int> countryid, string city, int productID, string productName, string ipAddress, System.Nullable<int> Campaign_ID, string accessKey) {
            BaseLibrary.CloudService.VRegisterInfoTRequest inValue = new BaseLibrary.CloudService.VRegisterInfoTRequest();
            inValue.firstName = firstName;
            inValue.lastName = lastName;
            inValue.fullName = fullName;
            inValue.userName = userName;
            inValue.companyName = companyName;
            inValue.emailid = emailid;
            inValue.password = password;
            inValue.countryid = countryid;
            inValue.city = city;
            inValue.productID = productID;
            inValue.productName = productName;
            inValue.ipAddress = ipAddress;
            inValue.Campaign_ID = Campaign_ID;
            inValue.accessKey = accessKey;
            BaseLibrary.CloudService.VRegisterInfoTResponse retVal = ((BaseLibrary.CloudService.ServiceSoap)(this)).VRegisterInfoT(inValue);
            return retVal.VRegisterInfoTResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult BaseLibrary.CloudService.ServiceSoap.BeginVRegisterInfoT(BaseLibrary.CloudService.VRegisterInfoTRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginVRegisterInfoT(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginVRegisterInfoT(
                    string firstName, 
                    string lastName, 
                    string fullName, 
                    string userName, 
                    string companyName, 
                    string emailid, 
                    string password, 
                    System.Nullable<int> countryid, 
                    string city, 
                    int productID, 
                    string productName, 
                    string ipAddress, 
                    System.Nullable<int> Campaign_ID, 
                    string accessKey, 
                    System.AsyncCallback callback, 
                    object asyncState) {
            BaseLibrary.CloudService.VRegisterInfoTRequest inValue = new BaseLibrary.CloudService.VRegisterInfoTRequest();
            inValue.firstName = firstName;
            inValue.lastName = lastName;
            inValue.fullName = fullName;
            inValue.userName = userName;
            inValue.companyName = companyName;
            inValue.emailid = emailid;
            inValue.password = password;
            inValue.countryid = countryid;
            inValue.city = city;
            inValue.productID = productID;
            inValue.productName = productName;
            inValue.ipAddress = ipAddress;
            inValue.Campaign_ID = Campaign_ID;
            inValue.accessKey = accessKey;
            return ((BaseLibrary.CloudService.ServiceSoap)(this)).BeginVRegisterInfoT(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BaseLibrary.CloudService.VRegisterInfoTResponse BaseLibrary.CloudService.ServiceSoap.EndVRegisterInfoT(System.IAsyncResult result) {
            return base.Channel.EndVRegisterInfoT(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndVRegisterInfoT(System.IAsyncResult result) {
            BaseLibrary.CloudService.VRegisterInfoTResponse retVal = ((BaseLibrary.CloudService.ServiceSoap)(this)).EndVRegisterInfoT(result);
            return retVal.VRegisterInfoTResult;
        }
        
        private System.IAsyncResult OnBeginVRegisterInfoT(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string firstName = ((string)(inValues[0]));
            string lastName = ((string)(inValues[1]));
            string fullName = ((string)(inValues[2]));
            string userName = ((string)(inValues[3]));
            string companyName = ((string)(inValues[4]));
            string emailid = ((string)(inValues[5]));
            string password = ((string)(inValues[6]));
            System.Nullable<int> countryid = ((System.Nullable<int>)(inValues[7]));
            string city = ((string)(inValues[8]));
            int productID = ((int)(inValues[9]));
            string productName = ((string)(inValues[10]));
            string ipAddress = ((string)(inValues[11]));
            System.Nullable<int> Campaign_ID = ((System.Nullable<int>)(inValues[12]));
            string accessKey = ((string)(inValues[13]));
            return this.BeginVRegisterInfoT(firstName, lastName, fullName, userName, companyName, emailid, password, countryid, city, productID, productName, ipAddress, Campaign_ID, accessKey, callback, asyncState);
        }
        
        private object[] OnEndVRegisterInfoT(System.IAsyncResult result) {
            string retVal = this.EndVRegisterInfoT(result);
            return new object[] {
                    retVal};
        }
        
        private void OnVRegisterInfoTCompleted(object state) {
            if ((this.VRegisterInfoTCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.VRegisterInfoTCompleted(this, new VRegisterInfoTCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void VRegisterInfoTAsync(string firstName, string lastName, string fullName, string userName, string companyName, string emailid, string password, System.Nullable<int> countryid, string city, int productID, string productName, string ipAddress, System.Nullable<int> Campaign_ID, string accessKey) {
            this.VRegisterInfoTAsync(firstName, lastName, fullName, userName, companyName, emailid, password, countryid, city, productID, productName, ipAddress, Campaign_ID, accessKey, null);
        }
        
        public void VRegisterInfoTAsync(string firstName, string lastName, string fullName, string userName, string companyName, string emailid, string password, System.Nullable<int> countryid, string city, int productID, string productName, string ipAddress, System.Nullable<int> Campaign_ID, string accessKey, object userState) {
            if ((this.onBeginVRegisterInfoTDelegate == null)) {
                this.onBeginVRegisterInfoTDelegate = new BeginOperationDelegate(this.OnBeginVRegisterInfoT);
            }
            if ((this.onEndVRegisterInfoTDelegate == null)) {
                this.onEndVRegisterInfoTDelegate = new EndOperationDelegate(this.OnEndVRegisterInfoT);
            }
            if ((this.onVRegisterInfoTCompletedDelegate == null)) {
                this.onVRegisterInfoTCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnVRegisterInfoTCompleted);
            }
            base.InvokeAsync(this.onBeginVRegisterInfoTDelegate, new object[] {
                        firstName,
                        lastName,
                        fullName,
                        userName,
                        companyName,
                        emailid,
                        password,
                        countryid,
                        city,
                        productID,
                        productName,
                        ipAddress,
                        Campaign_ID,
                        accessKey}, this.onEndVRegisterInfoTDelegate, this.onVRegisterInfoTCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BaseLibrary.CloudService.VRegisterInfoResponse BaseLibrary.CloudService.ServiceSoap.VRegisterInfo(BaseLibrary.CloudService.VRegisterInfoRequest request) {
            return base.Channel.VRegisterInfo(request);
        }
        
        public string VRegisterInfo(
                    string userName, 
                    string pwd, 
                    string companyName, 
                    string fullName, 
                    string mobile, 
                    string phone, 
                    string emailid, 
                    string address, 
                    int countryid, 
                    int regionid, 
                    string city, 
                    int productID, 
                    string productName, 
                    string cardType, 
                    int cardNumber, 
                    string csvNumber, 
                    string cardName, 
                    int expiryDay, 
                    int expiryMonth, 
                    int expiryYear, 
                    string billingAddress, 
                    string billingCity, 
                    string billingZip, 
                    int billingCountryID, 
                    string domainUserID, 
                    string domainUserLink, 
                    string domainName, 
                    string gender, 
                    int birthDay, 
                    int birthMonth, 
                    int birthYear, 
                    string ipAddress, 
                    string SocialRegType, 
                    System.Nullable<int> CampaignID, 
                    char IsSocialRegistration, 
                    string accessKey, 
                    string firstName, 
                    string lastName, 
                    string originFrom) {
            BaseLibrary.CloudService.VRegisterInfoRequest inValue = new BaseLibrary.CloudService.VRegisterInfoRequest();
            inValue.userName = userName;
            inValue.pwd = pwd;
            inValue.companyName = companyName;
            inValue.fullName = fullName;
            inValue.mobile = mobile;
            inValue.phone = phone;
            inValue.emailid = emailid;
            inValue.address = address;
            inValue.countryid = countryid;
            inValue.regionid = regionid;
            inValue.city = city;
            inValue.productID = productID;
            inValue.productName = productName;
            inValue.cardType = cardType;
            inValue.cardNumber = cardNumber;
            inValue.csvNumber = csvNumber;
            inValue.cardName = cardName;
            inValue.expiryDay = expiryDay;
            inValue.expiryMonth = expiryMonth;
            inValue.expiryYear = expiryYear;
            inValue.billingAddress = billingAddress;
            inValue.billingCity = billingCity;
            inValue.billingZip = billingZip;
            inValue.billingCountryID = billingCountryID;
            inValue.domainUserID = domainUserID;
            inValue.domainUserLink = domainUserLink;
            inValue.domainName = domainName;
            inValue.gender = gender;
            inValue.birthDay = birthDay;
            inValue.birthMonth = birthMonth;
            inValue.birthYear = birthYear;
            inValue.ipAddress = ipAddress;
            inValue.SocialRegType = SocialRegType;
            inValue.CampaignID = CampaignID;
            inValue.IsSocialRegistration = IsSocialRegistration;
            inValue.accessKey = accessKey;
            inValue.firstName = firstName;
            inValue.lastName = lastName;
            inValue.originFrom = originFrom;
            BaseLibrary.CloudService.VRegisterInfoResponse retVal = ((BaseLibrary.CloudService.ServiceSoap)(this)).VRegisterInfo(inValue);
            return retVal.VRegisterInfoResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult BaseLibrary.CloudService.ServiceSoap.BeginVRegisterInfo(BaseLibrary.CloudService.VRegisterInfoRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginVRegisterInfo(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginVRegisterInfo(
                    string userName, 
                    string pwd, 
                    string companyName, 
                    string fullName, 
                    string mobile, 
                    string phone, 
                    string emailid, 
                    string address, 
                    int countryid, 
                    int regionid, 
                    string city, 
                    int productID, 
                    string productName, 
                    string cardType, 
                    int cardNumber, 
                    string csvNumber, 
                    string cardName, 
                    int expiryDay, 
                    int expiryMonth, 
                    int expiryYear, 
                    string billingAddress, 
                    string billingCity, 
                    string billingZip, 
                    int billingCountryID, 
                    string domainUserID, 
                    string domainUserLink, 
                    string domainName, 
                    string gender, 
                    int birthDay, 
                    int birthMonth, 
                    int birthYear, 
                    string ipAddress, 
                    string SocialRegType, 
                    System.Nullable<int> CampaignID, 
                    char IsSocialRegistration, 
                    string accessKey, 
                    string firstName, 
                    string lastName, 
                    string originFrom, 
                    System.AsyncCallback callback, 
                    object asyncState) {
            BaseLibrary.CloudService.VRegisterInfoRequest inValue = new BaseLibrary.CloudService.VRegisterInfoRequest();
            inValue.userName = userName;
            inValue.pwd = pwd;
            inValue.companyName = companyName;
            inValue.fullName = fullName;
            inValue.mobile = mobile;
            inValue.phone = phone;
            inValue.emailid = emailid;
            inValue.address = address;
            inValue.countryid = countryid;
            inValue.regionid = regionid;
            inValue.city = city;
            inValue.productID = productID;
            inValue.productName = productName;
            inValue.cardType = cardType;
            inValue.cardNumber = cardNumber;
            inValue.csvNumber = csvNumber;
            inValue.cardName = cardName;
            inValue.expiryDay = expiryDay;
            inValue.expiryMonth = expiryMonth;
            inValue.expiryYear = expiryYear;
            inValue.billingAddress = billingAddress;
            inValue.billingCity = billingCity;
            inValue.billingZip = billingZip;
            inValue.billingCountryID = billingCountryID;
            inValue.domainUserID = domainUserID;
            inValue.domainUserLink = domainUserLink;
            inValue.domainName = domainName;
            inValue.gender = gender;
            inValue.birthDay = birthDay;
            inValue.birthMonth = birthMonth;
            inValue.birthYear = birthYear;
            inValue.ipAddress = ipAddress;
            inValue.SocialRegType = SocialRegType;
            inValue.CampaignID = CampaignID;
            inValue.IsSocialRegistration = IsSocialRegistration;
            inValue.accessKey = accessKey;
            inValue.firstName = firstName;
            inValue.lastName = lastName;
            inValue.originFrom = originFrom;
            return ((BaseLibrary.CloudService.ServiceSoap)(this)).BeginVRegisterInfo(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BaseLibrary.CloudService.VRegisterInfoResponse BaseLibrary.CloudService.ServiceSoap.EndVRegisterInfo(System.IAsyncResult result) {
            return base.Channel.EndVRegisterInfo(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndVRegisterInfo(System.IAsyncResult result) {
            BaseLibrary.CloudService.VRegisterInfoResponse retVal = ((BaseLibrary.CloudService.ServiceSoap)(this)).EndVRegisterInfo(result);
            return retVal.VRegisterInfoResult;
        }
        
        private System.IAsyncResult OnBeginVRegisterInfo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userName = ((string)(inValues[0]));
            string pwd = ((string)(inValues[1]));
            string companyName = ((string)(inValues[2]));
            string fullName = ((string)(inValues[3]));
            string mobile = ((string)(inValues[4]));
            string phone = ((string)(inValues[5]));
            string emailid = ((string)(inValues[6]));
            string address = ((string)(inValues[7]));
            int countryid = ((int)(inValues[8]));
            int regionid = ((int)(inValues[9]));
            string city = ((string)(inValues[10]));
            int productID = ((int)(inValues[11]));
            string productName = ((string)(inValues[12]));
            string cardType = ((string)(inValues[13]));
            int cardNumber = ((int)(inValues[14]));
            string csvNumber = ((string)(inValues[15]));
            string cardName = ((string)(inValues[16]));
            int expiryDay = ((int)(inValues[17]));
            int expiryMonth = ((int)(inValues[18]));
            int expiryYear = ((int)(inValues[19]));
            string billingAddress = ((string)(inValues[20]));
            string billingCity = ((string)(inValues[21]));
            string billingZip = ((string)(inValues[22]));
            int billingCountryID = ((int)(inValues[23]));
            string domainUserID = ((string)(inValues[24]));
            string domainUserLink = ((string)(inValues[25]));
            string domainName = ((string)(inValues[26]));
            string gender = ((string)(inValues[27]));
            int birthDay = ((int)(inValues[28]));
            int birthMonth = ((int)(inValues[29]));
            int birthYear = ((int)(inValues[30]));
            string ipAddress = ((string)(inValues[31]));
            string SocialRegType = ((string)(inValues[32]));
            System.Nullable<int> CampaignID = ((System.Nullable<int>)(inValues[33]));
            char IsSocialRegistration = ((char)(inValues[34]));
            string accessKey = ((string)(inValues[35]));
            string firstName = ((string)(inValues[36]));
            string lastName = ((string)(inValues[37]));
            string originFrom = ((string)(inValues[38]));
            return this.BeginVRegisterInfo(userName, pwd, companyName, fullName, mobile, phone, emailid, address, countryid, regionid, city, productID, productName, cardType, cardNumber, csvNumber, cardName, expiryDay, expiryMonth, expiryYear, billingAddress, billingCity, billingZip, billingCountryID, domainUserID, domainUserLink, domainName, gender, birthDay, birthMonth, birthYear, ipAddress, SocialRegType, CampaignID, IsSocialRegistration, accessKey, firstName, lastName, originFrom, callback, asyncState);
        }
        
        private object[] OnEndVRegisterInfo(System.IAsyncResult result) {
            string retVal = this.EndVRegisterInfo(result);
            return new object[] {
                    retVal};
        }
        
        private void OnVRegisterInfoCompleted(object state) {
            if ((this.VRegisterInfoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.VRegisterInfoCompleted(this, new VRegisterInfoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void VRegisterInfoAsync(
                    string userName, 
                    string pwd, 
                    string companyName, 
                    string fullName, 
                    string mobile, 
                    string phone, 
                    string emailid, 
                    string address, 
                    int countryid, 
                    int regionid, 
                    string city, 
                    int productID, 
                    string productName, 
                    string cardType, 
                    int cardNumber, 
                    string csvNumber, 
                    string cardName, 
                    int expiryDay, 
                    int expiryMonth, 
                    int expiryYear, 
                    string billingAddress, 
                    string billingCity, 
                    string billingZip, 
                    int billingCountryID, 
                    string domainUserID, 
                    string domainUserLink, 
                    string domainName, 
                    string gender, 
                    int birthDay, 
                    int birthMonth, 
                    int birthYear, 
                    string ipAddress, 
                    string SocialRegType, 
                    System.Nullable<int> CampaignID, 
                    char IsSocialRegistration, 
                    string accessKey, 
                    string firstName, 
                    string lastName, 
                    string originFrom) {
            this.VRegisterInfoAsync(userName, pwd, companyName, fullName, mobile, phone, emailid, address, countryid, regionid, city, productID, productName, cardType, cardNumber, csvNumber, cardName, expiryDay, expiryMonth, expiryYear, billingAddress, billingCity, billingZip, billingCountryID, domainUserID, domainUserLink, domainName, gender, birthDay, birthMonth, birthYear, ipAddress, SocialRegType, CampaignID, IsSocialRegistration, accessKey, firstName, lastName, originFrom, null);
        }
        
        public void VRegisterInfoAsync(
                    string userName, 
                    string pwd, 
                    string companyName, 
                    string fullName, 
                    string mobile, 
                    string phone, 
                    string emailid, 
                    string address, 
                    int countryid, 
                    int regionid, 
                    string city, 
                    int productID, 
                    string productName, 
                    string cardType, 
                    int cardNumber, 
                    string csvNumber, 
                    string cardName, 
                    int expiryDay, 
                    int expiryMonth, 
                    int expiryYear, 
                    string billingAddress, 
                    string billingCity, 
                    string billingZip, 
                    int billingCountryID, 
                    string domainUserID, 
                    string domainUserLink, 
                    string domainName, 
                    string gender, 
                    int birthDay, 
                    int birthMonth, 
                    int birthYear, 
                    string ipAddress, 
                    string SocialRegType, 
                    System.Nullable<int> CampaignID, 
                    char IsSocialRegistration, 
                    string accessKey, 
                    string firstName, 
                    string lastName, 
                    string originFrom, 
                    object userState) {
            if ((this.onBeginVRegisterInfoDelegate == null)) {
                this.onBeginVRegisterInfoDelegate = new BeginOperationDelegate(this.OnBeginVRegisterInfo);
            }
            if ((this.onEndVRegisterInfoDelegate == null)) {
                this.onEndVRegisterInfoDelegate = new EndOperationDelegate(this.OnEndVRegisterInfo);
            }
            if ((this.onVRegisterInfoCompletedDelegate == null)) {
                this.onVRegisterInfoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnVRegisterInfoCompleted);
            }
            base.InvokeAsync(this.onBeginVRegisterInfoDelegate, new object[] {
                        userName,
                        pwd,
                        companyName,
                        fullName,
                        mobile,
                        phone,
                        emailid,
                        address,
                        countryid,
                        regionid,
                        city,
                        productID,
                        productName,
                        cardType,
                        cardNumber,
                        csvNumber,
                        cardName,
                        expiryDay,
                        expiryMonth,
                        expiryYear,
                        billingAddress,
                        billingCity,
                        billingZip,
                        billingCountryID,
                        domainUserID,
                        domainUserLink,
                        domainName,
                        gender,
                        birthDay,
                        birthMonth,
                        birthYear,
                        ipAddress,
                        SocialRegType,
                        CampaignID,
                        IsSocialRegistration,
                        accessKey,
                        firstName,
                        lastName,
                        originFrom}, this.onEndVRegisterInfoDelegate, this.onVRegisterInfoCompletedDelegate, userState);
        }
        
        public BaseLibrary.CloudService.ServerAndFtpInfo GetCustomerServerAndFTPInfo(int A_Asset_ID, int CS_ZoneMasterServer_ID, int M_Product_ID, string accessKey) {
            return base.Channel.GetCustomerServerAndFTPInfo(A_Asset_ID, CS_ZoneMasterServer_ID, M_Product_ID, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCustomerServerAndFTPInfo(int A_Asset_ID, int CS_ZoneMasterServer_ID, int M_Product_ID, string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCustomerServerAndFTPInfo(A_Asset_ID, CS_ZoneMasterServer_ID, M_Product_ID, accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public BaseLibrary.CloudService.ServerAndFtpInfo EndGetCustomerServerAndFTPInfo(System.IAsyncResult result) {
            return base.Channel.EndGetCustomerServerAndFTPInfo(result);
        }
        
        private System.IAsyncResult OnBeginGetCustomerServerAndFTPInfo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int A_Asset_ID = ((int)(inValues[0]));
            int CS_ZoneMasterServer_ID = ((int)(inValues[1]));
            int M_Product_ID = ((int)(inValues[2]));
            string accessKey = ((string)(inValues[3]));
            return this.BeginGetCustomerServerAndFTPInfo(A_Asset_ID, CS_ZoneMasterServer_ID, M_Product_ID, accessKey, callback, asyncState);
        }
        
        private object[] OnEndGetCustomerServerAndFTPInfo(System.IAsyncResult result) {
            BaseLibrary.CloudService.ServerAndFtpInfo retVal = this.EndGetCustomerServerAndFTPInfo(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCustomerServerAndFTPInfoCompleted(object state) {
            if ((this.GetCustomerServerAndFTPInfoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCustomerServerAndFTPInfoCompleted(this, new GetCustomerServerAndFTPInfoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCustomerServerAndFTPInfoAsync(int A_Asset_ID, int CS_ZoneMasterServer_ID, int M_Product_ID, string accessKey) {
            this.GetCustomerServerAndFTPInfoAsync(A_Asset_ID, CS_ZoneMasterServer_ID, M_Product_ID, accessKey, null);
        }
        
        public void GetCustomerServerAndFTPInfoAsync(int A_Asset_ID, int CS_ZoneMasterServer_ID, int M_Product_ID, string accessKey, object userState) {
            if ((this.onBeginGetCustomerServerAndFTPInfoDelegate == null)) {
                this.onBeginGetCustomerServerAndFTPInfoDelegate = new BeginOperationDelegate(this.OnBeginGetCustomerServerAndFTPInfo);
            }
            if ((this.onEndGetCustomerServerAndFTPInfoDelegate == null)) {
                this.onEndGetCustomerServerAndFTPInfoDelegate = new EndOperationDelegate(this.OnEndGetCustomerServerAndFTPInfo);
            }
            if ((this.onGetCustomerServerAndFTPInfoCompletedDelegate == null)) {
                this.onGetCustomerServerAndFTPInfoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCustomerServerAndFTPInfoCompleted);
            }
            base.InvokeAsync(this.onBeginGetCustomerServerAndFTPInfoDelegate, new object[] {
                        A_Asset_ID,
                        CS_ZoneMasterServer_ID,
                        M_Product_ID,
                        accessKey}, this.onEndGetCustomerServerAndFTPInfoDelegate, this.onGetCustomerServerAndFTPInfoCompletedDelegate, userState);
        }
        
        public BaseLibrary.CloudService.ServerInfo GetCustomerServerInfoM1(int A_Asset_ID, string accessKey) {
            return base.Channel.GetCustomerServerInfoM1(A_Asset_ID, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCustomerServerInfoM1(int A_Asset_ID, string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCustomerServerInfoM1(A_Asset_ID, accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public BaseLibrary.CloudService.ServerInfo EndGetCustomerServerInfoM1(System.IAsyncResult result) {
            return base.Channel.EndGetCustomerServerInfoM1(result);
        }
        
        private System.IAsyncResult OnBeginGetCustomerServerInfoM1(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int A_Asset_ID = ((int)(inValues[0]));
            string accessKey = ((string)(inValues[1]));
            return this.BeginGetCustomerServerInfoM1(A_Asset_ID, accessKey, callback, asyncState);
        }
        
        private object[] OnEndGetCustomerServerInfoM1(System.IAsyncResult result) {
            BaseLibrary.CloudService.ServerInfo retVal = this.EndGetCustomerServerInfoM1(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCustomerServerInfoM1Completed(object state) {
            if ((this.GetCustomerServerInfoM1Completed != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCustomerServerInfoM1Completed(this, new GetCustomerServerInfoM1CompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCustomerServerInfoM1Async(int A_Asset_ID, string accessKey) {
            this.GetCustomerServerInfoM1Async(A_Asset_ID, accessKey, null);
        }
        
        public void GetCustomerServerInfoM1Async(int A_Asset_ID, string accessKey, object userState) {
            if ((this.onBeginGetCustomerServerInfoM1Delegate == null)) {
                this.onBeginGetCustomerServerInfoM1Delegate = new BeginOperationDelegate(this.OnBeginGetCustomerServerInfoM1);
            }
            if ((this.onEndGetCustomerServerInfoM1Delegate == null)) {
                this.onEndGetCustomerServerInfoM1Delegate = new EndOperationDelegate(this.OnEndGetCustomerServerInfoM1);
            }
            if ((this.onGetCustomerServerInfoM1CompletedDelegate == null)) {
                this.onGetCustomerServerInfoM1CompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCustomerServerInfoM1Completed);
            }
            base.InvokeAsync(this.onBeginGetCustomerServerInfoM1Delegate, new object[] {
                        A_Asset_ID,
                        accessKey}, this.onEndGetCustomerServerInfoM1Delegate, this.onGetCustomerServerInfoM1CompletedDelegate, userState);
        }
        
        public BaseLibrary.CloudService.ServerInfo GetCustomerServerInfoM2(int tanent_ID, string url, string accessKey) {
            return base.Channel.GetCustomerServerInfoM2(tanent_ID, url, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCustomerServerInfoM2(int tanent_ID, string url, string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCustomerServerInfoM2(tanent_ID, url, accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public BaseLibrary.CloudService.ServerInfo EndGetCustomerServerInfoM2(System.IAsyncResult result) {
            return base.Channel.EndGetCustomerServerInfoM2(result);
        }
        
        private System.IAsyncResult OnBeginGetCustomerServerInfoM2(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int tanent_ID = ((int)(inValues[0]));
            string url = ((string)(inValues[1]));
            string accessKey = ((string)(inValues[2]));
            return this.BeginGetCustomerServerInfoM2(tanent_ID, url, accessKey, callback, asyncState);
        }
        
        private object[] OnEndGetCustomerServerInfoM2(System.IAsyncResult result) {
            BaseLibrary.CloudService.ServerInfo retVal = this.EndGetCustomerServerInfoM2(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCustomerServerInfoM2Completed(object state) {
            if ((this.GetCustomerServerInfoM2Completed != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCustomerServerInfoM2Completed(this, new GetCustomerServerInfoM2CompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCustomerServerInfoM2Async(int tanent_ID, string url, string accessKey) {
            this.GetCustomerServerInfoM2Async(tanent_ID, url, accessKey, null);
        }
        
        public void GetCustomerServerInfoM2Async(int tanent_ID, string url, string accessKey, object userState) {
            if ((this.onBeginGetCustomerServerInfoM2Delegate == null)) {
                this.onBeginGetCustomerServerInfoM2Delegate = new BeginOperationDelegate(this.OnBeginGetCustomerServerInfoM2);
            }
            if ((this.onEndGetCustomerServerInfoM2Delegate == null)) {
                this.onEndGetCustomerServerInfoM2Delegate = new EndOperationDelegate(this.OnEndGetCustomerServerInfoM2);
            }
            if ((this.onGetCustomerServerInfoM2CompletedDelegate == null)) {
                this.onGetCustomerServerInfoM2CompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCustomerServerInfoM2Completed);
            }
            base.InvokeAsync(this.onBeginGetCustomerServerInfoM2Delegate, new object[] {
                        tanent_ID,
                        url,
                        accessKey}, this.onEndGetCustomerServerInfoM2Delegate, this.onGetCustomerServerInfoM2CompletedDelegate, userState);
        }
        
        public BaseLibrary.CloudService.ServerInfo GetCustomerServerInfoM3(int AD_User_ID, string accessKey) {
            return base.Channel.GetCustomerServerInfoM3(AD_User_ID, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCustomerServerInfoM3(int AD_User_ID, string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCustomerServerInfoM3(AD_User_ID, accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public BaseLibrary.CloudService.ServerInfo EndGetCustomerServerInfoM3(System.IAsyncResult result) {
            return base.Channel.EndGetCustomerServerInfoM3(result);
        }
        
        private System.IAsyncResult OnBeginGetCustomerServerInfoM3(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int AD_User_ID = ((int)(inValues[0]));
            string accessKey = ((string)(inValues[1]));
            return this.BeginGetCustomerServerInfoM3(AD_User_ID, accessKey, callback, asyncState);
        }
        
        private object[] OnEndGetCustomerServerInfoM3(System.IAsyncResult result) {
            BaseLibrary.CloudService.ServerInfo retVal = this.EndGetCustomerServerInfoM3(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCustomerServerInfoM3Completed(object state) {
            if ((this.GetCustomerServerInfoM3Completed != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCustomerServerInfoM3Completed(this, new GetCustomerServerInfoM3CompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCustomerServerInfoM3Async(int AD_User_ID, string accessKey) {
            this.GetCustomerServerInfoM3Async(AD_User_ID, accessKey, null);
        }
        
        public void GetCustomerServerInfoM3Async(int AD_User_ID, string accessKey, object userState) {
            if ((this.onBeginGetCustomerServerInfoM3Delegate == null)) {
                this.onBeginGetCustomerServerInfoM3Delegate = new BeginOperationDelegate(this.OnBeginGetCustomerServerInfoM3);
            }
            if ((this.onEndGetCustomerServerInfoM3Delegate == null)) {
                this.onEndGetCustomerServerInfoM3Delegate = new EndOperationDelegate(this.OnEndGetCustomerServerInfoM3);
            }
            if ((this.onGetCustomerServerInfoM3CompletedDelegate == null)) {
                this.onGetCustomerServerInfoM3CompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCustomerServerInfoM3Completed);
            }
            base.InvokeAsync(this.onBeginGetCustomerServerInfoM3Delegate, new object[] {
                        AD_User_ID,
                        accessKey}, this.onEndGetCustomerServerInfoM3Delegate, this.onGetCustomerServerInfoM3CompletedDelegate, userState);
        }
        
        public BaseLibrary.CloudService.ServerInfo GetCustomerServerInfoM4(string value, string accessKey) {
            return base.Channel.GetCustomerServerInfoM4(value, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCustomerServerInfoM4(string value, string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCustomerServerInfoM4(value, accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public BaseLibrary.CloudService.ServerInfo EndGetCustomerServerInfoM4(System.IAsyncResult result) {
            return base.Channel.EndGetCustomerServerInfoM4(result);
        }
        
        private System.IAsyncResult OnBeginGetCustomerServerInfoM4(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string value = ((string)(inValues[0]));
            string accessKey = ((string)(inValues[1]));
            return this.BeginGetCustomerServerInfoM4(value, accessKey, callback, asyncState);
        }
        
        private object[] OnEndGetCustomerServerInfoM4(System.IAsyncResult result) {
            BaseLibrary.CloudService.ServerInfo retVal = this.EndGetCustomerServerInfoM4(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCustomerServerInfoM4Completed(object state) {
            if ((this.GetCustomerServerInfoM4Completed != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCustomerServerInfoM4Completed(this, new GetCustomerServerInfoM4CompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCustomerServerInfoM4Async(string value, string accessKey) {
            this.GetCustomerServerInfoM4Async(value, accessKey, null);
        }
        
        public void GetCustomerServerInfoM4Async(string value, string accessKey, object userState) {
            if ((this.onBeginGetCustomerServerInfoM4Delegate == null)) {
                this.onBeginGetCustomerServerInfoM4Delegate = new BeginOperationDelegate(this.OnBeginGetCustomerServerInfoM4);
            }
            if ((this.onEndGetCustomerServerInfoM4Delegate == null)) {
                this.onEndGetCustomerServerInfoM4Delegate = new EndOperationDelegate(this.OnEndGetCustomerServerInfoM4);
            }
            if ((this.onGetCustomerServerInfoM4CompletedDelegate == null)) {
                this.onGetCustomerServerInfoM4CompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCustomerServerInfoM4Completed);
            }
            base.InvokeAsync(this.onBeginGetCustomerServerInfoM4Delegate, new object[] {
                        value,
                        accessKey}, this.onEndGetCustomerServerInfoM4Delegate, this.onGetCustomerServerInfoM4CompletedDelegate, userState);
        }
        
        public string VerifyUserM1(string userKey, string accessKey, string originFrom) {
            return base.Channel.VerifyUserM1(userKey, accessKey, originFrom);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginVerifyUserM1(string userKey, string accessKey, string originFrom, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginVerifyUserM1(userKey, accessKey, originFrom, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndVerifyUserM1(System.IAsyncResult result) {
            return base.Channel.EndVerifyUserM1(result);
        }
        
        private System.IAsyncResult OnBeginVerifyUserM1(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userKey = ((string)(inValues[0]));
            string accessKey = ((string)(inValues[1]));
            string originFrom = ((string)(inValues[2]));
            return this.BeginVerifyUserM1(userKey, accessKey, originFrom, callback, asyncState);
        }
        
        private object[] OnEndVerifyUserM1(System.IAsyncResult result) {
            string retVal = this.EndVerifyUserM1(result);
            return new object[] {
                    retVal};
        }
        
        private void OnVerifyUserM1Completed(object state) {
            if ((this.VerifyUserM1Completed != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.VerifyUserM1Completed(this, new VerifyUserM1CompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void VerifyUserM1Async(string userKey, string accessKey, string originFrom) {
            this.VerifyUserM1Async(userKey, accessKey, originFrom, null);
        }
        
        public void VerifyUserM1Async(string userKey, string accessKey, string originFrom, object userState) {
            if ((this.onBeginVerifyUserM1Delegate == null)) {
                this.onBeginVerifyUserM1Delegate = new BeginOperationDelegate(this.OnBeginVerifyUserM1);
            }
            if ((this.onEndVerifyUserM1Delegate == null)) {
                this.onEndVerifyUserM1Delegate = new EndOperationDelegate(this.OnEndVerifyUserM1);
            }
            if ((this.onVerifyUserM1CompletedDelegate == null)) {
                this.onVerifyUserM1CompletedDelegate = new System.Threading.SendOrPostCallback(this.OnVerifyUserM1Completed);
            }
            base.InvokeAsync(this.onBeginVerifyUserM1Delegate, new object[] {
                        userKey,
                        accessKey,
                        originFrom}, this.onEndVerifyUserM1Delegate, this.onVerifyUserM1CompletedDelegate, userState);
        }
        
        public string GetUniqueUserKey(string EMail, string accessKey) {
            return base.Channel.GetUniqueUserKey(EMail, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetUniqueUserKey(string EMail, string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetUniqueUserKey(EMail, accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGetUniqueUserKey(System.IAsyncResult result) {
            return base.Channel.EndGetUniqueUserKey(result);
        }
        
        private System.IAsyncResult OnBeginGetUniqueUserKey(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string EMail = ((string)(inValues[0]));
            string accessKey = ((string)(inValues[1]));
            return this.BeginGetUniqueUserKey(EMail, accessKey, callback, asyncState);
        }
        
        private object[] OnEndGetUniqueUserKey(System.IAsyncResult result) {
            string retVal = this.EndGetUniqueUserKey(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetUniqueUserKeyCompleted(object state) {
            if ((this.GetUniqueUserKeyCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetUniqueUserKeyCompleted(this, new GetUniqueUserKeyCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetUniqueUserKeyAsync(string EMail, string accessKey) {
            this.GetUniqueUserKeyAsync(EMail, accessKey, null);
        }
        
        public void GetUniqueUserKeyAsync(string EMail, string accessKey, object userState) {
            if ((this.onBeginGetUniqueUserKeyDelegate == null)) {
                this.onBeginGetUniqueUserKeyDelegate = new BeginOperationDelegate(this.OnBeginGetUniqueUserKey);
            }
            if ((this.onEndGetUniqueUserKeyDelegate == null)) {
                this.onEndGetUniqueUserKeyDelegate = new EndOperationDelegate(this.OnEndGetUniqueUserKey);
            }
            if ((this.onGetUniqueUserKeyCompletedDelegate == null)) {
                this.onGetUniqueUserKeyCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetUniqueUserKeyCompleted);
            }
            base.InvokeAsync(this.onBeginGetUniqueUserKeyDelegate, new object[] {
                        EMail,
                        accessKey}, this.onEndGetUniqueUserKeyDelegate, this.onGetUniqueUserKeyCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BaseLibrary.CloudService.GetAmountResponse BaseLibrary.CloudService.ServiceSoap.GetAmount(BaseLibrary.CloudService.GetAmountRequest request) {
            return base.Channel.GetAmount(request);
        }
        
        public System.Nullable<decimal> GetAmount(int m_product_id, int user, string accessKey) {
            BaseLibrary.CloudService.GetAmountRequest inValue = new BaseLibrary.CloudService.GetAmountRequest();
            inValue.m_product_id = m_product_id;
            inValue.user = user;
            inValue.accessKey = accessKey;
            BaseLibrary.CloudService.GetAmountResponse retVal = ((BaseLibrary.CloudService.ServiceSoap)(this)).GetAmount(inValue);
            return retVal.GetAmountResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult BaseLibrary.CloudService.ServiceSoap.BeginGetAmount(BaseLibrary.CloudService.GetAmountRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAmount(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAmount(int m_product_id, int user, string accessKey, System.AsyncCallback callback, object asyncState) {
            BaseLibrary.CloudService.GetAmountRequest inValue = new BaseLibrary.CloudService.GetAmountRequest();
            inValue.m_product_id = m_product_id;
            inValue.user = user;
            inValue.accessKey = accessKey;
            return ((BaseLibrary.CloudService.ServiceSoap)(this)).BeginGetAmount(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BaseLibrary.CloudService.GetAmountResponse BaseLibrary.CloudService.ServiceSoap.EndGetAmount(System.IAsyncResult result) {
            return base.Channel.EndGetAmount(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Nullable<decimal> EndGetAmount(System.IAsyncResult result) {
            BaseLibrary.CloudService.GetAmountResponse retVal = ((BaseLibrary.CloudService.ServiceSoap)(this)).EndGetAmount(result);
            return retVal.GetAmountResult;
        }
        
        private System.IAsyncResult OnBeginGetAmount(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int m_product_id = ((int)(inValues[0]));
            int user = ((int)(inValues[1]));
            string accessKey = ((string)(inValues[2]));
            return this.BeginGetAmount(m_product_id, user, accessKey, callback, asyncState);
        }
        
        private object[] OnEndGetAmount(System.IAsyncResult result) {
            System.Nullable<decimal> retVal = this.EndGetAmount(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAmountCompleted(object state) {
            if ((this.GetAmountCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAmountCompleted(this, new GetAmountCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAmountAsync(int m_product_id, int user, string accessKey) {
            this.GetAmountAsync(m_product_id, user, accessKey, null);
        }
        
        public void GetAmountAsync(int m_product_id, int user, string accessKey, object userState) {
            if ((this.onBeginGetAmountDelegate == null)) {
                this.onBeginGetAmountDelegate = new BeginOperationDelegate(this.OnBeginGetAmount);
            }
            if ((this.onEndGetAmountDelegate == null)) {
                this.onEndGetAmountDelegate = new EndOperationDelegate(this.OnEndGetAmount);
            }
            if ((this.onGetAmountCompletedDelegate == null)) {
                this.onGetAmountCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAmountCompleted);
            }
            base.InvokeAsync(this.onBeginGetAmountDelegate, new object[] {
                        m_product_id,
                        user,
                        accessKey}, this.onEndGetAmountDelegate, this.onGetAmountCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BaseLibrary.CloudService.SubscribeProductResponse BaseLibrary.CloudService.ServiceSoap.SubscribeProduct(BaseLibrary.CloudService.SubscribeProductRequest request) {
            return base.Channel.SubscribeProduct(request);
        }
        
        public string SubscribeProduct(int AD_User_ID, int M_Product_ID, string fileName, System.Nullable<int> backupAfter, string ipaddress, string accessKey) {
            BaseLibrary.CloudService.SubscribeProductRequest inValue = new BaseLibrary.CloudService.SubscribeProductRequest();
            inValue.AD_User_ID = AD_User_ID;
            inValue.M_Product_ID = M_Product_ID;
            inValue.fileName = fileName;
            inValue.backupAfter = backupAfter;
            inValue.ipaddress = ipaddress;
            inValue.accessKey = accessKey;
            BaseLibrary.CloudService.SubscribeProductResponse retVal = ((BaseLibrary.CloudService.ServiceSoap)(this)).SubscribeProduct(inValue);
            return retVal.SubscribeProductResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult BaseLibrary.CloudService.ServiceSoap.BeginSubscribeProduct(BaseLibrary.CloudService.SubscribeProductRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSubscribeProduct(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSubscribeProduct(int AD_User_ID, int M_Product_ID, string fileName, System.Nullable<int> backupAfter, string ipaddress, string accessKey, System.AsyncCallback callback, object asyncState) {
            BaseLibrary.CloudService.SubscribeProductRequest inValue = new BaseLibrary.CloudService.SubscribeProductRequest();
            inValue.AD_User_ID = AD_User_ID;
            inValue.M_Product_ID = M_Product_ID;
            inValue.fileName = fileName;
            inValue.backupAfter = backupAfter;
            inValue.ipaddress = ipaddress;
            inValue.accessKey = accessKey;
            return ((BaseLibrary.CloudService.ServiceSoap)(this)).BeginSubscribeProduct(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BaseLibrary.CloudService.SubscribeProductResponse BaseLibrary.CloudService.ServiceSoap.EndSubscribeProduct(System.IAsyncResult result) {
            return base.Channel.EndSubscribeProduct(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndSubscribeProduct(System.IAsyncResult result) {
            BaseLibrary.CloudService.SubscribeProductResponse retVal = ((BaseLibrary.CloudService.ServiceSoap)(this)).EndSubscribeProduct(result);
            return retVal.SubscribeProductResult;
        }
        
        private System.IAsyncResult OnBeginSubscribeProduct(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int AD_User_ID = ((int)(inValues[0]));
            int M_Product_ID = ((int)(inValues[1]));
            string fileName = ((string)(inValues[2]));
            System.Nullable<int> backupAfter = ((System.Nullable<int>)(inValues[3]));
            string ipaddress = ((string)(inValues[4]));
            string accessKey = ((string)(inValues[5]));
            return this.BeginSubscribeProduct(AD_User_ID, M_Product_ID, fileName, backupAfter, ipaddress, accessKey, callback, asyncState);
        }
        
        private object[] OnEndSubscribeProduct(System.IAsyncResult result) {
            string retVal = this.EndSubscribeProduct(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSubscribeProductCompleted(object state) {
            if ((this.SubscribeProductCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SubscribeProductCompleted(this, new SubscribeProductCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SubscribeProductAsync(int AD_User_ID, int M_Product_ID, string fileName, System.Nullable<int> backupAfter, string ipaddress, string accessKey) {
            this.SubscribeProductAsync(AD_User_ID, M_Product_ID, fileName, backupAfter, ipaddress, accessKey, null);
        }
        
        public void SubscribeProductAsync(int AD_User_ID, int M_Product_ID, string fileName, System.Nullable<int> backupAfter, string ipaddress, string accessKey, object userState) {
            if ((this.onBeginSubscribeProductDelegate == null)) {
                this.onBeginSubscribeProductDelegate = new BeginOperationDelegate(this.OnBeginSubscribeProduct);
            }
            if ((this.onEndSubscribeProductDelegate == null)) {
                this.onEndSubscribeProductDelegate = new EndOperationDelegate(this.OnEndSubscribeProduct);
            }
            if ((this.onSubscribeProductCompletedDelegate == null)) {
                this.onSubscribeProductCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSubscribeProductCompleted);
            }
            base.InvokeAsync(this.onBeginSubscribeProductDelegate, new object[] {
                        AD_User_ID,
                        M_Product_ID,
                        fileName,
                        backupAfter,
                        ipaddress,
                        accessKey}, this.onEndSubscribeProductDelegate, this.onSubscribeProductCompletedDelegate, userState);
        }
        
        public string UnSubscribeProduct(int AD_User_ID, int M_Product_ID, string accessKey) {
            return base.Channel.UnSubscribeProduct(AD_User_ID, M_Product_ID, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUnSubscribeProduct(int AD_User_ID, int M_Product_ID, string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUnSubscribeProduct(AD_User_ID, M_Product_ID, accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndUnSubscribeProduct(System.IAsyncResult result) {
            return base.Channel.EndUnSubscribeProduct(result);
        }
        
        private System.IAsyncResult OnBeginUnSubscribeProduct(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int AD_User_ID = ((int)(inValues[0]));
            int M_Product_ID = ((int)(inValues[1]));
            string accessKey = ((string)(inValues[2]));
            return this.BeginUnSubscribeProduct(AD_User_ID, M_Product_ID, accessKey, callback, asyncState);
        }
        
        private object[] OnEndUnSubscribeProduct(System.IAsyncResult result) {
            string retVal = this.EndUnSubscribeProduct(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUnSubscribeProductCompleted(object state) {
            if ((this.UnSubscribeProductCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UnSubscribeProductCompleted(this, new UnSubscribeProductCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UnSubscribeProductAsync(int AD_User_ID, int M_Product_ID, string accessKey) {
            this.UnSubscribeProductAsync(AD_User_ID, M_Product_ID, accessKey, null);
        }
        
        public void UnSubscribeProductAsync(int AD_User_ID, int M_Product_ID, string accessKey, object userState) {
            if ((this.onBeginUnSubscribeProductDelegate == null)) {
                this.onBeginUnSubscribeProductDelegate = new BeginOperationDelegate(this.OnBeginUnSubscribeProduct);
            }
            if ((this.onEndUnSubscribeProductDelegate == null)) {
                this.onEndUnSubscribeProductDelegate = new EndOperationDelegate(this.OnEndUnSubscribeProduct);
            }
            if ((this.onUnSubscribeProductCompletedDelegate == null)) {
                this.onUnSubscribeProductCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUnSubscribeProductCompleted);
            }
            base.InvokeAsync(this.onBeginUnSubscribeProductDelegate, new object[] {
                        AD_User_ID,
                        M_Product_ID,
                        accessKey}, this.onEndUnSubscribeProductDelegate, this.onUnSubscribeProductCompletedDelegate, userState);
        }
        
        public BaseLibrary.CloudService.FTPInfo GetFTPInfo(int CS_ZoneMasterServer_ID, int M_Product_ID, string accessKey) {
            return base.Channel.GetFTPInfo(CS_ZoneMasterServer_ID, M_Product_ID, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetFTPInfo(int CS_ZoneMasterServer_ID, int M_Product_ID, string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetFTPInfo(CS_ZoneMasterServer_ID, M_Product_ID, accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public BaseLibrary.CloudService.FTPInfo EndGetFTPInfo(System.IAsyncResult result) {
            return base.Channel.EndGetFTPInfo(result);
        }
        
        private System.IAsyncResult OnBeginGetFTPInfo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int CS_ZoneMasterServer_ID = ((int)(inValues[0]));
            int M_Product_ID = ((int)(inValues[1]));
            string accessKey = ((string)(inValues[2]));
            return this.BeginGetFTPInfo(CS_ZoneMasterServer_ID, M_Product_ID, accessKey, callback, asyncState);
        }
        
        private object[] OnEndGetFTPInfo(System.IAsyncResult result) {
            BaseLibrary.CloudService.FTPInfo retVal = this.EndGetFTPInfo(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetFTPInfoCompleted(object state) {
            if ((this.GetFTPInfoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetFTPInfoCompleted(this, new GetFTPInfoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetFTPInfoAsync(int CS_ZoneMasterServer_ID, int M_Product_ID, string accessKey) {
            this.GetFTPInfoAsync(CS_ZoneMasterServer_ID, M_Product_ID, accessKey, null);
        }
        
        public void GetFTPInfoAsync(int CS_ZoneMasterServer_ID, int M_Product_ID, string accessKey, object userState) {
            if ((this.onBeginGetFTPInfoDelegate == null)) {
                this.onBeginGetFTPInfoDelegate = new BeginOperationDelegate(this.OnBeginGetFTPInfo);
            }
            if ((this.onEndGetFTPInfoDelegate == null)) {
                this.onEndGetFTPInfoDelegate = new EndOperationDelegate(this.OnEndGetFTPInfo);
            }
            if ((this.onGetFTPInfoCompletedDelegate == null)) {
                this.onGetFTPInfoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetFTPInfoCompleted);
            }
            base.InvokeAsync(this.onBeginGetFTPInfoDelegate, new object[] {
                        CS_ZoneMasterServer_ID,
                        M_Product_ID,
                        accessKey}, this.onEndGetFTPInfoDelegate, this.onGetFTPInfoCompletedDelegate, userState);
        }
        
        public string GetAllCountries(string accessKey) {
            return base.Channel.GetAllCountries(accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllCountries(string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllCountries(accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGetAllCountries(System.IAsyncResult result) {
            return base.Channel.EndGetAllCountries(result);
        }
        
        private System.IAsyncResult OnBeginGetAllCountries(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string accessKey = ((string)(inValues[0]));
            return this.BeginGetAllCountries(accessKey, callback, asyncState);
        }
        
        private object[] OnEndGetAllCountries(System.IAsyncResult result) {
            string retVal = this.EndGetAllCountries(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllCountriesCompleted(object state) {
            if ((this.GetAllCountriesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllCountriesCompleted(this, new GetAllCountriesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllCountriesAsync(string accessKey) {
            this.GetAllCountriesAsync(accessKey, null);
        }
        
        public void GetAllCountriesAsync(string accessKey, object userState) {
            if ((this.onBeginGetAllCountriesDelegate == null)) {
                this.onBeginGetAllCountriesDelegate = new BeginOperationDelegate(this.OnBeginGetAllCountries);
            }
            if ((this.onEndGetAllCountriesDelegate == null)) {
                this.onEndGetAllCountriesDelegate = new EndOperationDelegate(this.OnEndGetAllCountries);
            }
            if ((this.onGetAllCountriesCompletedDelegate == null)) {
                this.onGetAllCountriesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllCountriesCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllCountriesDelegate, new object[] {
                        accessKey}, this.onEndGetAllCountriesDelegate, this.onGetAllCountriesCompletedDelegate, userState);
        }
        
        public string GetAllCountriesFromMobile(string accessKey) {
            return base.Channel.GetAllCountriesFromMobile(accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllCountriesFromMobile(string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllCountriesFromMobile(accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGetAllCountriesFromMobile(System.IAsyncResult result) {
            return base.Channel.EndGetAllCountriesFromMobile(result);
        }
        
        private System.IAsyncResult OnBeginGetAllCountriesFromMobile(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string accessKey = ((string)(inValues[0]));
            return this.BeginGetAllCountriesFromMobile(accessKey, callback, asyncState);
        }
        
        private object[] OnEndGetAllCountriesFromMobile(System.IAsyncResult result) {
            string retVal = this.EndGetAllCountriesFromMobile(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllCountriesFromMobileCompleted(object state) {
            if ((this.GetAllCountriesFromMobileCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllCountriesFromMobileCompleted(this, new GetAllCountriesFromMobileCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllCountriesFromMobileAsync(string accessKey) {
            this.GetAllCountriesFromMobileAsync(accessKey, null);
        }
        
        public void GetAllCountriesFromMobileAsync(string accessKey, object userState) {
            if ((this.onBeginGetAllCountriesFromMobileDelegate == null)) {
                this.onBeginGetAllCountriesFromMobileDelegate = new BeginOperationDelegate(this.OnBeginGetAllCountriesFromMobile);
            }
            if ((this.onEndGetAllCountriesFromMobileDelegate == null)) {
                this.onEndGetAllCountriesFromMobileDelegate = new EndOperationDelegate(this.OnEndGetAllCountriesFromMobile);
            }
            if ((this.onGetAllCountriesFromMobileCompletedDelegate == null)) {
                this.onGetAllCountriesFromMobileCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllCountriesFromMobileCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllCountriesFromMobileDelegate, new object[] {
                        accessKey}, this.onEndGetAllCountriesFromMobileDelegate, this.onGetAllCountriesFromMobileCompletedDelegate, userState);
        }
        
        public BaseLibrary.CloudService.AssetInfo GetNewTenant(string zoneCode, string accessKey) {
            return base.Channel.GetNewTenant(zoneCode, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetNewTenant(string zoneCode, string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetNewTenant(zoneCode, accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public BaseLibrary.CloudService.AssetInfo EndGetNewTenant(System.IAsyncResult result) {
            return base.Channel.EndGetNewTenant(result);
        }
        
        private System.IAsyncResult OnBeginGetNewTenant(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string zoneCode = ((string)(inValues[0]));
            string accessKey = ((string)(inValues[1]));
            return this.BeginGetNewTenant(zoneCode, accessKey, callback, asyncState);
        }
        
        private object[] OnEndGetNewTenant(System.IAsyncResult result) {
            BaseLibrary.CloudService.AssetInfo retVal = this.EndGetNewTenant(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetNewTenantCompleted(object state) {
            if ((this.GetNewTenantCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetNewTenantCompleted(this, new GetNewTenantCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetNewTenantAsync(string zoneCode, string accessKey) {
            this.GetNewTenantAsync(zoneCode, accessKey, null);
        }
        
        public void GetNewTenantAsync(string zoneCode, string accessKey, object userState) {
            if ((this.onBeginGetNewTenantDelegate == null)) {
                this.onBeginGetNewTenantDelegate = new BeginOperationDelegate(this.OnBeginGetNewTenant);
            }
            if ((this.onEndGetNewTenantDelegate == null)) {
                this.onEndGetNewTenantDelegate = new EndOperationDelegate(this.OnEndGetNewTenant);
            }
            if ((this.onGetNewTenantCompletedDelegate == null)) {
                this.onGetNewTenantCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetNewTenantCompleted);
            }
            base.InvokeAsync(this.onBeginGetNewTenantDelegate, new object[] {
                        zoneCode,
                        accessKey}, this.onEndGetNewTenantDelegate, this.onGetNewTenantCompletedDelegate, userState);
        }
        
        public string GetRelatedProduct(int M_Product_ID, int Ad_user_ID, string SubscriptionType, string accessKey) {
            return base.Channel.GetRelatedProduct(M_Product_ID, Ad_user_ID, SubscriptionType, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetRelatedProduct(int M_Product_ID, int Ad_user_ID, string SubscriptionType, string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetRelatedProduct(M_Product_ID, Ad_user_ID, SubscriptionType, accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGetRelatedProduct(System.IAsyncResult result) {
            return base.Channel.EndGetRelatedProduct(result);
        }
        
        private System.IAsyncResult OnBeginGetRelatedProduct(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int M_Product_ID = ((int)(inValues[0]));
            int Ad_user_ID = ((int)(inValues[1]));
            string SubscriptionType = ((string)(inValues[2]));
            string accessKey = ((string)(inValues[3]));
            return this.BeginGetRelatedProduct(M_Product_ID, Ad_user_ID, SubscriptionType, accessKey, callback, asyncState);
        }
        
        private object[] OnEndGetRelatedProduct(System.IAsyncResult result) {
            string retVal = this.EndGetRelatedProduct(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetRelatedProductCompleted(object state) {
            if ((this.GetRelatedProductCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetRelatedProductCompleted(this, new GetRelatedProductCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetRelatedProductAsync(int M_Product_ID, int Ad_user_ID, string SubscriptionType, string accessKey) {
            this.GetRelatedProductAsync(M_Product_ID, Ad_user_ID, SubscriptionType, accessKey, null);
        }
        
        public void GetRelatedProductAsync(int M_Product_ID, int Ad_user_ID, string SubscriptionType, string accessKey, object userState) {
            if ((this.onBeginGetRelatedProductDelegate == null)) {
                this.onBeginGetRelatedProductDelegate = new BeginOperationDelegate(this.OnBeginGetRelatedProduct);
            }
            if ((this.onEndGetRelatedProductDelegate == null)) {
                this.onEndGetRelatedProductDelegate = new EndOperationDelegate(this.OnEndGetRelatedProduct);
            }
            if ((this.onGetRelatedProductCompletedDelegate == null)) {
                this.onGetRelatedProductCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetRelatedProductCompleted);
            }
            base.InvokeAsync(this.onBeginGetRelatedProductDelegate, new object[] {
                        M_Product_ID,
                        Ad_user_ID,
                        SubscriptionType,
                        accessKey}, this.onEndGetRelatedProductDelegate, this.onGetRelatedProductCompletedDelegate, userState);
        }
        
        public string GetCustomerAccountDetail(int Ad_User_ID, string accessKey) {
            return base.Channel.GetCustomerAccountDetail(Ad_User_ID, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCustomerAccountDetail(int Ad_User_ID, string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCustomerAccountDetail(Ad_User_ID, accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGetCustomerAccountDetail(System.IAsyncResult result) {
            return base.Channel.EndGetCustomerAccountDetail(result);
        }
        
        private System.IAsyncResult OnBeginGetCustomerAccountDetail(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int Ad_User_ID = ((int)(inValues[0]));
            string accessKey = ((string)(inValues[1]));
            return this.BeginGetCustomerAccountDetail(Ad_User_ID, accessKey, callback, asyncState);
        }
        
        private object[] OnEndGetCustomerAccountDetail(System.IAsyncResult result) {
            string retVal = this.EndGetCustomerAccountDetail(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCustomerAccountDetailCompleted(object state) {
            if ((this.GetCustomerAccountDetailCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCustomerAccountDetailCompleted(this, new GetCustomerAccountDetailCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCustomerAccountDetailAsync(int Ad_User_ID, string accessKey) {
            this.GetCustomerAccountDetailAsync(Ad_User_ID, accessKey, null);
        }
        
        public void GetCustomerAccountDetailAsync(int Ad_User_ID, string accessKey, object userState) {
            if ((this.onBeginGetCustomerAccountDetailDelegate == null)) {
                this.onBeginGetCustomerAccountDetailDelegate = new BeginOperationDelegate(this.OnBeginGetCustomerAccountDetail);
            }
            if ((this.onEndGetCustomerAccountDetailDelegate == null)) {
                this.onEndGetCustomerAccountDetailDelegate = new EndOperationDelegate(this.OnEndGetCustomerAccountDetail);
            }
            if ((this.onGetCustomerAccountDetailCompletedDelegate == null)) {
                this.onGetCustomerAccountDetailCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCustomerAccountDetailCompleted);
            }
            base.InvokeAsync(this.onBeginGetCustomerAccountDetailDelegate, new object[] {
                        Ad_User_ID,
                        accessKey}, this.onEndGetCustomerAccountDetailDelegate, this.onGetCustomerAccountDetailCompletedDelegate, userState);
        }
        
        public string GetRelatedProductM1(int AD_User_ID, string accessKey) {
            return base.Channel.GetRelatedProductM1(AD_User_ID, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetRelatedProductM1(int AD_User_ID, string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetRelatedProductM1(AD_User_ID, accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGetRelatedProductM1(System.IAsyncResult result) {
            return base.Channel.EndGetRelatedProductM1(result);
        }
        
        private System.IAsyncResult OnBeginGetRelatedProductM1(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int AD_User_ID = ((int)(inValues[0]));
            string accessKey = ((string)(inValues[1]));
            return this.BeginGetRelatedProductM1(AD_User_ID, accessKey, callback, asyncState);
        }
        
        private object[] OnEndGetRelatedProductM1(System.IAsyncResult result) {
            string retVal = this.EndGetRelatedProductM1(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetRelatedProductM1Completed(object state) {
            if ((this.GetRelatedProductM1Completed != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetRelatedProductM1Completed(this, new GetRelatedProductM1CompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetRelatedProductM1Async(int AD_User_ID, string accessKey) {
            this.GetRelatedProductM1Async(AD_User_ID, accessKey, null);
        }
        
        public void GetRelatedProductM1Async(int AD_User_ID, string accessKey, object userState) {
            if ((this.onBeginGetRelatedProductM1Delegate == null)) {
                this.onBeginGetRelatedProductM1Delegate = new BeginOperationDelegate(this.OnBeginGetRelatedProductM1);
            }
            if ((this.onEndGetRelatedProductM1Delegate == null)) {
                this.onEndGetRelatedProductM1Delegate = new EndOperationDelegate(this.OnEndGetRelatedProductM1);
            }
            if ((this.onGetRelatedProductM1CompletedDelegate == null)) {
                this.onGetRelatedProductM1CompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetRelatedProductM1Completed);
            }
            base.InvokeAsync(this.onBeginGetRelatedProductM1Delegate, new object[] {
                        AD_User_ID,
                        accessKey}, this.onEndGetRelatedProductM1Delegate, this.onGetRelatedProductM1CompletedDelegate, userState);
        }
        
        public string SetCustomerAccountDetail(int Ad_user_id, string cardName, string CSVNumber, int cardNumber, int ExpiryDate, int ExpiryMonth, int ExpiryYear, char cardType, string address, string city, string zip, int Country_id, string accessKey) {
            return base.Channel.SetCustomerAccountDetail(Ad_user_id, cardName, CSVNumber, cardNumber, ExpiryDate, ExpiryMonth, ExpiryYear, cardType, address, city, zip, Country_id, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSetCustomerAccountDetail(int Ad_user_id, string cardName, string CSVNumber, int cardNumber, int ExpiryDate, int ExpiryMonth, int ExpiryYear, char cardType, string address, string city, string zip, int Country_id, string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetCustomerAccountDetail(Ad_user_id, cardName, CSVNumber, cardNumber, ExpiryDate, ExpiryMonth, ExpiryYear, cardType, address, city, zip, Country_id, accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndSetCustomerAccountDetail(System.IAsyncResult result) {
            return base.Channel.EndSetCustomerAccountDetail(result);
        }
        
        private System.IAsyncResult OnBeginSetCustomerAccountDetail(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int Ad_user_id = ((int)(inValues[0]));
            string cardName = ((string)(inValues[1]));
            string CSVNumber = ((string)(inValues[2]));
            int cardNumber = ((int)(inValues[3]));
            int ExpiryDate = ((int)(inValues[4]));
            int ExpiryMonth = ((int)(inValues[5]));
            int ExpiryYear = ((int)(inValues[6]));
            char cardType = ((char)(inValues[7]));
            string address = ((string)(inValues[8]));
            string city = ((string)(inValues[9]));
            string zip = ((string)(inValues[10]));
            int Country_id = ((int)(inValues[11]));
            string accessKey = ((string)(inValues[12]));
            return this.BeginSetCustomerAccountDetail(Ad_user_id, cardName, CSVNumber, cardNumber, ExpiryDate, ExpiryMonth, ExpiryYear, cardType, address, city, zip, Country_id, accessKey, callback, asyncState);
        }
        
        private object[] OnEndSetCustomerAccountDetail(System.IAsyncResult result) {
            string retVal = this.EndSetCustomerAccountDetail(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSetCustomerAccountDetailCompleted(object state) {
            if ((this.SetCustomerAccountDetailCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetCustomerAccountDetailCompleted(this, new SetCustomerAccountDetailCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetCustomerAccountDetailAsync(int Ad_user_id, string cardName, string CSVNumber, int cardNumber, int ExpiryDate, int ExpiryMonth, int ExpiryYear, char cardType, string address, string city, string zip, int Country_id, string accessKey) {
            this.SetCustomerAccountDetailAsync(Ad_user_id, cardName, CSVNumber, cardNumber, ExpiryDate, ExpiryMonth, ExpiryYear, cardType, address, city, zip, Country_id, accessKey, null);
        }
        
        public void SetCustomerAccountDetailAsync(int Ad_user_id, string cardName, string CSVNumber, int cardNumber, int ExpiryDate, int ExpiryMonth, int ExpiryYear, char cardType, string address, string city, string zip, int Country_id, string accessKey, object userState) {
            if ((this.onBeginSetCustomerAccountDetailDelegate == null)) {
                this.onBeginSetCustomerAccountDetailDelegate = new BeginOperationDelegate(this.OnBeginSetCustomerAccountDetail);
            }
            if ((this.onEndSetCustomerAccountDetailDelegate == null)) {
                this.onEndSetCustomerAccountDetailDelegate = new EndOperationDelegate(this.OnEndSetCustomerAccountDetail);
            }
            if ((this.onSetCustomerAccountDetailCompletedDelegate == null)) {
                this.onSetCustomerAccountDetailCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetCustomerAccountDetailCompleted);
            }
            base.InvokeAsync(this.onBeginSetCustomerAccountDetailDelegate, new object[] {
                        Ad_user_id,
                        cardName,
                        CSVNumber,
                        cardNumber,
                        ExpiryDate,
                        ExpiryMonth,
                        ExpiryYear,
                        cardType,
                        address,
                        city,
                        zip,
                        Country_id,
                        accessKey}, this.onEndSetCustomerAccountDetailDelegate, this.onSetCustomerAccountDetailCompletedDelegate, userState);
        }
        
        public string GetCustomerNotification(int Ad_User_ID, string accessKey) {
            return base.Channel.GetCustomerNotification(Ad_User_ID, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCustomerNotification(int Ad_User_ID, string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCustomerNotification(Ad_User_ID, accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGetCustomerNotification(System.IAsyncResult result) {
            return base.Channel.EndGetCustomerNotification(result);
        }
        
        private System.IAsyncResult OnBeginGetCustomerNotification(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int Ad_User_ID = ((int)(inValues[0]));
            string accessKey = ((string)(inValues[1]));
            return this.BeginGetCustomerNotification(Ad_User_ID, accessKey, callback, asyncState);
        }
        
        private object[] OnEndGetCustomerNotification(System.IAsyncResult result) {
            string retVal = this.EndGetCustomerNotification(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCustomerNotificationCompleted(object state) {
            if ((this.GetCustomerNotificationCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCustomerNotificationCompleted(this, new GetCustomerNotificationCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCustomerNotificationAsync(int Ad_User_ID, string accessKey) {
            this.GetCustomerNotificationAsync(Ad_User_ID, accessKey, null);
        }
        
        public void GetCustomerNotificationAsync(int Ad_User_ID, string accessKey, object userState) {
            if ((this.onBeginGetCustomerNotificationDelegate == null)) {
                this.onBeginGetCustomerNotificationDelegate = new BeginOperationDelegate(this.OnBeginGetCustomerNotification);
            }
            if ((this.onEndGetCustomerNotificationDelegate == null)) {
                this.onEndGetCustomerNotificationDelegate = new EndOperationDelegate(this.OnEndGetCustomerNotification);
            }
            if ((this.onGetCustomerNotificationCompletedDelegate == null)) {
                this.onGetCustomerNotificationCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCustomerNotificationCompleted);
            }
            base.InvokeAsync(this.onBeginGetCustomerNotificationDelegate, new object[] {
                        Ad_User_ID,
                        accessKey}, this.onEndGetCustomerNotificationDelegate, this.onGetCustomerNotificationCompletedDelegate, userState);
        }
        
        public string GetCustomerNotificationM1(int Ad_Note_ID, string accessKey) {
            return base.Channel.GetCustomerNotificationM1(Ad_Note_ID, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCustomerNotificationM1(int Ad_Note_ID, string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCustomerNotificationM1(Ad_Note_ID, accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGetCustomerNotificationM1(System.IAsyncResult result) {
            return base.Channel.EndGetCustomerNotificationM1(result);
        }
        
        private System.IAsyncResult OnBeginGetCustomerNotificationM1(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int Ad_Note_ID = ((int)(inValues[0]));
            string accessKey = ((string)(inValues[1]));
            return this.BeginGetCustomerNotificationM1(Ad_Note_ID, accessKey, callback, asyncState);
        }
        
        private object[] OnEndGetCustomerNotificationM1(System.IAsyncResult result) {
            string retVal = this.EndGetCustomerNotificationM1(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCustomerNotificationM1Completed(object state) {
            if ((this.GetCustomerNotificationM1Completed != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCustomerNotificationM1Completed(this, new GetCustomerNotificationM1CompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCustomerNotificationM1Async(int Ad_Note_ID, string accessKey) {
            this.GetCustomerNotificationM1Async(Ad_Note_ID, accessKey, null);
        }
        
        public void GetCustomerNotificationM1Async(int Ad_Note_ID, string accessKey, object userState) {
            if ((this.onBeginGetCustomerNotificationM1Delegate == null)) {
                this.onBeginGetCustomerNotificationM1Delegate = new BeginOperationDelegate(this.OnBeginGetCustomerNotificationM1);
            }
            if ((this.onEndGetCustomerNotificationM1Delegate == null)) {
                this.onEndGetCustomerNotificationM1Delegate = new EndOperationDelegate(this.OnEndGetCustomerNotificationM1);
            }
            if ((this.onGetCustomerNotificationM1CompletedDelegate == null)) {
                this.onGetCustomerNotificationM1CompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCustomerNotificationM1Completed);
            }
            base.InvokeAsync(this.onBeginGetCustomerNotificationM1Delegate, new object[] {
                        Ad_Note_ID,
                        accessKey}, this.onEndGetCustomerNotificationM1Delegate, this.onGetCustomerNotificationM1CompletedDelegate, userState);
        }
        
        public string AcknowledgeCustomerNotification(int Ad_note_ID, string accessKey) {
            return base.Channel.AcknowledgeCustomerNotification(Ad_note_ID, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAcknowledgeCustomerNotification(int Ad_note_ID, string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAcknowledgeCustomerNotification(Ad_note_ID, accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndAcknowledgeCustomerNotification(System.IAsyncResult result) {
            return base.Channel.EndAcknowledgeCustomerNotification(result);
        }
        
        private System.IAsyncResult OnBeginAcknowledgeCustomerNotification(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int Ad_note_ID = ((int)(inValues[0]));
            string accessKey = ((string)(inValues[1]));
            return this.BeginAcknowledgeCustomerNotification(Ad_note_ID, accessKey, callback, asyncState);
        }
        
        private object[] OnEndAcknowledgeCustomerNotification(System.IAsyncResult result) {
            string retVal = this.EndAcknowledgeCustomerNotification(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAcknowledgeCustomerNotificationCompleted(object state) {
            if ((this.AcknowledgeCustomerNotificationCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AcknowledgeCustomerNotificationCompleted(this, new AcknowledgeCustomerNotificationCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AcknowledgeCustomerNotificationAsync(int Ad_note_ID, string accessKey) {
            this.AcknowledgeCustomerNotificationAsync(Ad_note_ID, accessKey, null);
        }
        
        public void AcknowledgeCustomerNotificationAsync(int Ad_note_ID, string accessKey, object userState) {
            if ((this.onBeginAcknowledgeCustomerNotificationDelegate == null)) {
                this.onBeginAcknowledgeCustomerNotificationDelegate = new BeginOperationDelegate(this.OnBeginAcknowledgeCustomerNotification);
            }
            if ((this.onEndAcknowledgeCustomerNotificationDelegate == null)) {
                this.onEndAcknowledgeCustomerNotificationDelegate = new EndOperationDelegate(this.OnEndAcknowledgeCustomerNotification);
            }
            if ((this.onAcknowledgeCustomerNotificationCompletedDelegate == null)) {
                this.onAcknowledgeCustomerNotificationCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAcknowledgeCustomerNotificationCompleted);
            }
            base.InvokeAsync(this.onBeginAcknowledgeCustomerNotificationDelegate, new object[] {
                        Ad_note_ID,
                        accessKey}, this.onEndAcknowledgeCustomerNotificationDelegate, this.onAcknowledgeCustomerNotificationCompletedDelegate, userState);
        }
        
        public string GetCustomerCompanyDetail(int AD_User_ID, string accessKey) {
            return base.Channel.GetCustomerCompanyDetail(AD_User_ID, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCustomerCompanyDetail(int AD_User_ID, string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCustomerCompanyDetail(AD_User_ID, accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGetCustomerCompanyDetail(System.IAsyncResult result) {
            return base.Channel.EndGetCustomerCompanyDetail(result);
        }
        
        private System.IAsyncResult OnBeginGetCustomerCompanyDetail(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int AD_User_ID = ((int)(inValues[0]));
            string accessKey = ((string)(inValues[1]));
            return this.BeginGetCustomerCompanyDetail(AD_User_ID, accessKey, callback, asyncState);
        }
        
        private object[] OnEndGetCustomerCompanyDetail(System.IAsyncResult result) {
            string retVal = this.EndGetCustomerCompanyDetail(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCustomerCompanyDetailCompleted(object state) {
            if ((this.GetCustomerCompanyDetailCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCustomerCompanyDetailCompleted(this, new GetCustomerCompanyDetailCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCustomerCompanyDetailAsync(int AD_User_ID, string accessKey) {
            this.GetCustomerCompanyDetailAsync(AD_User_ID, accessKey, null);
        }
        
        public void GetCustomerCompanyDetailAsync(int AD_User_ID, string accessKey, object userState) {
            if ((this.onBeginGetCustomerCompanyDetailDelegate == null)) {
                this.onBeginGetCustomerCompanyDetailDelegate = new BeginOperationDelegate(this.OnBeginGetCustomerCompanyDetail);
            }
            if ((this.onEndGetCustomerCompanyDetailDelegate == null)) {
                this.onEndGetCustomerCompanyDetailDelegate = new EndOperationDelegate(this.OnEndGetCustomerCompanyDetail);
            }
            if ((this.onGetCustomerCompanyDetailCompletedDelegate == null)) {
                this.onGetCustomerCompanyDetailCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCustomerCompanyDetailCompleted);
            }
            base.InvokeAsync(this.onBeginGetCustomerCompanyDetailDelegate, new object[] {
                        AD_User_ID,
                        accessKey}, this.onEndGetCustomerCompanyDetailDelegate, this.onGetCustomerCompanyDetailCompletedDelegate, userState);
        }
        
        public string Login(string username, string password, string accessKey) {
            return base.Channel.Login(username, password, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginLogin(string username, string password, string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLogin(username, password, accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndLogin(System.IAsyncResult result) {
            return base.Channel.EndLogin(result);
        }
        
        private System.IAsyncResult OnBeginLogin(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string username = ((string)(inValues[0]));
            string password = ((string)(inValues[1]));
            string accessKey = ((string)(inValues[2]));
            return this.BeginLogin(username, password, accessKey, callback, asyncState);
        }
        
        private object[] OnEndLogin(System.IAsyncResult result) {
            string retVal = this.EndLogin(result);
            return new object[] {
                    retVal};
        }
        
        private void OnLoginCompleted(object state) {
            if ((this.LoginCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LoginCompleted(this, new LoginCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LoginAsync(string username, string password, string accessKey) {
            this.LoginAsync(username, password, accessKey, null);
        }
        
        public void LoginAsync(string username, string password, string accessKey, object userState) {
            if ((this.onBeginLoginDelegate == null)) {
                this.onBeginLoginDelegate = new BeginOperationDelegate(this.OnBeginLogin);
            }
            if ((this.onEndLoginDelegate == null)) {
                this.onEndLoginDelegate = new EndOperationDelegate(this.OnEndLogin);
            }
            if ((this.onLoginCompletedDelegate == null)) {
                this.onLoginCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLoginCompleted);
            }
            base.InvokeAsync(this.onBeginLoginDelegate, new object[] {
                        username,
                        password,
                        accessKey}, this.onEndLoginDelegate, this.onLoginCompletedDelegate, userState);
        }
        
        public string LoginFromMobile(string username, string password, string accessKey) {
            return base.Channel.LoginFromMobile(username, password, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginLoginFromMobile(string username, string password, string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLoginFromMobile(username, password, accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndLoginFromMobile(System.IAsyncResult result) {
            return base.Channel.EndLoginFromMobile(result);
        }
        
        private System.IAsyncResult OnBeginLoginFromMobile(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string username = ((string)(inValues[0]));
            string password = ((string)(inValues[1]));
            string accessKey = ((string)(inValues[2]));
            return this.BeginLoginFromMobile(username, password, accessKey, callback, asyncState);
        }
        
        private object[] OnEndLoginFromMobile(System.IAsyncResult result) {
            string retVal = this.EndLoginFromMobile(result);
            return new object[] {
                    retVal};
        }
        
        private void OnLoginFromMobileCompleted(object state) {
            if ((this.LoginFromMobileCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LoginFromMobileCompleted(this, new LoginFromMobileCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LoginFromMobileAsync(string username, string password, string accessKey) {
            this.LoginFromMobileAsync(username, password, accessKey, null);
        }
        
        public void LoginFromMobileAsync(string username, string password, string accessKey, object userState) {
            if ((this.onBeginLoginFromMobileDelegate == null)) {
                this.onBeginLoginFromMobileDelegate = new BeginOperationDelegate(this.OnBeginLoginFromMobile);
            }
            if ((this.onEndLoginFromMobileDelegate == null)) {
                this.onEndLoginFromMobileDelegate = new EndOperationDelegate(this.OnEndLoginFromMobile);
            }
            if ((this.onLoginFromMobileCompletedDelegate == null)) {
                this.onLoginFromMobileCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLoginFromMobileCompleted);
            }
            base.InvokeAsync(this.onBeginLoginFromMobileDelegate, new object[] {
                        username,
                        password,
                        accessKey}, this.onEndLoginFromMobileDelegate, this.onLoginFromMobileCompletedDelegate, userState);
        }
        
        public string VLogin(string username, string password, string accessKey) {
            return base.Channel.VLogin(username, password, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginVLogin(string username, string password, string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginVLogin(username, password, accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndVLogin(System.IAsyncResult result) {
            return base.Channel.EndVLogin(result);
        }
        
        private System.IAsyncResult OnBeginVLogin(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string username = ((string)(inValues[0]));
            string password = ((string)(inValues[1]));
            string accessKey = ((string)(inValues[2]));
            return this.BeginVLogin(username, password, accessKey, callback, asyncState);
        }
        
        private object[] OnEndVLogin(System.IAsyncResult result) {
            string retVal = this.EndVLogin(result);
            return new object[] {
                    retVal};
        }
        
        private void OnVLoginCompleted(object state) {
            if ((this.VLoginCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.VLoginCompleted(this, new VLoginCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void VLoginAsync(string username, string password, string accessKey) {
            this.VLoginAsync(username, password, accessKey, null);
        }
        
        public void VLoginAsync(string username, string password, string accessKey, object userState) {
            if ((this.onBeginVLoginDelegate == null)) {
                this.onBeginVLoginDelegate = new BeginOperationDelegate(this.OnBeginVLogin);
            }
            if ((this.onEndVLoginDelegate == null)) {
                this.onEndVLoginDelegate = new EndOperationDelegate(this.OnEndVLogin);
            }
            if ((this.onVLoginCompletedDelegate == null)) {
                this.onVLoginCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnVLoginCompleted);
            }
            base.InvokeAsync(this.onBeginVLoginDelegate, new object[] {
                        username,
                        password,
                        accessKey}, this.onEndVLoginDelegate, this.onVLoginCompletedDelegate, userState);
        }
        
        public string IsFreeProduct(int Ad_User_ID, string accessKey) {
            return base.Channel.IsFreeProduct(Ad_User_ID, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginIsFreeProduct(int Ad_User_ID, string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginIsFreeProduct(Ad_User_ID, accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndIsFreeProduct(System.IAsyncResult result) {
            return base.Channel.EndIsFreeProduct(result);
        }
        
        private System.IAsyncResult OnBeginIsFreeProduct(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int Ad_User_ID = ((int)(inValues[0]));
            string accessKey = ((string)(inValues[1]));
            return this.BeginIsFreeProduct(Ad_User_ID, accessKey, callback, asyncState);
        }
        
        private object[] OnEndIsFreeProduct(System.IAsyncResult result) {
            string retVal = this.EndIsFreeProduct(result);
            return new object[] {
                    retVal};
        }
        
        private void OnIsFreeProductCompleted(object state) {
            if ((this.IsFreeProductCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.IsFreeProductCompleted(this, new IsFreeProductCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void IsFreeProductAsync(int Ad_User_ID, string accessKey) {
            this.IsFreeProductAsync(Ad_User_ID, accessKey, null);
        }
        
        public void IsFreeProductAsync(int Ad_User_ID, string accessKey, object userState) {
            if ((this.onBeginIsFreeProductDelegate == null)) {
                this.onBeginIsFreeProductDelegate = new BeginOperationDelegate(this.OnBeginIsFreeProduct);
            }
            if ((this.onEndIsFreeProductDelegate == null)) {
                this.onEndIsFreeProductDelegate = new EndOperationDelegate(this.OnEndIsFreeProduct);
            }
            if ((this.onIsFreeProductCompletedDelegate == null)) {
                this.onIsFreeProductCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnIsFreeProductCompleted);
            }
            base.InvokeAsync(this.onBeginIsFreeProductDelegate, new object[] {
                        Ad_User_ID,
                        accessKey}, this.onEndIsFreeProductDelegate, this.onIsFreeProductCompletedDelegate, userState);
        }
        
        public string CheckUserVerifiedM1(int Ad_User_ID, string accessKey) {
            return base.Channel.CheckUserVerifiedM1(Ad_User_ID, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCheckUserVerifiedM1(int Ad_User_ID, string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCheckUserVerifiedM1(Ad_User_ID, accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndCheckUserVerifiedM1(System.IAsyncResult result) {
            return base.Channel.EndCheckUserVerifiedM1(result);
        }
        
        private System.IAsyncResult OnBeginCheckUserVerifiedM1(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int Ad_User_ID = ((int)(inValues[0]));
            string accessKey = ((string)(inValues[1]));
            return this.BeginCheckUserVerifiedM1(Ad_User_ID, accessKey, callback, asyncState);
        }
        
        private object[] OnEndCheckUserVerifiedM1(System.IAsyncResult result) {
            string retVal = this.EndCheckUserVerifiedM1(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCheckUserVerifiedM1Completed(object state) {
            if ((this.CheckUserVerifiedM1Completed != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CheckUserVerifiedM1Completed(this, new CheckUserVerifiedM1CompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CheckUserVerifiedM1Async(int Ad_User_ID, string accessKey) {
            this.CheckUserVerifiedM1Async(Ad_User_ID, accessKey, null);
        }
        
        public void CheckUserVerifiedM1Async(int Ad_User_ID, string accessKey, object userState) {
            if ((this.onBeginCheckUserVerifiedM1Delegate == null)) {
                this.onBeginCheckUserVerifiedM1Delegate = new BeginOperationDelegate(this.OnBeginCheckUserVerifiedM1);
            }
            if ((this.onEndCheckUserVerifiedM1Delegate == null)) {
                this.onEndCheckUserVerifiedM1Delegate = new EndOperationDelegate(this.OnEndCheckUserVerifiedM1);
            }
            if ((this.onCheckUserVerifiedM1CompletedDelegate == null)) {
                this.onCheckUserVerifiedM1CompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCheckUserVerifiedM1Completed);
            }
            base.InvokeAsync(this.onBeginCheckUserVerifiedM1Delegate, new object[] {
                        Ad_User_ID,
                        accessKey}, this.onEndCheckUserVerifiedM1Delegate, this.onCheckUserVerifiedM1CompletedDelegate, userState);
        }
        
        public string CheckUserVerifiedM2(string username, string password, string accessKey) {
            return base.Channel.CheckUserVerifiedM2(username, password, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCheckUserVerifiedM2(string username, string password, string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCheckUserVerifiedM2(username, password, accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndCheckUserVerifiedM2(System.IAsyncResult result) {
            return base.Channel.EndCheckUserVerifiedM2(result);
        }
        
        private System.IAsyncResult OnBeginCheckUserVerifiedM2(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string username = ((string)(inValues[0]));
            string password = ((string)(inValues[1]));
            string accessKey = ((string)(inValues[2]));
            return this.BeginCheckUserVerifiedM2(username, password, accessKey, callback, asyncState);
        }
        
        private object[] OnEndCheckUserVerifiedM2(System.IAsyncResult result) {
            string retVal = this.EndCheckUserVerifiedM2(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCheckUserVerifiedM2Completed(object state) {
            if ((this.CheckUserVerifiedM2Completed != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CheckUserVerifiedM2Completed(this, new CheckUserVerifiedM2CompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CheckUserVerifiedM2Async(string username, string password, string accessKey) {
            this.CheckUserVerifiedM2Async(username, password, accessKey, null);
        }
        
        public void CheckUserVerifiedM2Async(string username, string password, string accessKey, object userState) {
            if ((this.onBeginCheckUserVerifiedM2Delegate == null)) {
                this.onBeginCheckUserVerifiedM2Delegate = new BeginOperationDelegate(this.OnBeginCheckUserVerifiedM2);
            }
            if ((this.onEndCheckUserVerifiedM2Delegate == null)) {
                this.onEndCheckUserVerifiedM2Delegate = new EndOperationDelegate(this.OnEndCheckUserVerifiedM2);
            }
            if ((this.onCheckUserVerifiedM2CompletedDelegate == null)) {
                this.onCheckUserVerifiedM2CompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCheckUserVerifiedM2Completed);
            }
            base.InvokeAsync(this.onBeginCheckUserVerifiedM2Delegate, new object[] {
                        username,
                        password,
                        accessKey}, this.onEndCheckUserVerifiedM2Delegate, this.onCheckUserVerifiedM2CompletedDelegate, userState);
        }
        
        public string GetCustomerDBBackUp(int Ad_User_ID, string accessKey) {
            return base.Channel.GetCustomerDBBackUp(Ad_User_ID, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCustomerDBBackUp(int Ad_User_ID, string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCustomerDBBackUp(Ad_User_ID, accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGetCustomerDBBackUp(System.IAsyncResult result) {
            return base.Channel.EndGetCustomerDBBackUp(result);
        }
        
        private System.IAsyncResult OnBeginGetCustomerDBBackUp(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int Ad_User_ID = ((int)(inValues[0]));
            string accessKey = ((string)(inValues[1]));
            return this.BeginGetCustomerDBBackUp(Ad_User_ID, accessKey, callback, asyncState);
        }
        
        private object[] OnEndGetCustomerDBBackUp(System.IAsyncResult result) {
            string retVal = this.EndGetCustomerDBBackUp(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCustomerDBBackUpCompleted(object state) {
            if ((this.GetCustomerDBBackUpCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCustomerDBBackUpCompleted(this, new GetCustomerDBBackUpCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCustomerDBBackUpAsync(int Ad_User_ID, string accessKey) {
            this.GetCustomerDBBackUpAsync(Ad_User_ID, accessKey, null);
        }
        
        public void GetCustomerDBBackUpAsync(int Ad_User_ID, string accessKey, object userState) {
            if ((this.onBeginGetCustomerDBBackUpDelegate == null)) {
                this.onBeginGetCustomerDBBackUpDelegate = new BeginOperationDelegate(this.OnBeginGetCustomerDBBackUp);
            }
            if ((this.onEndGetCustomerDBBackUpDelegate == null)) {
                this.onEndGetCustomerDBBackUpDelegate = new EndOperationDelegate(this.OnEndGetCustomerDBBackUp);
            }
            if ((this.onGetCustomerDBBackUpCompletedDelegate == null)) {
                this.onGetCustomerDBBackUpCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCustomerDBBackUpCompleted);
            }
            base.InvokeAsync(this.onBeginGetCustomerDBBackUpDelegate, new object[] {
                        Ad_User_ID,
                        accessKey}, this.onEndGetCustomerDBBackUpDelegate, this.onGetCustomerDBBackUpCompletedDelegate, userState);
        }
        
        public string RestoreDBBackUp(int Ad_User_ID, string fileName, string ipaddress, string accessKey) {
            return base.Channel.RestoreDBBackUp(Ad_User_ID, fileName, ipaddress, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginRestoreDBBackUp(int Ad_User_ID, string fileName, string ipaddress, string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRestoreDBBackUp(Ad_User_ID, fileName, ipaddress, accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndRestoreDBBackUp(System.IAsyncResult result) {
            return base.Channel.EndRestoreDBBackUp(result);
        }
        
        private System.IAsyncResult OnBeginRestoreDBBackUp(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int Ad_User_ID = ((int)(inValues[0]));
            string fileName = ((string)(inValues[1]));
            string ipaddress = ((string)(inValues[2]));
            string accessKey = ((string)(inValues[3]));
            return this.BeginRestoreDBBackUp(Ad_User_ID, fileName, ipaddress, accessKey, callback, asyncState);
        }
        
        private object[] OnEndRestoreDBBackUp(System.IAsyncResult result) {
            string retVal = this.EndRestoreDBBackUp(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRestoreDBBackUpCompleted(object state) {
            if ((this.RestoreDBBackUpCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RestoreDBBackUpCompleted(this, new RestoreDBBackUpCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RestoreDBBackUpAsync(int Ad_User_ID, string fileName, string ipaddress, string accessKey) {
            this.RestoreDBBackUpAsync(Ad_User_ID, fileName, ipaddress, accessKey, null);
        }
        
        public void RestoreDBBackUpAsync(int Ad_User_ID, string fileName, string ipaddress, string accessKey, object userState) {
            if ((this.onBeginRestoreDBBackUpDelegate == null)) {
                this.onBeginRestoreDBBackUpDelegate = new BeginOperationDelegate(this.OnBeginRestoreDBBackUp);
            }
            if ((this.onEndRestoreDBBackUpDelegate == null)) {
                this.onEndRestoreDBBackUpDelegate = new EndOperationDelegate(this.OnEndRestoreDBBackUp);
            }
            if ((this.onRestoreDBBackUpCompletedDelegate == null)) {
                this.onRestoreDBBackUpCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRestoreDBBackUpCompleted);
            }
            base.InvokeAsync(this.onBeginRestoreDBBackUpDelegate, new object[] {
                        Ad_User_ID,
                        fileName,
                        ipaddress,
                        accessKey}, this.onEndRestoreDBBackUpDelegate, this.onRestoreDBBackUpCompletedDelegate, userState);
        }
        
        public string VerifyUserM2(int Ad_user_ID, string accessKey) {
            return base.Channel.VerifyUserM2(Ad_user_ID, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginVerifyUserM2(int Ad_user_ID, string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginVerifyUserM2(Ad_user_ID, accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndVerifyUserM2(System.IAsyncResult result) {
            return base.Channel.EndVerifyUserM2(result);
        }
        
        private System.IAsyncResult OnBeginVerifyUserM2(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int Ad_user_ID = ((int)(inValues[0]));
            string accessKey = ((string)(inValues[1]));
            return this.BeginVerifyUserM2(Ad_user_ID, accessKey, callback, asyncState);
        }
        
        private object[] OnEndVerifyUserM2(System.IAsyncResult result) {
            string retVal = this.EndVerifyUserM2(result);
            return new object[] {
                    retVal};
        }
        
        private void OnVerifyUserM2Completed(object state) {
            if ((this.VerifyUserM2Completed != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.VerifyUserM2Completed(this, new VerifyUserM2CompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void VerifyUserM2Async(int Ad_user_ID, string accessKey) {
            this.VerifyUserM2Async(Ad_user_ID, accessKey, null);
        }
        
        public void VerifyUserM2Async(int Ad_user_ID, string accessKey, object userState) {
            if ((this.onBeginVerifyUserM2Delegate == null)) {
                this.onBeginVerifyUserM2Delegate = new BeginOperationDelegate(this.OnBeginVerifyUserM2);
            }
            if ((this.onEndVerifyUserM2Delegate == null)) {
                this.onEndVerifyUserM2Delegate = new EndOperationDelegate(this.OnEndVerifyUserM2);
            }
            if ((this.onVerifyUserM2CompletedDelegate == null)) {
                this.onVerifyUserM2CompletedDelegate = new System.Threading.SendOrPostCallback(this.OnVerifyUserM2Completed);
            }
            base.InvokeAsync(this.onBeginVerifyUserM2Delegate, new object[] {
                        Ad_user_ID,
                        accessKey}, this.onEndVerifyUserM2Delegate, this.onVerifyUserM2CompletedDelegate, userState);
        }
        
        public string VerifyUserM3(string userName, string password, string accessKey) {
            return base.Channel.VerifyUserM3(userName, password, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginVerifyUserM3(string userName, string password, string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginVerifyUserM3(userName, password, accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndVerifyUserM3(System.IAsyncResult result) {
            return base.Channel.EndVerifyUserM3(result);
        }
        
        private System.IAsyncResult OnBeginVerifyUserM3(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userName = ((string)(inValues[0]));
            string password = ((string)(inValues[1]));
            string accessKey = ((string)(inValues[2]));
            return this.BeginVerifyUserM3(userName, password, accessKey, callback, asyncState);
        }
        
        private object[] OnEndVerifyUserM3(System.IAsyncResult result) {
            string retVal = this.EndVerifyUserM3(result);
            return new object[] {
                    retVal};
        }
        
        private void OnVerifyUserM3Completed(object state) {
            if ((this.VerifyUserM3Completed != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.VerifyUserM3Completed(this, new VerifyUserM3CompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void VerifyUserM3Async(string userName, string password, string accessKey) {
            this.VerifyUserM3Async(userName, password, accessKey, null);
        }
        
        public void VerifyUserM3Async(string userName, string password, string accessKey, object userState) {
            if ((this.onBeginVerifyUserM3Delegate == null)) {
                this.onBeginVerifyUserM3Delegate = new BeginOperationDelegate(this.OnBeginVerifyUserM3);
            }
            if ((this.onEndVerifyUserM3Delegate == null)) {
                this.onEndVerifyUserM3Delegate = new EndOperationDelegate(this.OnEndVerifyUserM3);
            }
            if ((this.onVerifyUserM3CompletedDelegate == null)) {
                this.onVerifyUserM3CompletedDelegate = new System.Threading.SendOrPostCallback(this.OnVerifyUserM3Completed);
            }
            base.InvokeAsync(this.onBeginVerifyUserM3Delegate, new object[] {
                        userName,
                        password,
                        accessKey}, this.onEndVerifyUserM3Delegate, this.onVerifyUserM3CompletedDelegate, userState);
        }
        
        public string VerifyUserM4(string LicenseKey, string accessKey) {
            return base.Channel.VerifyUserM4(LicenseKey, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginVerifyUserM4(string LicenseKey, string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginVerifyUserM4(LicenseKey, accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndVerifyUserM4(System.IAsyncResult result) {
            return base.Channel.EndVerifyUserM4(result);
        }
        
        private System.IAsyncResult OnBeginVerifyUserM4(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string LicenseKey = ((string)(inValues[0]));
            string accessKey = ((string)(inValues[1]));
            return this.BeginVerifyUserM4(LicenseKey, accessKey, callback, asyncState);
        }
        
        private object[] OnEndVerifyUserM4(System.IAsyncResult result) {
            string retVal = this.EndVerifyUserM4(result);
            return new object[] {
                    retVal};
        }
        
        private void OnVerifyUserM4Completed(object state) {
            if ((this.VerifyUserM4Completed != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.VerifyUserM4Completed(this, new VerifyUserM4CompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void VerifyUserM4Async(string LicenseKey, string accessKey) {
            this.VerifyUserM4Async(LicenseKey, accessKey, null);
        }
        
        public void VerifyUserM4Async(string LicenseKey, string accessKey, object userState) {
            if ((this.onBeginVerifyUserM4Delegate == null)) {
                this.onBeginVerifyUserM4Delegate = new BeginOperationDelegate(this.OnBeginVerifyUserM4);
            }
            if ((this.onEndVerifyUserM4Delegate == null)) {
                this.onEndVerifyUserM4Delegate = new EndOperationDelegate(this.OnEndVerifyUserM4);
            }
            if ((this.onVerifyUserM4CompletedDelegate == null)) {
                this.onVerifyUserM4CompletedDelegate = new System.Threading.SendOrPostCallback(this.OnVerifyUserM4Completed);
            }
            base.InvokeAsync(this.onBeginVerifyUserM4Delegate, new object[] {
                        LicenseKey,
                        accessKey}, this.onEndVerifyUserM4Delegate, this.onVerifyUserM4CompletedDelegate, userState);
        }
        
        public string DeleteDBBackUp(int AD_User_ID, string FileName, int R_Request_ID, string ipaddress, string accessKey) {
            return base.Channel.DeleteDBBackUp(AD_User_ID, FileName, R_Request_ID, ipaddress, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteDBBackUp(int AD_User_ID, string FileName, int R_Request_ID, string ipaddress, string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteDBBackUp(AD_User_ID, FileName, R_Request_ID, ipaddress, accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndDeleteDBBackUp(System.IAsyncResult result) {
            return base.Channel.EndDeleteDBBackUp(result);
        }
        
        private System.IAsyncResult OnBeginDeleteDBBackUp(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int AD_User_ID = ((int)(inValues[0]));
            string FileName = ((string)(inValues[1]));
            int R_Request_ID = ((int)(inValues[2]));
            string ipaddress = ((string)(inValues[3]));
            string accessKey = ((string)(inValues[4]));
            return this.BeginDeleteDBBackUp(AD_User_ID, FileName, R_Request_ID, ipaddress, accessKey, callback, asyncState);
        }
        
        private object[] OnEndDeleteDBBackUp(System.IAsyncResult result) {
            string retVal = this.EndDeleteDBBackUp(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeleteDBBackUpCompleted(object state) {
            if ((this.DeleteDBBackUpCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteDBBackUpCompleted(this, new DeleteDBBackUpCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteDBBackUpAsync(int AD_User_ID, string FileName, int R_Request_ID, string ipaddress, string accessKey) {
            this.DeleteDBBackUpAsync(AD_User_ID, FileName, R_Request_ID, ipaddress, accessKey, null);
        }
        
        public void DeleteDBBackUpAsync(int AD_User_ID, string FileName, int R_Request_ID, string ipaddress, string accessKey, object userState) {
            if ((this.onBeginDeleteDBBackUpDelegate == null)) {
                this.onBeginDeleteDBBackUpDelegate = new BeginOperationDelegate(this.OnBeginDeleteDBBackUp);
            }
            if ((this.onEndDeleteDBBackUpDelegate == null)) {
                this.onEndDeleteDBBackUpDelegate = new EndOperationDelegate(this.OnEndDeleteDBBackUp);
            }
            if ((this.onDeleteDBBackUpCompletedDelegate == null)) {
                this.onDeleteDBBackUpCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteDBBackUpCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteDBBackUpDelegate, new object[] {
                        AD_User_ID,
                        FileName,
                        R_Request_ID,
                        ipaddress,
                        accessKey}, this.onEndDeleteDBBackUpDelegate, this.onDeleteDBBackUpCompletedDelegate, userState);
        }
        
        public string CreateBackUp(int AD_User_ID, string Comment, string ipaddress, string accessKey) {
            return base.Channel.CreateBackUp(AD_User_ID, Comment, ipaddress, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCreateBackUp(int AD_User_ID, string Comment, string ipaddress, string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCreateBackUp(AD_User_ID, Comment, ipaddress, accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndCreateBackUp(System.IAsyncResult result) {
            return base.Channel.EndCreateBackUp(result);
        }
        
        private System.IAsyncResult OnBeginCreateBackUp(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int AD_User_ID = ((int)(inValues[0]));
            string Comment = ((string)(inValues[1]));
            string ipaddress = ((string)(inValues[2]));
            string accessKey = ((string)(inValues[3]));
            return this.BeginCreateBackUp(AD_User_ID, Comment, ipaddress, accessKey, callback, asyncState);
        }
        
        private object[] OnEndCreateBackUp(System.IAsyncResult result) {
            string retVal = this.EndCreateBackUp(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCreateBackUpCompleted(object state) {
            if ((this.CreateBackUpCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CreateBackUpCompleted(this, new CreateBackUpCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CreateBackUpAsync(int AD_User_ID, string Comment, string ipaddress, string accessKey) {
            this.CreateBackUpAsync(AD_User_ID, Comment, ipaddress, accessKey, null);
        }
        
        public void CreateBackUpAsync(int AD_User_ID, string Comment, string ipaddress, string accessKey, object userState) {
            if ((this.onBeginCreateBackUpDelegate == null)) {
                this.onBeginCreateBackUpDelegate = new BeginOperationDelegate(this.OnBeginCreateBackUp);
            }
            if ((this.onEndCreateBackUpDelegate == null)) {
                this.onEndCreateBackUpDelegate = new EndOperationDelegate(this.OnEndCreateBackUp);
            }
            if ((this.onCreateBackUpCompletedDelegate == null)) {
                this.onCreateBackUpCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCreateBackUpCompleted);
            }
            base.InvokeAsync(this.onBeginCreateBackUpDelegate, new object[] {
                        AD_User_ID,
                        Comment,
                        ipaddress,
                        accessKey}, this.onEndCreateBackUpDelegate, this.onCreateBackUpCompletedDelegate, userState);
        }
        
        public string ChangeAdminPasswordOnClientERP(string username, string newPassword, int AD_User_ID, int Tenant_ID, int AdminUser_ID, string accessKey) {
            return base.Channel.ChangeAdminPasswordOnClientERP(username, newPassword, AD_User_ID, Tenant_ID, AdminUser_ID, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginChangeAdminPasswordOnClientERP(string username, string newPassword, int AD_User_ID, int Tenant_ID, int AdminUser_ID, string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginChangeAdminPasswordOnClientERP(username, newPassword, AD_User_ID, Tenant_ID, AdminUser_ID, accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndChangeAdminPasswordOnClientERP(System.IAsyncResult result) {
            return base.Channel.EndChangeAdminPasswordOnClientERP(result);
        }
        
        private System.IAsyncResult OnBeginChangeAdminPasswordOnClientERP(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string username = ((string)(inValues[0]));
            string newPassword = ((string)(inValues[1]));
            int AD_User_ID = ((int)(inValues[2]));
            int Tenant_ID = ((int)(inValues[3]));
            int AdminUser_ID = ((int)(inValues[4]));
            string accessKey = ((string)(inValues[5]));
            return this.BeginChangeAdminPasswordOnClientERP(username, newPassword, AD_User_ID, Tenant_ID, AdminUser_ID, accessKey, callback, asyncState);
        }
        
        private object[] OnEndChangeAdminPasswordOnClientERP(System.IAsyncResult result) {
            string retVal = this.EndChangeAdminPasswordOnClientERP(result);
            return new object[] {
                    retVal};
        }
        
        private void OnChangeAdminPasswordOnClientERPCompleted(object state) {
            if ((this.ChangeAdminPasswordOnClientERPCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ChangeAdminPasswordOnClientERPCompleted(this, new ChangeAdminPasswordOnClientERPCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ChangeAdminPasswordOnClientERPAsync(string username, string newPassword, int AD_User_ID, int Tenant_ID, int AdminUser_ID, string accessKey) {
            this.ChangeAdminPasswordOnClientERPAsync(username, newPassword, AD_User_ID, Tenant_ID, AdminUser_ID, accessKey, null);
        }
        
        public void ChangeAdminPasswordOnClientERPAsync(string username, string newPassword, int AD_User_ID, int Tenant_ID, int AdminUser_ID, string accessKey, object userState) {
            if ((this.onBeginChangeAdminPasswordOnClientERPDelegate == null)) {
                this.onBeginChangeAdminPasswordOnClientERPDelegate = new BeginOperationDelegate(this.OnBeginChangeAdminPasswordOnClientERP);
            }
            if ((this.onEndChangeAdminPasswordOnClientERPDelegate == null)) {
                this.onEndChangeAdminPasswordOnClientERPDelegate = new EndOperationDelegate(this.OnEndChangeAdminPasswordOnClientERP);
            }
            if ((this.onChangeAdminPasswordOnClientERPCompletedDelegate == null)) {
                this.onChangeAdminPasswordOnClientERPCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnChangeAdminPasswordOnClientERPCompleted);
            }
            base.InvokeAsync(this.onBeginChangeAdminPasswordOnClientERPDelegate, new object[] {
                        username,
                        newPassword,
                        AD_User_ID,
                        Tenant_ID,
                        AdminUser_ID,
                        accessKey}, this.onEndChangeAdminPasswordOnClientERPDelegate, this.onChangeAdminPasswordOnClientERPCompletedDelegate, userState);
        }
        
        public string GetCustomerZoneCode(int AD_User_ID, string accessKey) {
            return base.Channel.GetCustomerZoneCode(AD_User_ID, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCustomerZoneCode(int AD_User_ID, string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCustomerZoneCode(AD_User_ID, accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGetCustomerZoneCode(System.IAsyncResult result) {
            return base.Channel.EndGetCustomerZoneCode(result);
        }
        
        private System.IAsyncResult OnBeginGetCustomerZoneCode(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int AD_User_ID = ((int)(inValues[0]));
            string accessKey = ((string)(inValues[1]));
            return this.BeginGetCustomerZoneCode(AD_User_ID, accessKey, callback, asyncState);
        }
        
        private object[] OnEndGetCustomerZoneCode(System.IAsyncResult result) {
            string retVal = this.EndGetCustomerZoneCode(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCustomerZoneCodeCompleted(object state) {
            if ((this.GetCustomerZoneCodeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCustomerZoneCodeCompleted(this, new GetCustomerZoneCodeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCustomerZoneCodeAsync(int AD_User_ID, string accessKey) {
            this.GetCustomerZoneCodeAsync(AD_User_ID, accessKey, null);
        }
        
        public void GetCustomerZoneCodeAsync(int AD_User_ID, string accessKey, object userState) {
            if ((this.onBeginGetCustomerZoneCodeDelegate == null)) {
                this.onBeginGetCustomerZoneCodeDelegate = new BeginOperationDelegate(this.OnBeginGetCustomerZoneCode);
            }
            if ((this.onEndGetCustomerZoneCodeDelegate == null)) {
                this.onEndGetCustomerZoneCodeDelegate = new EndOperationDelegate(this.OnEndGetCustomerZoneCode);
            }
            if ((this.onGetCustomerZoneCodeCompletedDelegate == null)) {
                this.onGetCustomerZoneCodeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCustomerZoneCodeCompleted);
            }
            base.InvokeAsync(this.onBeginGetCustomerZoneCodeDelegate, new object[] {
                        AD_User_ID,
                        accessKey}, this.onEndGetCustomerZoneCodeDelegate, this.onGetCustomerZoneCodeCompletedDelegate, userState);
        }
        
        public string ForgetPassword(string UserEmail, int AD_User_ID, int AdminUser_ID, string accessKey) {
            return base.Channel.ForgetPassword(UserEmail, AD_User_ID, AdminUser_ID, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginForgetPassword(string UserEmail, int AD_User_ID, int AdminUser_ID, string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginForgetPassword(UserEmail, AD_User_ID, AdminUser_ID, accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndForgetPassword(System.IAsyncResult result) {
            return base.Channel.EndForgetPassword(result);
        }
        
        private System.IAsyncResult OnBeginForgetPassword(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string UserEmail = ((string)(inValues[0]));
            int AD_User_ID = ((int)(inValues[1]));
            int AdminUser_ID = ((int)(inValues[2]));
            string accessKey = ((string)(inValues[3]));
            return this.BeginForgetPassword(UserEmail, AD_User_ID, AdminUser_ID, accessKey, callback, asyncState);
        }
        
        private object[] OnEndForgetPassword(System.IAsyncResult result) {
            string retVal = this.EndForgetPassword(result);
            return new object[] {
                    retVal};
        }
        
        private void OnForgetPasswordCompleted(object state) {
            if ((this.ForgetPasswordCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ForgetPasswordCompleted(this, new ForgetPasswordCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ForgetPasswordAsync(string UserEmail, int AD_User_ID, int AdminUser_ID, string accessKey) {
            this.ForgetPasswordAsync(UserEmail, AD_User_ID, AdminUser_ID, accessKey, null);
        }
        
        public void ForgetPasswordAsync(string UserEmail, int AD_User_ID, int AdminUser_ID, string accessKey, object userState) {
            if ((this.onBeginForgetPasswordDelegate == null)) {
                this.onBeginForgetPasswordDelegate = new BeginOperationDelegate(this.OnBeginForgetPassword);
            }
            if ((this.onEndForgetPasswordDelegate == null)) {
                this.onEndForgetPasswordDelegate = new EndOperationDelegate(this.OnEndForgetPassword);
            }
            if ((this.onForgetPasswordCompletedDelegate == null)) {
                this.onForgetPasswordCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnForgetPasswordCompleted);
            }
            base.InvokeAsync(this.onBeginForgetPasswordDelegate, new object[] {
                        UserEmail,
                        AD_User_ID,
                        AdminUser_ID,
                        accessKey}, this.onEndForgetPasswordDelegate, this.onForgetPasswordCompletedDelegate, userState);
        }
        
        public string VForgetPassword(string UserEmail, int AD_User_ID, int AdminUser_ID, string accessKey) {
            return base.Channel.VForgetPassword(UserEmail, AD_User_ID, AdminUser_ID, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginVForgetPassword(string UserEmail, int AD_User_ID, int AdminUser_ID, string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginVForgetPassword(UserEmail, AD_User_ID, AdminUser_ID, accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndVForgetPassword(System.IAsyncResult result) {
            return base.Channel.EndVForgetPassword(result);
        }
        
        private System.IAsyncResult OnBeginVForgetPassword(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string UserEmail = ((string)(inValues[0]));
            int AD_User_ID = ((int)(inValues[1]));
            int AdminUser_ID = ((int)(inValues[2]));
            string accessKey = ((string)(inValues[3]));
            return this.BeginVForgetPassword(UserEmail, AD_User_ID, AdminUser_ID, accessKey, callback, asyncState);
        }
        
        private object[] OnEndVForgetPassword(System.IAsyncResult result) {
            string retVal = this.EndVForgetPassword(result);
            return new object[] {
                    retVal};
        }
        
        private void OnVForgetPasswordCompleted(object state) {
            if ((this.VForgetPasswordCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.VForgetPasswordCompleted(this, new VForgetPasswordCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void VForgetPasswordAsync(string UserEmail, int AD_User_ID, int AdminUser_ID, string accessKey) {
            this.VForgetPasswordAsync(UserEmail, AD_User_ID, AdminUser_ID, accessKey, null);
        }
        
        public void VForgetPasswordAsync(string UserEmail, int AD_User_ID, int AdminUser_ID, string accessKey, object userState) {
            if ((this.onBeginVForgetPasswordDelegate == null)) {
                this.onBeginVForgetPasswordDelegate = new BeginOperationDelegate(this.OnBeginVForgetPassword);
            }
            if ((this.onEndVForgetPasswordDelegate == null)) {
                this.onEndVForgetPasswordDelegate = new EndOperationDelegate(this.OnEndVForgetPassword);
            }
            if ((this.onVForgetPasswordCompletedDelegate == null)) {
                this.onVForgetPasswordCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnVForgetPasswordCompleted);
            }
            base.InvokeAsync(this.onBeginVForgetPasswordDelegate, new object[] {
                        UserEmail,
                        AD_User_ID,
                        AdminUser_ID,
                        accessKey}, this.onEndVForgetPasswordDelegate, this.onVForgetPasswordCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BaseLibrary.CloudService.UpdateAssetResponse BaseLibrary.CloudService.ServiceSoap.UpdateAsset(BaseLibrary.CloudService.UpdateAssetRequest request) {
            return base.Channel.UpdateAsset(request);
        }
        
        public string UpdateAsset(int A_Asset_ID, System.Nullable<bool> isAppServerCreated, System.Nullable<bool> isDBServerCreated, bool ISPSServerCreated, string fileVersion, string accessKey) {
            BaseLibrary.CloudService.UpdateAssetRequest inValue = new BaseLibrary.CloudService.UpdateAssetRequest();
            inValue.A_Asset_ID = A_Asset_ID;
            inValue.isAppServerCreated = isAppServerCreated;
            inValue.isDBServerCreated = isDBServerCreated;
            inValue.ISPSServerCreated = ISPSServerCreated;
            inValue.fileVersion = fileVersion;
            inValue.accessKey = accessKey;
            BaseLibrary.CloudService.UpdateAssetResponse retVal = ((BaseLibrary.CloudService.ServiceSoap)(this)).UpdateAsset(inValue);
            return retVal.UpdateAssetResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult BaseLibrary.CloudService.ServiceSoap.BeginUpdateAsset(BaseLibrary.CloudService.UpdateAssetRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateAsset(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateAsset(int A_Asset_ID, System.Nullable<bool> isAppServerCreated, System.Nullable<bool> isDBServerCreated, bool ISPSServerCreated, string fileVersion, string accessKey, System.AsyncCallback callback, object asyncState) {
            BaseLibrary.CloudService.UpdateAssetRequest inValue = new BaseLibrary.CloudService.UpdateAssetRequest();
            inValue.A_Asset_ID = A_Asset_ID;
            inValue.isAppServerCreated = isAppServerCreated;
            inValue.isDBServerCreated = isDBServerCreated;
            inValue.ISPSServerCreated = ISPSServerCreated;
            inValue.fileVersion = fileVersion;
            inValue.accessKey = accessKey;
            return ((BaseLibrary.CloudService.ServiceSoap)(this)).BeginUpdateAsset(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BaseLibrary.CloudService.UpdateAssetResponse BaseLibrary.CloudService.ServiceSoap.EndUpdateAsset(System.IAsyncResult result) {
            return base.Channel.EndUpdateAsset(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndUpdateAsset(System.IAsyncResult result) {
            BaseLibrary.CloudService.UpdateAssetResponse retVal = ((BaseLibrary.CloudService.ServiceSoap)(this)).EndUpdateAsset(result);
            return retVal.UpdateAssetResult;
        }
        
        private System.IAsyncResult OnBeginUpdateAsset(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int A_Asset_ID = ((int)(inValues[0]));
            System.Nullable<bool> isAppServerCreated = ((System.Nullable<bool>)(inValues[1]));
            System.Nullable<bool> isDBServerCreated = ((System.Nullable<bool>)(inValues[2]));
            bool ISPSServerCreated = ((bool)(inValues[3]));
            string fileVersion = ((string)(inValues[4]));
            string accessKey = ((string)(inValues[5]));
            return this.BeginUpdateAsset(A_Asset_ID, isAppServerCreated, isDBServerCreated, ISPSServerCreated, fileVersion, accessKey, callback, asyncState);
        }
        
        private object[] OnEndUpdateAsset(System.IAsyncResult result) {
            string retVal = this.EndUpdateAsset(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdateAssetCompleted(object state) {
            if ((this.UpdateAssetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateAssetCompleted(this, new UpdateAssetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateAssetAsync(int A_Asset_ID, System.Nullable<bool> isAppServerCreated, System.Nullable<bool> isDBServerCreated, bool ISPSServerCreated, string fileVersion, string accessKey) {
            this.UpdateAssetAsync(A_Asset_ID, isAppServerCreated, isDBServerCreated, ISPSServerCreated, fileVersion, accessKey, null);
        }
        
        public void UpdateAssetAsync(int A_Asset_ID, System.Nullable<bool> isAppServerCreated, System.Nullable<bool> isDBServerCreated, bool ISPSServerCreated, string fileVersion, string accessKey, object userState) {
            if ((this.onBeginUpdateAssetDelegate == null)) {
                this.onBeginUpdateAssetDelegate = new BeginOperationDelegate(this.OnBeginUpdateAsset);
            }
            if ((this.onEndUpdateAssetDelegate == null)) {
                this.onEndUpdateAssetDelegate = new EndOperationDelegate(this.OnEndUpdateAsset);
            }
            if ((this.onUpdateAssetCompletedDelegate == null)) {
                this.onUpdateAssetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateAssetCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateAssetDelegate, new object[] {
                        A_Asset_ID,
                        isAppServerCreated,
                        isDBServerCreated,
                        ISPSServerCreated,
                        fileVersion,
                        accessKey}, this.onEndUpdateAssetDelegate, this.onUpdateAssetCompletedDelegate, userState);
        }
        
        public string GetAllCurrency(string accessKey) {
            return base.Channel.GetAllCurrency(accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllCurrency(string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllCurrency(accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGetAllCurrency(System.IAsyncResult result) {
            return base.Channel.EndGetAllCurrency(result);
        }
        
        private System.IAsyncResult OnBeginGetAllCurrency(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string accessKey = ((string)(inValues[0]));
            return this.BeginGetAllCurrency(accessKey, callback, asyncState);
        }
        
        private object[] OnEndGetAllCurrency(System.IAsyncResult result) {
            string retVal = this.EndGetAllCurrency(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllCurrencyCompleted(object state) {
            if ((this.GetAllCurrencyCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllCurrencyCompleted(this, new GetAllCurrencyCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllCurrencyAsync(string accessKey) {
            this.GetAllCurrencyAsync(accessKey, null);
        }
        
        public void GetAllCurrencyAsync(string accessKey, object userState) {
            if ((this.onBeginGetAllCurrencyDelegate == null)) {
                this.onBeginGetAllCurrencyDelegate = new BeginOperationDelegate(this.OnBeginGetAllCurrency);
            }
            if ((this.onEndGetAllCurrencyDelegate == null)) {
                this.onEndGetAllCurrencyDelegate = new EndOperationDelegate(this.OnEndGetAllCurrency);
            }
            if ((this.onGetAllCurrencyCompletedDelegate == null)) {
                this.onGetAllCurrencyCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllCurrencyCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllCurrencyDelegate, new object[] {
                        accessKey}, this.onEndGetAllCurrencyDelegate, this.onGetAllCurrencyCompletedDelegate, userState);
        }
        
        public string GetAllCurrencyFromMobile(string accessKey) {
            return base.Channel.GetAllCurrencyFromMobile(accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllCurrencyFromMobile(string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllCurrencyFromMobile(accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGetAllCurrencyFromMobile(System.IAsyncResult result) {
            return base.Channel.EndGetAllCurrencyFromMobile(result);
        }
        
        private System.IAsyncResult OnBeginGetAllCurrencyFromMobile(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string accessKey = ((string)(inValues[0]));
            return this.BeginGetAllCurrencyFromMobile(accessKey, callback, asyncState);
        }
        
        private object[] OnEndGetAllCurrencyFromMobile(System.IAsyncResult result) {
            string retVal = this.EndGetAllCurrencyFromMobile(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllCurrencyFromMobileCompleted(object state) {
            if ((this.GetAllCurrencyFromMobileCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllCurrencyFromMobileCompleted(this, new GetAllCurrencyFromMobileCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllCurrencyFromMobileAsync(string accessKey) {
            this.GetAllCurrencyFromMobileAsync(accessKey, null);
        }
        
        public void GetAllCurrencyFromMobileAsync(string accessKey, object userState) {
            if ((this.onBeginGetAllCurrencyFromMobileDelegate == null)) {
                this.onBeginGetAllCurrencyFromMobileDelegate = new BeginOperationDelegate(this.OnBeginGetAllCurrencyFromMobile);
            }
            if ((this.onEndGetAllCurrencyFromMobileDelegate == null)) {
                this.onEndGetAllCurrencyFromMobileDelegate = new EndOperationDelegate(this.OnEndGetAllCurrencyFromMobile);
            }
            if ((this.onGetAllCurrencyFromMobileCompletedDelegate == null)) {
                this.onGetAllCurrencyFromMobileCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllCurrencyFromMobileCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllCurrencyFromMobileDelegate, new object[] {
                        accessKey}, this.onEndGetAllCurrencyFromMobileDelegate, this.onGetAllCurrencyFromMobileCompletedDelegate, userState);
        }
        
        public string CreateTenant(int A_Asset_ID, string zoneCode, string accessKey) {
            return base.Channel.CreateTenant(A_Asset_ID, zoneCode, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCreateTenant(int A_Asset_ID, string zoneCode, string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCreateTenant(A_Asset_ID, zoneCode, accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndCreateTenant(System.IAsyncResult result) {
            return base.Channel.EndCreateTenant(result);
        }
        
        private System.IAsyncResult OnBeginCreateTenant(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int A_Asset_ID = ((int)(inValues[0]));
            string zoneCode = ((string)(inValues[1]));
            string accessKey = ((string)(inValues[2]));
            return this.BeginCreateTenant(A_Asset_ID, zoneCode, accessKey, callback, asyncState);
        }
        
        private object[] OnEndCreateTenant(System.IAsyncResult result) {
            string retVal = this.EndCreateTenant(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCreateTenantCompleted(object state) {
            if ((this.CreateTenantCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CreateTenantCompleted(this, new CreateTenantCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CreateTenantAsync(int A_Asset_ID, string zoneCode, string accessKey) {
            this.CreateTenantAsync(A_Asset_ID, zoneCode, accessKey, null);
        }
        
        public void CreateTenantAsync(int A_Asset_ID, string zoneCode, string accessKey, object userState) {
            if ((this.onBeginCreateTenantDelegate == null)) {
                this.onBeginCreateTenantDelegate = new BeginOperationDelegate(this.OnBeginCreateTenant);
            }
            if ((this.onEndCreateTenantDelegate == null)) {
                this.onEndCreateTenantDelegate = new EndOperationDelegate(this.OnEndCreateTenant);
            }
            if ((this.onCreateTenantCompletedDelegate == null)) {
                this.onCreateTenantCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCreateTenantCompleted);
            }
            base.InvokeAsync(this.onBeginCreateTenantDelegate, new object[] {
                        A_Asset_ID,
                        zoneCode,
                        accessKey}, this.onEndCreateTenantDelegate, this.onCreateTenantCompletedDelegate, userState);
        }
        
        public BaseLibrary.CloudService.BackupInfo GetAllDBBackupRequest(string zoneCode, string accessKey) {
            return base.Channel.GetAllDBBackupRequest(zoneCode, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllDBBackupRequest(string zoneCode, string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllDBBackupRequest(zoneCode, accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public BaseLibrary.CloudService.BackupInfo EndGetAllDBBackupRequest(System.IAsyncResult result) {
            return base.Channel.EndGetAllDBBackupRequest(result);
        }
        
        private System.IAsyncResult OnBeginGetAllDBBackupRequest(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string zoneCode = ((string)(inValues[0]));
            string accessKey = ((string)(inValues[1]));
            return this.BeginGetAllDBBackupRequest(zoneCode, accessKey, callback, asyncState);
        }
        
        private object[] OnEndGetAllDBBackupRequest(System.IAsyncResult result) {
            BaseLibrary.CloudService.BackupInfo retVal = this.EndGetAllDBBackupRequest(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllDBBackupRequestCompleted(object state) {
            if ((this.GetAllDBBackupRequestCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllDBBackupRequestCompleted(this, new GetAllDBBackupRequestCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllDBBackupRequestAsync(string zoneCode, string accessKey) {
            this.GetAllDBBackupRequestAsync(zoneCode, accessKey, null);
        }
        
        public void GetAllDBBackupRequestAsync(string zoneCode, string accessKey, object userState) {
            if ((this.onBeginGetAllDBBackupRequestDelegate == null)) {
                this.onBeginGetAllDBBackupRequestDelegate = new BeginOperationDelegate(this.OnBeginGetAllDBBackupRequest);
            }
            if ((this.onEndGetAllDBBackupRequestDelegate == null)) {
                this.onEndGetAllDBBackupRequestDelegate = new EndOperationDelegate(this.OnEndGetAllDBBackupRequest);
            }
            if ((this.onGetAllDBBackupRequestCompletedDelegate == null)) {
                this.onGetAllDBBackupRequestCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllDBBackupRequestCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllDBBackupRequestDelegate, new object[] {
                        zoneCode,
                        accessKey}, this.onEndGetAllDBBackupRequestDelegate, this.onGetAllDBBackupRequestCompletedDelegate, userState);
        }
        
        public string CloseRequest(int R_Request_ID, string accessKey) {
            return base.Channel.CloseRequest(R_Request_ID, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCloseRequest(int R_Request_ID, string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCloseRequest(R_Request_ID, accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndCloseRequest(System.IAsyncResult result) {
            return base.Channel.EndCloseRequest(result);
        }
        
        private System.IAsyncResult OnBeginCloseRequest(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int R_Request_ID = ((int)(inValues[0]));
            string accessKey = ((string)(inValues[1]));
            return this.BeginCloseRequest(R_Request_ID, accessKey, callback, asyncState);
        }
        
        private object[] OnEndCloseRequest(System.IAsyncResult result) {
            string retVal = this.EndCloseRequest(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCloseRequestCompleted(object state) {
            if ((this.CloseRequestCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseRequestCompleted(this, new CloseRequestCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseRequestAsync(int R_Request_ID, string accessKey) {
            this.CloseRequestAsync(R_Request_ID, accessKey, null);
        }
        
        public void CloseRequestAsync(int R_Request_ID, string accessKey, object userState) {
            if ((this.onBeginCloseRequestDelegate == null)) {
                this.onBeginCloseRequestDelegate = new BeginOperationDelegate(this.OnBeginCloseRequest);
            }
            if ((this.onEndCloseRequestDelegate == null)) {
                this.onEndCloseRequestDelegate = new EndOperationDelegate(this.OnEndCloseRequest);
            }
            if ((this.onCloseRequestCompletedDelegate == null)) {
                this.onCloseRequestCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseRequestCompleted);
            }
            base.InvokeAsync(this.onBeginCloseRequestDelegate, new object[] {
                        R_Request_ID,
                        accessKey}, this.onEndCloseRequestDelegate, this.onCloseRequestCompletedDelegate, userState);
        }
        
        public string FailedRequest(int R_Request_ID, string accessKey) {
            return base.Channel.FailedRequest(R_Request_ID, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginFailedRequest(int R_Request_ID, string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginFailedRequest(R_Request_ID, accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndFailedRequest(System.IAsyncResult result) {
            return base.Channel.EndFailedRequest(result);
        }
        
        private System.IAsyncResult OnBeginFailedRequest(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int R_Request_ID = ((int)(inValues[0]));
            string accessKey = ((string)(inValues[1]));
            return this.BeginFailedRequest(R_Request_ID, accessKey, callback, asyncState);
        }
        
        private object[] OnEndFailedRequest(System.IAsyncResult result) {
            string retVal = this.EndFailedRequest(result);
            return new object[] {
                    retVal};
        }
        
        private void OnFailedRequestCompleted(object state) {
            if ((this.FailedRequestCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.FailedRequestCompleted(this, new FailedRequestCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void FailedRequestAsync(int R_Request_ID, string accessKey) {
            this.FailedRequestAsync(R_Request_ID, accessKey, null);
        }
        
        public void FailedRequestAsync(int R_Request_ID, string accessKey, object userState) {
            if ((this.onBeginFailedRequestDelegate == null)) {
                this.onBeginFailedRequestDelegate = new BeginOperationDelegate(this.OnBeginFailedRequest);
            }
            if ((this.onEndFailedRequestDelegate == null)) {
                this.onEndFailedRequestDelegate = new EndOperationDelegate(this.OnEndFailedRequest);
            }
            if ((this.onFailedRequestCompletedDelegate == null)) {
                this.onFailedRequestCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnFailedRequestCompleted);
            }
            base.InvokeAsync(this.onBeginFailedRequestDelegate, new object[] {
                        R_Request_ID,
                        accessKey}, this.onEndFailedRequestDelegate, this.onFailedRequestCompletedDelegate, userState);
        }
        
        public string GetCustomerSpaceM1(int AD_User_ID, string accessKey) {
            return base.Channel.GetCustomerSpaceM1(AD_User_ID, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCustomerSpaceM1(int AD_User_ID, string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCustomerSpaceM1(AD_User_ID, accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGetCustomerSpaceM1(System.IAsyncResult result) {
            return base.Channel.EndGetCustomerSpaceM1(result);
        }
        
        private System.IAsyncResult OnBeginGetCustomerSpaceM1(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int AD_User_ID = ((int)(inValues[0]));
            string accessKey = ((string)(inValues[1]));
            return this.BeginGetCustomerSpaceM1(AD_User_ID, accessKey, callback, asyncState);
        }
        
        private object[] OnEndGetCustomerSpaceM1(System.IAsyncResult result) {
            string retVal = this.EndGetCustomerSpaceM1(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCustomerSpaceM1Completed(object state) {
            if ((this.GetCustomerSpaceM1Completed != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCustomerSpaceM1Completed(this, new GetCustomerSpaceM1CompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCustomerSpaceM1Async(int AD_User_ID, string accessKey) {
            this.GetCustomerSpaceM1Async(AD_User_ID, accessKey, null);
        }
        
        public void GetCustomerSpaceM1Async(int AD_User_ID, string accessKey, object userState) {
            if ((this.onBeginGetCustomerSpaceM1Delegate == null)) {
                this.onBeginGetCustomerSpaceM1Delegate = new BeginOperationDelegate(this.OnBeginGetCustomerSpaceM1);
            }
            if ((this.onEndGetCustomerSpaceM1Delegate == null)) {
                this.onEndGetCustomerSpaceM1Delegate = new EndOperationDelegate(this.OnEndGetCustomerSpaceM1);
            }
            if ((this.onGetCustomerSpaceM1CompletedDelegate == null)) {
                this.onGetCustomerSpaceM1CompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCustomerSpaceM1Completed);
            }
            base.InvokeAsync(this.onBeginGetCustomerSpaceM1Delegate, new object[] {
                        AD_User_ID,
                        accessKey}, this.onEndGetCustomerSpaceM1Delegate, this.onGetCustomerSpaceM1CompletedDelegate, userState);
        }
        
        public string GetCustomerSpaceM2(int A_Asset_ID, string accessKey) {
            return base.Channel.GetCustomerSpaceM2(A_Asset_ID, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCustomerSpaceM2(int A_Asset_ID, string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCustomerSpaceM2(A_Asset_ID, accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGetCustomerSpaceM2(System.IAsyncResult result) {
            return base.Channel.EndGetCustomerSpaceM2(result);
        }
        
        private System.IAsyncResult OnBeginGetCustomerSpaceM2(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int A_Asset_ID = ((int)(inValues[0]));
            string accessKey = ((string)(inValues[1]));
            return this.BeginGetCustomerSpaceM2(A_Asset_ID, accessKey, callback, asyncState);
        }
        
        private object[] OnEndGetCustomerSpaceM2(System.IAsyncResult result) {
            string retVal = this.EndGetCustomerSpaceM2(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCustomerSpaceM2Completed(object state) {
            if ((this.GetCustomerSpaceM2Completed != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCustomerSpaceM2Completed(this, new GetCustomerSpaceM2CompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCustomerSpaceM2Async(int A_Asset_ID, string accessKey) {
            this.GetCustomerSpaceM2Async(A_Asset_ID, accessKey, null);
        }
        
        public void GetCustomerSpaceM2Async(int A_Asset_ID, string accessKey, object userState) {
            if ((this.onBeginGetCustomerSpaceM2Delegate == null)) {
                this.onBeginGetCustomerSpaceM2Delegate = new BeginOperationDelegate(this.OnBeginGetCustomerSpaceM2);
            }
            if ((this.onEndGetCustomerSpaceM2Delegate == null)) {
                this.onEndGetCustomerSpaceM2Delegate = new EndOperationDelegate(this.OnEndGetCustomerSpaceM2);
            }
            if ((this.onGetCustomerSpaceM2CompletedDelegate == null)) {
                this.onGetCustomerSpaceM2CompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCustomerSpaceM2Completed);
            }
            base.InvokeAsync(this.onBeginGetCustomerSpaceM2Delegate, new object[] {
                        A_Asset_ID,
                        accessKey}, this.onEndGetCustomerSpaceM2Delegate, this.onGetCustomerSpaceM2CompletedDelegate, userState);
        }
        
        public string SetCustomerSpace(int A_Asset_ID, int ASUsedSpace, int DBSUsedSpace, int PSUsedSpace, int DBBackupSize, string accessKey) {
            return base.Channel.SetCustomerSpace(A_Asset_ID, ASUsedSpace, DBSUsedSpace, PSUsedSpace, DBBackupSize, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSetCustomerSpace(int A_Asset_ID, int ASUsedSpace, int DBSUsedSpace, int PSUsedSpace, int DBBackupSize, string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetCustomerSpace(A_Asset_ID, ASUsedSpace, DBSUsedSpace, PSUsedSpace, DBBackupSize, accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndSetCustomerSpace(System.IAsyncResult result) {
            return base.Channel.EndSetCustomerSpace(result);
        }
        
        private System.IAsyncResult OnBeginSetCustomerSpace(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int A_Asset_ID = ((int)(inValues[0]));
            int ASUsedSpace = ((int)(inValues[1]));
            int DBSUsedSpace = ((int)(inValues[2]));
            int PSUsedSpace = ((int)(inValues[3]));
            int DBBackupSize = ((int)(inValues[4]));
            string accessKey = ((string)(inValues[5]));
            return this.BeginSetCustomerSpace(A_Asset_ID, ASUsedSpace, DBSUsedSpace, PSUsedSpace, DBBackupSize, accessKey, callback, asyncState);
        }
        
        private object[] OnEndSetCustomerSpace(System.IAsyncResult result) {
            string retVal = this.EndSetCustomerSpace(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSetCustomerSpaceCompleted(object state) {
            if ((this.SetCustomerSpaceCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetCustomerSpaceCompleted(this, new SetCustomerSpaceCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetCustomerSpaceAsync(int A_Asset_ID, int ASUsedSpace, int DBSUsedSpace, int PSUsedSpace, int DBBackupSize, string accessKey) {
            this.SetCustomerSpaceAsync(A_Asset_ID, ASUsedSpace, DBSUsedSpace, PSUsedSpace, DBBackupSize, accessKey, null);
        }
        
        public void SetCustomerSpaceAsync(int A_Asset_ID, int ASUsedSpace, int DBSUsedSpace, int PSUsedSpace, int DBBackupSize, string accessKey, object userState) {
            if ((this.onBeginSetCustomerSpaceDelegate == null)) {
                this.onBeginSetCustomerSpaceDelegate = new BeginOperationDelegate(this.OnBeginSetCustomerSpace);
            }
            if ((this.onEndSetCustomerSpaceDelegate == null)) {
                this.onEndSetCustomerSpaceDelegate = new EndOperationDelegate(this.OnEndSetCustomerSpace);
            }
            if ((this.onSetCustomerSpaceCompletedDelegate == null)) {
                this.onSetCustomerSpaceCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetCustomerSpaceCompleted);
            }
            base.InvokeAsync(this.onBeginSetCustomerSpaceDelegate, new object[] {
                        A_Asset_ID,
                        ASUsedSpace,
                        DBSUsedSpace,
                        PSUsedSpace,
                        DBBackupSize,
                        accessKey}, this.onEndSetCustomerSpaceDelegate, this.onSetCustomerSpaceCompletedDelegate, userState);
        }
        
        public BaseLibrary.CloudService.BackupInfo GetAllDBDeleteRequest(string zoneCode, string accessKey) {
            return base.Channel.GetAllDBDeleteRequest(zoneCode, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllDBDeleteRequest(string zoneCode, string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllDBDeleteRequest(zoneCode, accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public BaseLibrary.CloudService.BackupInfo EndGetAllDBDeleteRequest(System.IAsyncResult result) {
            return base.Channel.EndGetAllDBDeleteRequest(result);
        }
        
        private System.IAsyncResult OnBeginGetAllDBDeleteRequest(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string zoneCode = ((string)(inValues[0]));
            string accessKey = ((string)(inValues[1]));
            return this.BeginGetAllDBDeleteRequest(zoneCode, accessKey, callback, asyncState);
        }
        
        private object[] OnEndGetAllDBDeleteRequest(System.IAsyncResult result) {
            BaseLibrary.CloudService.BackupInfo retVal = this.EndGetAllDBDeleteRequest(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllDBDeleteRequestCompleted(object state) {
            if ((this.GetAllDBDeleteRequestCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllDBDeleteRequestCompleted(this, new GetAllDBDeleteRequestCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllDBDeleteRequestAsync(string zoneCode, string accessKey) {
            this.GetAllDBDeleteRequestAsync(zoneCode, accessKey, null);
        }
        
        public void GetAllDBDeleteRequestAsync(string zoneCode, string accessKey, object userState) {
            if ((this.onBeginGetAllDBDeleteRequestDelegate == null)) {
                this.onBeginGetAllDBDeleteRequestDelegate = new BeginOperationDelegate(this.OnBeginGetAllDBDeleteRequest);
            }
            if ((this.onEndGetAllDBDeleteRequestDelegate == null)) {
                this.onEndGetAllDBDeleteRequestDelegate = new EndOperationDelegate(this.OnEndGetAllDBDeleteRequest);
            }
            if ((this.onGetAllDBDeleteRequestCompletedDelegate == null)) {
                this.onGetAllDBDeleteRequestCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllDBDeleteRequestCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllDBDeleteRequestDelegate, new object[] {
                        zoneCode,
                        accessKey}, this.onEndGetAllDBDeleteRequestDelegate, this.onGetAllDBDeleteRequestCompletedDelegate, userState);
        }
        
        public BaseLibrary.CloudService.BackupInfo GetAllDBRestoreRequest(string zoneCode, string accessKey) {
            return base.Channel.GetAllDBRestoreRequest(zoneCode, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllDBRestoreRequest(string zoneCode, string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllDBRestoreRequest(zoneCode, accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public BaseLibrary.CloudService.BackupInfo EndGetAllDBRestoreRequest(System.IAsyncResult result) {
            return base.Channel.EndGetAllDBRestoreRequest(result);
        }
        
        private System.IAsyncResult OnBeginGetAllDBRestoreRequest(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string zoneCode = ((string)(inValues[0]));
            string accessKey = ((string)(inValues[1]));
            return this.BeginGetAllDBRestoreRequest(zoneCode, accessKey, callback, asyncState);
        }
        
        private object[] OnEndGetAllDBRestoreRequest(System.IAsyncResult result) {
            BaseLibrary.CloudService.BackupInfo retVal = this.EndGetAllDBRestoreRequest(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllDBRestoreRequestCompleted(object state) {
            if ((this.GetAllDBRestoreRequestCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllDBRestoreRequestCompleted(this, new GetAllDBRestoreRequestCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllDBRestoreRequestAsync(string zoneCode, string accessKey) {
            this.GetAllDBRestoreRequestAsync(zoneCode, accessKey, null);
        }
        
        public void GetAllDBRestoreRequestAsync(string zoneCode, string accessKey, object userState) {
            if ((this.onBeginGetAllDBRestoreRequestDelegate == null)) {
                this.onBeginGetAllDBRestoreRequestDelegate = new BeginOperationDelegate(this.OnBeginGetAllDBRestoreRequest);
            }
            if ((this.onEndGetAllDBRestoreRequestDelegate == null)) {
                this.onEndGetAllDBRestoreRequestDelegate = new EndOperationDelegate(this.OnEndGetAllDBRestoreRequest);
            }
            if ((this.onGetAllDBRestoreRequestCompletedDelegate == null)) {
                this.onGetAllDBRestoreRequestCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllDBRestoreRequestCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllDBRestoreRequestDelegate, new object[] {
                        zoneCode,
                        accessKey}, this.onEndGetAllDBRestoreRequestDelegate, this.onGetAllDBRestoreRequestCompletedDelegate, userState);
        }
        
        public string CreateCustomerUser(string url, int adminUserID, string adminUserName, int tenantID, int count, bool isLoginUser, bool isDeleted, string accessKey) {
            return base.Channel.CreateCustomerUser(url, adminUserID, adminUserName, tenantID, count, isLoginUser, isDeleted, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCreateCustomerUser(string url, int adminUserID, string adminUserName, int tenantID, int count, bool isLoginUser, bool isDeleted, string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCreateCustomerUser(url, adminUserID, adminUserName, tenantID, count, isLoginUser, isDeleted, accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndCreateCustomerUser(System.IAsyncResult result) {
            return base.Channel.EndCreateCustomerUser(result);
        }
        
        private System.IAsyncResult OnBeginCreateCustomerUser(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string url = ((string)(inValues[0]));
            int adminUserID = ((int)(inValues[1]));
            string adminUserName = ((string)(inValues[2]));
            int tenantID = ((int)(inValues[3]));
            int count = ((int)(inValues[4]));
            bool isLoginUser = ((bool)(inValues[5]));
            bool isDeleted = ((bool)(inValues[6]));
            string accessKey = ((string)(inValues[7]));
            return this.BeginCreateCustomerUser(url, adminUserID, adminUserName, tenantID, count, isLoginUser, isDeleted, accessKey, callback, asyncState);
        }
        
        private object[] OnEndCreateCustomerUser(System.IAsyncResult result) {
            string retVal = this.EndCreateCustomerUser(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCreateCustomerUserCompleted(object state) {
            if ((this.CreateCustomerUserCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CreateCustomerUserCompleted(this, new CreateCustomerUserCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CreateCustomerUserAsync(string url, int adminUserID, string adminUserName, int tenantID, int count, bool isLoginUser, bool isDeleted, string accessKey) {
            this.CreateCustomerUserAsync(url, adminUserID, adminUserName, tenantID, count, isLoginUser, isDeleted, accessKey, null);
        }
        
        public void CreateCustomerUserAsync(string url, int adminUserID, string adminUserName, int tenantID, int count, bool isLoginUser, bool isDeleted, string accessKey, object userState) {
            if ((this.onBeginCreateCustomerUserDelegate == null)) {
                this.onBeginCreateCustomerUserDelegate = new BeginOperationDelegate(this.OnBeginCreateCustomerUser);
            }
            if ((this.onEndCreateCustomerUserDelegate == null)) {
                this.onEndCreateCustomerUserDelegate = new EndOperationDelegate(this.OnEndCreateCustomerUser);
            }
            if ((this.onCreateCustomerUserCompletedDelegate == null)) {
                this.onCreateCustomerUserCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCreateCustomerUserCompleted);
            }
            base.InvokeAsync(this.onBeginCreateCustomerUserDelegate, new object[] {
                        url,
                        adminUserID,
                        adminUserName,
                        tenantID,
                        count,
                        isLoginUser,
                        isDeleted,
                        accessKey}, this.onEndCreateCustomerUserDelegate, this.onCreateCustomerUserCompletedDelegate, userState);
        }
        
        public string VerifyTenantCreated(int Ad_user_ID, string accessKey) {
            return base.Channel.VerifyTenantCreated(Ad_user_ID, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginVerifyTenantCreated(int Ad_user_ID, string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginVerifyTenantCreated(Ad_user_ID, accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndVerifyTenantCreated(System.IAsyncResult result) {
            return base.Channel.EndVerifyTenantCreated(result);
        }
        
        private System.IAsyncResult OnBeginVerifyTenantCreated(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int Ad_user_ID = ((int)(inValues[0]));
            string accessKey = ((string)(inValues[1]));
            return this.BeginVerifyTenantCreated(Ad_user_ID, accessKey, callback, asyncState);
        }
        
        private object[] OnEndVerifyTenantCreated(System.IAsyncResult result) {
            string retVal = this.EndVerifyTenantCreated(result);
            return new object[] {
                    retVal};
        }
        
        private void OnVerifyTenantCreatedCompleted(object state) {
            if ((this.VerifyTenantCreatedCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.VerifyTenantCreatedCompleted(this, new VerifyTenantCreatedCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void VerifyTenantCreatedAsync(int Ad_user_ID, string accessKey) {
            this.VerifyTenantCreatedAsync(Ad_user_ID, accessKey, null);
        }
        
        public void VerifyTenantCreatedAsync(int Ad_user_ID, string accessKey, object userState) {
            if ((this.onBeginVerifyTenantCreatedDelegate == null)) {
                this.onBeginVerifyTenantCreatedDelegate = new BeginOperationDelegate(this.OnBeginVerifyTenantCreated);
            }
            if ((this.onEndVerifyTenantCreatedDelegate == null)) {
                this.onEndVerifyTenantCreatedDelegate = new EndOperationDelegate(this.OnEndVerifyTenantCreated);
            }
            if ((this.onVerifyTenantCreatedCompletedDelegate == null)) {
                this.onVerifyTenantCreatedCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnVerifyTenantCreatedCompleted);
            }
            base.InvokeAsync(this.onBeginVerifyTenantCreatedDelegate, new object[] {
                        Ad_user_ID,
                        accessKey}, this.onEndVerifyTenantCreatedDelegate, this.onVerifyTenantCreatedCompletedDelegate, userState);
        }
        
        public string VerifyTenantCreatedFromMobile(int Ad_user_ID, string accessKey) {
            return base.Channel.VerifyTenantCreatedFromMobile(Ad_user_ID, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginVerifyTenantCreatedFromMobile(int Ad_user_ID, string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginVerifyTenantCreatedFromMobile(Ad_user_ID, accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndVerifyTenantCreatedFromMobile(System.IAsyncResult result) {
            return base.Channel.EndVerifyTenantCreatedFromMobile(result);
        }
        
        private System.IAsyncResult OnBeginVerifyTenantCreatedFromMobile(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int Ad_user_ID = ((int)(inValues[0]));
            string accessKey = ((string)(inValues[1]));
            return this.BeginVerifyTenantCreatedFromMobile(Ad_user_ID, accessKey, callback, asyncState);
        }
        
        private object[] OnEndVerifyTenantCreatedFromMobile(System.IAsyncResult result) {
            string retVal = this.EndVerifyTenantCreatedFromMobile(result);
            return new object[] {
                    retVal};
        }
        
        private void OnVerifyTenantCreatedFromMobileCompleted(object state) {
            if ((this.VerifyTenantCreatedFromMobileCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.VerifyTenantCreatedFromMobileCompleted(this, new VerifyTenantCreatedFromMobileCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void VerifyTenantCreatedFromMobileAsync(int Ad_user_ID, string accessKey) {
            this.VerifyTenantCreatedFromMobileAsync(Ad_user_ID, accessKey, null);
        }
        
        public void VerifyTenantCreatedFromMobileAsync(int Ad_user_ID, string accessKey, object userState) {
            if ((this.onBeginVerifyTenantCreatedFromMobileDelegate == null)) {
                this.onBeginVerifyTenantCreatedFromMobileDelegate = new BeginOperationDelegate(this.OnBeginVerifyTenantCreatedFromMobile);
            }
            if ((this.onEndVerifyTenantCreatedFromMobileDelegate == null)) {
                this.onEndVerifyTenantCreatedFromMobileDelegate = new EndOperationDelegate(this.OnEndVerifyTenantCreatedFromMobile);
            }
            if ((this.onVerifyTenantCreatedFromMobileCompletedDelegate == null)) {
                this.onVerifyTenantCreatedFromMobileCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnVerifyTenantCreatedFromMobileCompleted);
            }
            base.InvokeAsync(this.onBeginVerifyTenantCreatedFromMobileDelegate, new object[] {
                        Ad_user_ID,
                        accessKey}, this.onEndVerifyTenantCreatedFromMobileDelegate, this.onVerifyTenantCreatedFromMobileCompletedDelegate, userState);
        }
        
        public string GetAllZoneMasterServer(string accessKey) {
            return base.Channel.GetAllZoneMasterServer(accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllZoneMasterServer(string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllZoneMasterServer(accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGetAllZoneMasterServer(System.IAsyncResult result) {
            return base.Channel.EndGetAllZoneMasterServer(result);
        }
        
        private System.IAsyncResult OnBeginGetAllZoneMasterServer(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string accessKey = ((string)(inValues[0]));
            return this.BeginGetAllZoneMasterServer(accessKey, callback, asyncState);
        }
        
        private object[] OnEndGetAllZoneMasterServer(System.IAsyncResult result) {
            string retVal = this.EndGetAllZoneMasterServer(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllZoneMasterServerCompleted(object state) {
            if ((this.GetAllZoneMasterServerCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllZoneMasterServerCompleted(this, new GetAllZoneMasterServerCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllZoneMasterServerAsync(string accessKey) {
            this.GetAllZoneMasterServerAsync(accessKey, null);
        }
        
        public void GetAllZoneMasterServerAsync(string accessKey, object userState) {
            if ((this.onBeginGetAllZoneMasterServerDelegate == null)) {
                this.onBeginGetAllZoneMasterServerDelegate = new BeginOperationDelegate(this.OnBeginGetAllZoneMasterServer);
            }
            if ((this.onEndGetAllZoneMasterServerDelegate == null)) {
                this.onEndGetAllZoneMasterServerDelegate = new EndOperationDelegate(this.OnEndGetAllZoneMasterServer);
            }
            if ((this.onGetAllZoneMasterServerCompletedDelegate == null)) {
                this.onGetAllZoneMasterServerCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllZoneMasterServerCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllZoneMasterServerDelegate, new object[] {
                        accessKey}, this.onEndGetAllZoneMasterServerDelegate, this.onGetAllZoneMasterServerCompletedDelegate, userState);
        }
        
        public string GetAllZoneMasterServerFromMobile(string accessKey) {
            return base.Channel.GetAllZoneMasterServerFromMobile(accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllZoneMasterServerFromMobile(string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllZoneMasterServerFromMobile(accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGetAllZoneMasterServerFromMobile(System.IAsyncResult result) {
            return base.Channel.EndGetAllZoneMasterServerFromMobile(result);
        }
        
        private System.IAsyncResult OnBeginGetAllZoneMasterServerFromMobile(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string accessKey = ((string)(inValues[0]));
            return this.BeginGetAllZoneMasterServerFromMobile(accessKey, callback, asyncState);
        }
        
        private object[] OnEndGetAllZoneMasterServerFromMobile(System.IAsyncResult result) {
            string retVal = this.EndGetAllZoneMasterServerFromMobile(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllZoneMasterServerFromMobileCompleted(object state) {
            if ((this.GetAllZoneMasterServerFromMobileCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllZoneMasterServerFromMobileCompleted(this, new GetAllZoneMasterServerFromMobileCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllZoneMasterServerFromMobileAsync(string accessKey) {
            this.GetAllZoneMasterServerFromMobileAsync(accessKey, null);
        }
        
        public void GetAllZoneMasterServerFromMobileAsync(string accessKey, object userState) {
            if ((this.onBeginGetAllZoneMasterServerFromMobileDelegate == null)) {
                this.onBeginGetAllZoneMasterServerFromMobileDelegate = new BeginOperationDelegate(this.OnBeginGetAllZoneMasterServerFromMobile);
            }
            if ((this.onEndGetAllZoneMasterServerFromMobileDelegate == null)) {
                this.onEndGetAllZoneMasterServerFromMobileDelegate = new EndOperationDelegate(this.OnEndGetAllZoneMasterServerFromMobile);
            }
            if ((this.onGetAllZoneMasterServerFromMobileCompletedDelegate == null)) {
                this.onGetAllZoneMasterServerFromMobileCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllZoneMasterServerFromMobileCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllZoneMasterServerFromMobileDelegate, new object[] {
                        accessKey}, this.onEndGetAllZoneMasterServerFromMobileDelegate, this.onGetAllZoneMasterServerFromMobileCompletedDelegate, userState);
        }
        
        public BaseLibrary.CloudService.DBMigrationInfo GetTenantforDBMigration(int AssetID, string zoneCode, string accessKey) {
            return base.Channel.GetTenantforDBMigration(AssetID, zoneCode, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetTenantforDBMigration(int AssetID, string zoneCode, string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetTenantforDBMigration(AssetID, zoneCode, accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public BaseLibrary.CloudService.DBMigrationInfo EndGetTenantforDBMigration(System.IAsyncResult result) {
            return base.Channel.EndGetTenantforDBMigration(result);
        }
        
        private System.IAsyncResult OnBeginGetTenantforDBMigration(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int AssetID = ((int)(inValues[0]));
            string zoneCode = ((string)(inValues[1]));
            string accessKey = ((string)(inValues[2]));
            return this.BeginGetTenantforDBMigration(AssetID, zoneCode, accessKey, callback, asyncState);
        }
        
        private object[] OnEndGetTenantforDBMigration(System.IAsyncResult result) {
            BaseLibrary.CloudService.DBMigrationInfo retVal = this.EndGetTenantforDBMigration(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetTenantforDBMigrationCompleted(object state) {
            if ((this.GetTenantforDBMigrationCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetTenantforDBMigrationCompleted(this, new GetTenantforDBMigrationCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetTenantforDBMigrationAsync(int AssetID, string zoneCode, string accessKey) {
            this.GetTenantforDBMigrationAsync(AssetID, zoneCode, accessKey, null);
        }
        
        public void GetTenantforDBMigrationAsync(int AssetID, string zoneCode, string accessKey, object userState) {
            if ((this.onBeginGetTenantforDBMigrationDelegate == null)) {
                this.onBeginGetTenantforDBMigrationDelegate = new BeginOperationDelegate(this.OnBeginGetTenantforDBMigration);
            }
            if ((this.onEndGetTenantforDBMigrationDelegate == null)) {
                this.onEndGetTenantforDBMigrationDelegate = new EndOperationDelegate(this.OnEndGetTenantforDBMigration);
            }
            if ((this.onGetTenantforDBMigrationCompletedDelegate == null)) {
                this.onGetTenantforDBMigrationCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetTenantforDBMigrationCompleted);
            }
            base.InvokeAsync(this.onBeginGetTenantforDBMigrationDelegate, new object[] {
                        AssetID,
                        zoneCode,
                        accessKey}, this.onEndGetTenantforDBMigrationDelegate, this.onGetTenantforDBMigrationCompletedDelegate, userState);
        }
        
        public BaseLibrary.CloudService.MigrationRecordAndServerInfo GetTenantforDBMigrationWithServerInfo(int AssetID, string zoneCode, string accessKey) {
            return base.Channel.GetTenantforDBMigrationWithServerInfo(AssetID, zoneCode, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetTenantforDBMigrationWithServerInfo(int AssetID, string zoneCode, string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetTenantforDBMigrationWithServerInfo(AssetID, zoneCode, accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public BaseLibrary.CloudService.MigrationRecordAndServerInfo EndGetTenantforDBMigrationWithServerInfo(System.IAsyncResult result) {
            return base.Channel.EndGetTenantforDBMigrationWithServerInfo(result);
        }
        
        private System.IAsyncResult OnBeginGetTenantforDBMigrationWithServerInfo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int AssetID = ((int)(inValues[0]));
            string zoneCode = ((string)(inValues[1]));
            string accessKey = ((string)(inValues[2]));
            return this.BeginGetTenantforDBMigrationWithServerInfo(AssetID, zoneCode, accessKey, callback, asyncState);
        }
        
        private object[] OnEndGetTenantforDBMigrationWithServerInfo(System.IAsyncResult result) {
            BaseLibrary.CloudService.MigrationRecordAndServerInfo retVal = this.EndGetTenantforDBMigrationWithServerInfo(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetTenantforDBMigrationWithServerInfoCompleted(object state) {
            if ((this.GetTenantforDBMigrationWithServerInfoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetTenantforDBMigrationWithServerInfoCompleted(this, new GetTenantforDBMigrationWithServerInfoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetTenantforDBMigrationWithServerInfoAsync(int AssetID, string zoneCode, string accessKey) {
            this.GetTenantforDBMigrationWithServerInfoAsync(AssetID, zoneCode, accessKey, null);
        }
        
        public void GetTenantforDBMigrationWithServerInfoAsync(int AssetID, string zoneCode, string accessKey, object userState) {
            if ((this.onBeginGetTenantforDBMigrationWithServerInfoDelegate == null)) {
                this.onBeginGetTenantforDBMigrationWithServerInfoDelegate = new BeginOperationDelegate(this.OnBeginGetTenantforDBMigrationWithServerInfo);
            }
            if ((this.onEndGetTenantforDBMigrationWithServerInfoDelegate == null)) {
                this.onEndGetTenantforDBMigrationWithServerInfoDelegate = new EndOperationDelegate(this.OnEndGetTenantforDBMigrationWithServerInfo);
            }
            if ((this.onGetTenantforDBMigrationWithServerInfoCompletedDelegate == null)) {
                this.onGetTenantforDBMigrationWithServerInfoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetTenantforDBMigrationWithServerInfoCompleted);
            }
            base.InvokeAsync(this.onBeginGetTenantforDBMigrationWithServerInfoDelegate, new object[] {
                        AssetID,
                        zoneCode,
                        accessKey}, this.onEndGetTenantforDBMigrationWithServerInfoDelegate, this.onGetTenantforDBMigrationWithServerInfoCompletedDelegate, userState);
        }
        
        public string SetDBTempMigrationInProcess(int tenantDBTempInfoID, char value, string accessKey) {
            return base.Channel.SetDBTempMigrationInProcess(tenantDBTempInfoID, value, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSetDBTempMigrationInProcess(int tenantDBTempInfoID, char value, string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetDBTempMigrationInProcess(tenantDBTempInfoID, value, accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndSetDBTempMigrationInProcess(System.IAsyncResult result) {
            return base.Channel.EndSetDBTempMigrationInProcess(result);
        }
        
        private System.IAsyncResult OnBeginSetDBTempMigrationInProcess(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int tenantDBTempInfoID = ((int)(inValues[0]));
            char value = ((char)(inValues[1]));
            string accessKey = ((string)(inValues[2]));
            return this.BeginSetDBTempMigrationInProcess(tenantDBTempInfoID, value, accessKey, callback, asyncState);
        }
        
        private object[] OnEndSetDBTempMigrationInProcess(System.IAsyncResult result) {
            string retVal = this.EndSetDBTempMigrationInProcess(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSetDBTempMigrationInProcessCompleted(object state) {
            if ((this.SetDBTempMigrationInProcessCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetDBTempMigrationInProcessCompleted(this, new SetDBTempMigrationInProcessCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetDBTempMigrationInProcessAsync(int tenantDBTempInfoID, char value, string accessKey) {
            this.SetDBTempMigrationInProcessAsync(tenantDBTempInfoID, value, accessKey, null);
        }
        
        public void SetDBTempMigrationInProcessAsync(int tenantDBTempInfoID, char value, string accessKey, object userState) {
            if ((this.onBeginSetDBTempMigrationInProcessDelegate == null)) {
                this.onBeginSetDBTempMigrationInProcessDelegate = new BeginOperationDelegate(this.OnBeginSetDBTempMigrationInProcess);
            }
            if ((this.onEndSetDBTempMigrationInProcessDelegate == null)) {
                this.onEndSetDBTempMigrationInProcessDelegate = new EndOperationDelegate(this.OnEndSetDBTempMigrationInProcess);
            }
            if ((this.onSetDBTempMigrationInProcessCompletedDelegate == null)) {
                this.onSetDBTempMigrationInProcessCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetDBTempMigrationInProcessCompleted);
            }
            base.InvokeAsync(this.onBeginSetDBTempMigrationInProcessDelegate, new object[] {
                        tenantDBTempInfoID,
                        value,
                        accessKey}, this.onEndSetDBTempMigrationInProcessDelegate, this.onSetDBTempMigrationInProcessCompletedDelegate, userState);
        }
        
        public string SetIsDBTempMigrated(int tenantDBTempInfoID, string accessKey) {
            return base.Channel.SetIsDBTempMigrated(tenantDBTempInfoID, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSetIsDBTempMigrated(int tenantDBTempInfoID, string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetIsDBTempMigrated(tenantDBTempInfoID, accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndSetIsDBTempMigrated(System.IAsyncResult result) {
            return base.Channel.EndSetIsDBTempMigrated(result);
        }
        
        private System.IAsyncResult OnBeginSetIsDBTempMigrated(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int tenantDBTempInfoID = ((int)(inValues[0]));
            string accessKey = ((string)(inValues[1]));
            return this.BeginSetIsDBTempMigrated(tenantDBTempInfoID, accessKey, callback, asyncState);
        }
        
        private object[] OnEndSetIsDBTempMigrated(System.IAsyncResult result) {
            string retVal = this.EndSetIsDBTempMigrated(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSetIsDBTempMigratedCompleted(object state) {
            if ((this.SetIsDBTempMigratedCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetIsDBTempMigratedCompleted(this, new SetIsDBTempMigratedCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetIsDBTempMigratedAsync(int tenantDBTempInfoID, string accessKey) {
            this.SetIsDBTempMigratedAsync(tenantDBTempInfoID, accessKey, null);
        }
        
        public void SetIsDBTempMigratedAsync(int tenantDBTempInfoID, string accessKey, object userState) {
            if ((this.onBeginSetIsDBTempMigratedDelegate == null)) {
                this.onBeginSetIsDBTempMigratedDelegate = new BeginOperationDelegate(this.OnBeginSetIsDBTempMigrated);
            }
            if ((this.onEndSetIsDBTempMigratedDelegate == null)) {
                this.onEndSetIsDBTempMigratedDelegate = new EndOperationDelegate(this.OnEndSetIsDBTempMigrated);
            }
            if ((this.onSetIsDBTempMigratedCompletedDelegate == null)) {
                this.onSetIsDBTempMigratedCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetIsDBTempMigratedCompleted);
            }
            base.InvokeAsync(this.onBeginSetIsDBTempMigratedDelegate, new object[] {
                        tenantDBTempInfoID,
                        accessKey}, this.onEndSetIsDBTempMigratedDelegate, this.onSetIsDBTempMigratedCompletedDelegate, userState);
        }
        
        public string SetAliseCardNo(int AD_User_ID, string aliseCardNo, string accessKey) {
            return base.Channel.SetAliseCardNo(AD_User_ID, aliseCardNo, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSetAliseCardNo(int AD_User_ID, string aliseCardNo, string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetAliseCardNo(AD_User_ID, aliseCardNo, accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndSetAliseCardNo(System.IAsyncResult result) {
            return base.Channel.EndSetAliseCardNo(result);
        }
        
        private System.IAsyncResult OnBeginSetAliseCardNo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int AD_User_ID = ((int)(inValues[0]));
            string aliseCardNo = ((string)(inValues[1]));
            string accessKey = ((string)(inValues[2]));
            return this.BeginSetAliseCardNo(AD_User_ID, aliseCardNo, accessKey, callback, asyncState);
        }
        
        private object[] OnEndSetAliseCardNo(System.IAsyncResult result) {
            string retVal = this.EndSetAliseCardNo(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSetAliseCardNoCompleted(object state) {
            if ((this.SetAliseCardNoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetAliseCardNoCompleted(this, new SetAliseCardNoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetAliseCardNoAsync(int AD_User_ID, string aliseCardNo, string accessKey) {
            this.SetAliseCardNoAsync(AD_User_ID, aliseCardNo, accessKey, null);
        }
        
        public void SetAliseCardNoAsync(int AD_User_ID, string aliseCardNo, string accessKey, object userState) {
            if ((this.onBeginSetAliseCardNoDelegate == null)) {
                this.onBeginSetAliseCardNoDelegate = new BeginOperationDelegate(this.OnBeginSetAliseCardNo);
            }
            if ((this.onEndSetAliseCardNoDelegate == null)) {
                this.onEndSetAliseCardNoDelegate = new EndOperationDelegate(this.OnEndSetAliseCardNo);
            }
            if ((this.onSetAliseCardNoCompletedDelegate == null)) {
                this.onSetAliseCardNoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetAliseCardNoCompleted);
            }
            base.InvokeAsync(this.onBeginSetAliseCardNoDelegate, new object[] {
                        AD_User_ID,
                        aliseCardNo,
                        accessKey}, this.onEndSetAliseCardNoDelegate, this.onSetAliseCardNoCompletedDelegate, userState);
        }
        
        public string GetAliseCardNo(int ad_user_id, string accessKey) {
            return base.Channel.GetAliseCardNo(ad_user_id, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAliseCardNo(int ad_user_id, string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAliseCardNo(ad_user_id, accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGetAliseCardNo(System.IAsyncResult result) {
            return base.Channel.EndGetAliseCardNo(result);
        }
        
        private System.IAsyncResult OnBeginGetAliseCardNo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int ad_user_id = ((int)(inValues[0]));
            string accessKey = ((string)(inValues[1]));
            return this.BeginGetAliseCardNo(ad_user_id, accessKey, callback, asyncState);
        }
        
        private object[] OnEndGetAliseCardNo(System.IAsyncResult result) {
            string retVal = this.EndGetAliseCardNo(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAliseCardNoCompleted(object state) {
            if ((this.GetAliseCardNoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAliseCardNoCompleted(this, new GetAliseCardNoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAliseCardNoAsync(int ad_user_id, string accessKey) {
            this.GetAliseCardNoAsync(ad_user_id, accessKey, null);
        }
        
        public void GetAliseCardNoAsync(int ad_user_id, string accessKey, object userState) {
            if ((this.onBeginGetAliseCardNoDelegate == null)) {
                this.onBeginGetAliseCardNoDelegate = new BeginOperationDelegate(this.OnBeginGetAliseCardNo);
            }
            if ((this.onEndGetAliseCardNoDelegate == null)) {
                this.onEndGetAliseCardNoDelegate = new EndOperationDelegate(this.OnEndGetAliseCardNo);
            }
            if ((this.onGetAliseCardNoCompletedDelegate == null)) {
                this.onGetAliseCardNoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAliseCardNoCompleted);
            }
            base.InvokeAsync(this.onBeginGetAliseCardNoDelegate, new object[] {
                        ad_user_id,
                        accessKey}, this.onEndGetAliseCardNoDelegate, this.onGetAliseCardNoCompletedDelegate, userState);
        }
        
        public string SetLastLogin(int tenant_ID, string url, string date, string accessKey) {
            return base.Channel.SetLastLogin(tenant_ID, url, date, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSetLastLogin(int tenant_ID, string url, string date, string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetLastLogin(tenant_ID, url, date, accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndSetLastLogin(System.IAsyncResult result) {
            return base.Channel.EndSetLastLogin(result);
        }
        
        private System.IAsyncResult OnBeginSetLastLogin(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int tenant_ID = ((int)(inValues[0]));
            string url = ((string)(inValues[1]));
            string date = ((string)(inValues[2]));
            string accessKey = ((string)(inValues[3]));
            return this.BeginSetLastLogin(tenant_ID, url, date, accessKey, callback, asyncState);
        }
        
        private object[] OnEndSetLastLogin(System.IAsyncResult result) {
            string retVal = this.EndSetLastLogin(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSetLastLoginCompleted(object state) {
            if ((this.SetLastLoginCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetLastLoginCompleted(this, new SetLastLoginCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetLastLoginAsync(int tenant_ID, string url, string date, string accessKey) {
            this.SetLastLoginAsync(tenant_ID, url, date, accessKey, null);
        }
        
        public void SetLastLoginAsync(int tenant_ID, string url, string date, string accessKey, object userState) {
            if ((this.onBeginSetLastLoginDelegate == null)) {
                this.onBeginSetLastLoginDelegate = new BeginOperationDelegate(this.OnBeginSetLastLogin);
            }
            if ((this.onEndSetLastLoginDelegate == null)) {
                this.onEndSetLastLoginDelegate = new EndOperationDelegate(this.OnEndSetLastLogin);
            }
            if ((this.onSetLastLoginCompletedDelegate == null)) {
                this.onSetLastLoginCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetLastLoginCompleted);
            }
            base.InvokeAsync(this.onBeginSetLastLoginDelegate, new object[] {
                        tenant_ID,
                        url,
                        date,
                        accessKey}, this.onEndSetLastLoginDelegate, this.onSetLastLoginCompletedDelegate, userState);
        }
        
        public string CheckCustomerUserSpaceM1(int A_Asset_ID, string accessKey) {
            return base.Channel.CheckCustomerUserSpaceM1(A_Asset_ID, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCheckCustomerUserSpaceM1(int A_Asset_ID, string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCheckCustomerUserSpaceM1(A_Asset_ID, accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndCheckCustomerUserSpaceM1(System.IAsyncResult result) {
            return base.Channel.EndCheckCustomerUserSpaceM1(result);
        }
        
        private System.IAsyncResult OnBeginCheckCustomerUserSpaceM1(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int A_Asset_ID = ((int)(inValues[0]));
            string accessKey = ((string)(inValues[1]));
            return this.BeginCheckCustomerUserSpaceM1(A_Asset_ID, accessKey, callback, asyncState);
        }
        
        private object[] OnEndCheckCustomerUserSpaceM1(System.IAsyncResult result) {
            string retVal = this.EndCheckCustomerUserSpaceM1(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCheckCustomerUserSpaceM1Completed(object state) {
            if ((this.CheckCustomerUserSpaceM1Completed != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CheckCustomerUserSpaceM1Completed(this, new CheckCustomerUserSpaceM1CompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CheckCustomerUserSpaceM1Async(int A_Asset_ID, string accessKey) {
            this.CheckCustomerUserSpaceM1Async(A_Asset_ID, accessKey, null);
        }
        
        public void CheckCustomerUserSpaceM1Async(int A_Asset_ID, string accessKey, object userState) {
            if ((this.onBeginCheckCustomerUserSpaceM1Delegate == null)) {
                this.onBeginCheckCustomerUserSpaceM1Delegate = new BeginOperationDelegate(this.OnBeginCheckCustomerUserSpaceM1);
            }
            if ((this.onEndCheckCustomerUserSpaceM1Delegate == null)) {
                this.onEndCheckCustomerUserSpaceM1Delegate = new EndOperationDelegate(this.OnEndCheckCustomerUserSpaceM1);
            }
            if ((this.onCheckCustomerUserSpaceM1CompletedDelegate == null)) {
                this.onCheckCustomerUserSpaceM1CompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCheckCustomerUserSpaceM1Completed);
            }
            base.InvokeAsync(this.onBeginCheckCustomerUserSpaceM1Delegate, new object[] {
                        A_Asset_ID,
                        accessKey}, this.onEndCheckCustomerUserSpaceM1Delegate, this.onCheckCustomerUserSpaceM1CompletedDelegate, userState);
        }
        
        public string CheckCustomerUserSpaceM2(int AD_User_ID, string accessKey) {
            return base.Channel.CheckCustomerUserSpaceM2(AD_User_ID, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCheckCustomerUserSpaceM2(int AD_User_ID, string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCheckCustomerUserSpaceM2(AD_User_ID, accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndCheckCustomerUserSpaceM2(System.IAsyncResult result) {
            return base.Channel.EndCheckCustomerUserSpaceM2(result);
        }
        
        private System.IAsyncResult OnBeginCheckCustomerUserSpaceM2(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int AD_User_ID = ((int)(inValues[0]));
            string accessKey = ((string)(inValues[1]));
            return this.BeginCheckCustomerUserSpaceM2(AD_User_ID, accessKey, callback, asyncState);
        }
        
        private object[] OnEndCheckCustomerUserSpaceM2(System.IAsyncResult result) {
            string retVal = this.EndCheckCustomerUserSpaceM2(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCheckCustomerUserSpaceM2Completed(object state) {
            if ((this.CheckCustomerUserSpaceM2Completed != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CheckCustomerUserSpaceM2Completed(this, new CheckCustomerUserSpaceM2CompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CheckCustomerUserSpaceM2Async(int AD_User_ID, string accessKey) {
            this.CheckCustomerUserSpaceM2Async(AD_User_ID, accessKey, null);
        }
        
        public void CheckCustomerUserSpaceM2Async(int AD_User_ID, string accessKey, object userState) {
            if ((this.onBeginCheckCustomerUserSpaceM2Delegate == null)) {
                this.onBeginCheckCustomerUserSpaceM2Delegate = new BeginOperationDelegate(this.OnBeginCheckCustomerUserSpaceM2);
            }
            if ((this.onEndCheckCustomerUserSpaceM2Delegate == null)) {
                this.onEndCheckCustomerUserSpaceM2Delegate = new EndOperationDelegate(this.OnEndCheckCustomerUserSpaceM2);
            }
            if ((this.onCheckCustomerUserSpaceM2CompletedDelegate == null)) {
                this.onCheckCustomerUserSpaceM2CompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCheckCustomerUserSpaceM2Completed);
            }
            base.InvokeAsync(this.onBeginCheckCustomerUserSpaceM2Delegate, new object[] {
                        AD_User_ID,
                        accessKey}, this.onEndCheckCustomerUserSpaceM2Delegate, this.onCheckCustomerUserSpaceM2CompletedDelegate, userState);
        }
        
        public string CheckCustomerUserSpaceM3(string url, string accessKey) {
            return base.Channel.CheckCustomerUserSpaceM3(url, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCheckCustomerUserSpaceM3(string url, string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCheckCustomerUserSpaceM3(url, accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndCheckCustomerUserSpaceM3(System.IAsyncResult result) {
            return base.Channel.EndCheckCustomerUserSpaceM3(result);
        }
        
        private System.IAsyncResult OnBeginCheckCustomerUserSpaceM3(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string url = ((string)(inValues[0]));
            string accessKey = ((string)(inValues[1]));
            return this.BeginCheckCustomerUserSpaceM3(url, accessKey, callback, asyncState);
        }
        
        private object[] OnEndCheckCustomerUserSpaceM3(System.IAsyncResult result) {
            string retVal = this.EndCheckCustomerUserSpaceM3(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCheckCustomerUserSpaceM3Completed(object state) {
            if ((this.CheckCustomerUserSpaceM3Completed != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CheckCustomerUserSpaceM3Completed(this, new CheckCustomerUserSpaceM3CompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CheckCustomerUserSpaceM3Async(string url, string accessKey) {
            this.CheckCustomerUserSpaceM3Async(url, accessKey, null);
        }
        
        public void CheckCustomerUserSpaceM3Async(string url, string accessKey, object userState) {
            if ((this.onBeginCheckCustomerUserSpaceM3Delegate == null)) {
                this.onBeginCheckCustomerUserSpaceM3Delegate = new BeginOperationDelegate(this.OnBeginCheckCustomerUserSpaceM3);
            }
            if ((this.onEndCheckCustomerUserSpaceM3Delegate == null)) {
                this.onEndCheckCustomerUserSpaceM3Delegate = new EndOperationDelegate(this.OnEndCheckCustomerUserSpaceM3);
            }
            if ((this.onCheckCustomerUserSpaceM3CompletedDelegate == null)) {
                this.onCheckCustomerUserSpaceM3CompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCheckCustomerUserSpaceM3Completed);
            }
            base.InvokeAsync(this.onBeginCheckCustomerUserSpaceM3Delegate, new object[] {
                        url,
                        accessKey}, this.onEndCheckCustomerUserSpaceM3Delegate, this.onCheckCustomerUserSpaceM3CompletedDelegate, userState);
        }
        
        public string isAllowedToContinue(string url, string accessKey) {
            return base.Channel.isAllowedToContinue(url, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginisAllowedToContinue(string url, string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginisAllowedToContinue(url, accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndisAllowedToContinue(System.IAsyncResult result) {
            return base.Channel.EndisAllowedToContinue(result);
        }
        
        private System.IAsyncResult OnBeginisAllowedToContinue(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string url = ((string)(inValues[0]));
            string accessKey = ((string)(inValues[1]));
            return this.BeginisAllowedToContinue(url, accessKey, callback, asyncState);
        }
        
        private object[] OnEndisAllowedToContinue(System.IAsyncResult result) {
            string retVal = this.EndisAllowedToContinue(result);
            return new object[] {
                    retVal};
        }
        
        private void OnisAllowedToContinueCompleted(object state) {
            if ((this.isAllowedToContinueCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.isAllowedToContinueCompleted(this, new isAllowedToContinueCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void isAllowedToContinueAsync(string url, string accessKey) {
            this.isAllowedToContinueAsync(url, accessKey, null);
        }
        
        public void isAllowedToContinueAsync(string url, string accessKey, object userState) {
            if ((this.onBeginisAllowedToContinueDelegate == null)) {
                this.onBeginisAllowedToContinueDelegate = new BeginOperationDelegate(this.OnBeginisAllowedToContinue);
            }
            if ((this.onEndisAllowedToContinueDelegate == null)) {
                this.onEndisAllowedToContinueDelegate = new EndOperationDelegate(this.OnEndisAllowedToContinue);
            }
            if ((this.onisAllowedToContinueCompletedDelegate == null)) {
                this.onisAllowedToContinueCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnisAllowedToContinueCompleted);
            }
            base.InvokeAsync(this.onBeginisAllowedToContinueDelegate, new object[] {
                        url,
                        accessKey}, this.onEndisAllowedToContinueDelegate, this.onisAllowedToContinueCompletedDelegate, userState);
        }
        
        public string BuyMoreSpace(int AD_user_ID, int Space, string accessKey) {
            return base.Channel.BuyMoreSpace(AD_user_ID, Space, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginBuyMoreSpace(int AD_user_ID, int Space, string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginBuyMoreSpace(AD_user_ID, Space, accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndBuyMoreSpace(System.IAsyncResult result) {
            return base.Channel.EndBuyMoreSpace(result);
        }
        
        private System.IAsyncResult OnBeginBuyMoreSpace(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int AD_user_ID = ((int)(inValues[0]));
            int Space = ((int)(inValues[1]));
            string accessKey = ((string)(inValues[2]));
            return this.BeginBuyMoreSpace(AD_user_ID, Space, accessKey, callback, asyncState);
        }
        
        private object[] OnEndBuyMoreSpace(System.IAsyncResult result) {
            string retVal = this.EndBuyMoreSpace(result);
            return new object[] {
                    retVal};
        }
        
        private void OnBuyMoreSpaceCompleted(object state) {
            if ((this.BuyMoreSpaceCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.BuyMoreSpaceCompleted(this, new BuyMoreSpaceCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void BuyMoreSpaceAsync(int AD_user_ID, int Space, string accessKey) {
            this.BuyMoreSpaceAsync(AD_user_ID, Space, accessKey, null);
        }
        
        public void BuyMoreSpaceAsync(int AD_user_ID, int Space, string accessKey, object userState) {
            if ((this.onBeginBuyMoreSpaceDelegate == null)) {
                this.onBeginBuyMoreSpaceDelegate = new BeginOperationDelegate(this.OnBeginBuyMoreSpace);
            }
            if ((this.onEndBuyMoreSpaceDelegate == null)) {
                this.onEndBuyMoreSpaceDelegate = new EndOperationDelegate(this.OnEndBuyMoreSpace);
            }
            if ((this.onBuyMoreSpaceCompletedDelegate == null)) {
                this.onBuyMoreSpaceCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnBuyMoreSpaceCompleted);
            }
            base.InvokeAsync(this.onBeginBuyMoreSpaceDelegate, new object[] {
                        AD_user_ID,
                        Space,
                        accessKey}, this.onEndBuyMoreSpaceDelegate, this.onBuyMoreSpaceCompletedDelegate, userState);
        }
        
        public string GetBillingInfo(int AD_User_ID, string accessKey) {
            return base.Channel.GetBillingInfo(AD_User_ID, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetBillingInfo(int AD_User_ID, string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetBillingInfo(AD_User_ID, accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGetBillingInfo(System.IAsyncResult result) {
            return base.Channel.EndGetBillingInfo(result);
        }
        
        private System.IAsyncResult OnBeginGetBillingInfo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int AD_User_ID = ((int)(inValues[0]));
            string accessKey = ((string)(inValues[1]));
            return this.BeginGetBillingInfo(AD_User_ID, accessKey, callback, asyncState);
        }
        
        private object[] OnEndGetBillingInfo(System.IAsyncResult result) {
            string retVal = this.EndGetBillingInfo(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetBillingInfoCompleted(object state) {
            if ((this.GetBillingInfoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetBillingInfoCompleted(this, new GetBillingInfoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetBillingInfoAsync(int AD_User_ID, string accessKey) {
            this.GetBillingInfoAsync(AD_User_ID, accessKey, null);
        }
        
        public void GetBillingInfoAsync(int AD_User_ID, string accessKey, object userState) {
            if ((this.onBeginGetBillingInfoDelegate == null)) {
                this.onBeginGetBillingInfoDelegate = new BeginOperationDelegate(this.OnBeginGetBillingInfo);
            }
            if ((this.onEndGetBillingInfoDelegate == null)) {
                this.onEndGetBillingInfoDelegate = new EndOperationDelegate(this.OnEndGetBillingInfo);
            }
            if ((this.onGetBillingInfoCompletedDelegate == null)) {
                this.onGetBillingInfoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetBillingInfoCompleted);
            }
            base.InvokeAsync(this.onBeginGetBillingInfoDelegate, new object[] {
                        AD_User_ID,
                        accessKey}, this.onEndGetBillingInfoDelegate, this.onGetBillingInfoCompletedDelegate, userState);
        }
        
        public string GetUnBilledInfo(int AD_User_ID, string accessKey) {
            return base.Channel.GetUnBilledInfo(AD_User_ID, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetUnBilledInfo(int AD_User_ID, string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetUnBilledInfo(AD_User_ID, accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGetUnBilledInfo(System.IAsyncResult result) {
            return base.Channel.EndGetUnBilledInfo(result);
        }
        
        private System.IAsyncResult OnBeginGetUnBilledInfo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int AD_User_ID = ((int)(inValues[0]));
            string accessKey = ((string)(inValues[1]));
            return this.BeginGetUnBilledInfo(AD_User_ID, accessKey, callback, asyncState);
        }
        
        private object[] OnEndGetUnBilledInfo(System.IAsyncResult result) {
            string retVal = this.EndGetUnBilledInfo(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetUnBilledInfoCompleted(object state) {
            if ((this.GetUnBilledInfoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetUnBilledInfoCompleted(this, new GetUnBilledInfoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetUnBilledInfoAsync(int AD_User_ID, string accessKey) {
            this.GetUnBilledInfoAsync(AD_User_ID, accessKey, null);
        }
        
        public void GetUnBilledInfoAsync(int AD_User_ID, string accessKey, object userState) {
            if ((this.onBeginGetUnBilledInfoDelegate == null)) {
                this.onBeginGetUnBilledInfoDelegate = new BeginOperationDelegate(this.OnBeginGetUnBilledInfo);
            }
            if ((this.onEndGetUnBilledInfoDelegate == null)) {
                this.onEndGetUnBilledInfoDelegate = new EndOperationDelegate(this.OnEndGetUnBilledInfo);
            }
            if ((this.onGetUnBilledInfoCompletedDelegate == null)) {
                this.onGetUnBilledInfoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetUnBilledInfoCompleted);
            }
            base.InvokeAsync(this.onBeginGetUnBilledInfoDelegate, new object[] {
                        AD_User_ID,
                        accessKey}, this.onEndGetUnBilledInfoDelegate, this.onGetUnBilledInfoCompletedDelegate, userState);
        }
        
        public BaseLibrary.CloudService.DNSInfo GetAllTenantforDNS(string zoneCode, string accessKey) {
            return base.Channel.GetAllTenantforDNS(zoneCode, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllTenantforDNS(string zoneCode, string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllTenantforDNS(zoneCode, accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public BaseLibrary.CloudService.DNSInfo EndGetAllTenantforDNS(System.IAsyncResult result) {
            return base.Channel.EndGetAllTenantforDNS(result);
        }
        
        private System.IAsyncResult OnBeginGetAllTenantforDNS(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string zoneCode = ((string)(inValues[0]));
            string accessKey = ((string)(inValues[1]));
            return this.BeginGetAllTenantforDNS(zoneCode, accessKey, callback, asyncState);
        }
        
        private object[] OnEndGetAllTenantforDNS(System.IAsyncResult result) {
            BaseLibrary.CloudService.DNSInfo retVal = this.EndGetAllTenantforDNS(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllTenantforDNSCompleted(object state) {
            if ((this.GetAllTenantforDNSCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllTenantforDNSCompleted(this, new GetAllTenantforDNSCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllTenantforDNSAsync(string zoneCode, string accessKey) {
            this.GetAllTenantforDNSAsync(zoneCode, accessKey, null);
        }
        
        public void GetAllTenantforDNSAsync(string zoneCode, string accessKey, object userState) {
            if ((this.onBeginGetAllTenantforDNSDelegate == null)) {
                this.onBeginGetAllTenantforDNSDelegate = new BeginOperationDelegate(this.OnBeginGetAllTenantforDNS);
            }
            if ((this.onEndGetAllTenantforDNSDelegate == null)) {
                this.onEndGetAllTenantforDNSDelegate = new EndOperationDelegate(this.OnEndGetAllTenantforDNS);
            }
            if ((this.onGetAllTenantforDNSCompletedDelegate == null)) {
                this.onGetAllTenantforDNSCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllTenantforDNSCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllTenantforDNSDelegate, new object[] {
                        zoneCode,
                        accessKey}, this.onEndGetAllTenantforDNSDelegate, this.onGetAllTenantforDNSCompletedDelegate, userState);
        }
        
        public string UpdateDNSStatus(int A_Asset_ID, string serverType, string accessKey) {
            return base.Channel.UpdateDNSStatus(A_Asset_ID, serverType, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateDNSStatus(int A_Asset_ID, string serverType, string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateDNSStatus(A_Asset_ID, serverType, accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndUpdateDNSStatus(System.IAsyncResult result) {
            return base.Channel.EndUpdateDNSStatus(result);
        }
        
        private System.IAsyncResult OnBeginUpdateDNSStatus(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int A_Asset_ID = ((int)(inValues[0]));
            string serverType = ((string)(inValues[1]));
            string accessKey = ((string)(inValues[2]));
            return this.BeginUpdateDNSStatus(A_Asset_ID, serverType, accessKey, callback, asyncState);
        }
        
        private object[] OnEndUpdateDNSStatus(System.IAsyncResult result) {
            string retVal = this.EndUpdateDNSStatus(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdateDNSStatusCompleted(object state) {
            if ((this.UpdateDNSStatusCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateDNSStatusCompleted(this, new UpdateDNSStatusCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateDNSStatusAsync(int A_Asset_ID, string serverType, string accessKey) {
            this.UpdateDNSStatusAsync(A_Asset_ID, serverType, accessKey, null);
        }
        
        public void UpdateDNSStatusAsync(int A_Asset_ID, string serverType, string accessKey, object userState) {
            if ((this.onBeginUpdateDNSStatusDelegate == null)) {
                this.onBeginUpdateDNSStatusDelegate = new BeginOperationDelegate(this.OnBeginUpdateDNSStatus);
            }
            if ((this.onEndUpdateDNSStatusDelegate == null)) {
                this.onEndUpdateDNSStatusDelegate = new EndOperationDelegate(this.OnEndUpdateDNSStatus);
            }
            if ((this.onUpdateDNSStatusCompletedDelegate == null)) {
                this.onUpdateDNSStatusCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateDNSStatusCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateDNSStatusDelegate, new object[] {
                        A_Asset_ID,
                        serverType,
                        accessKey}, this.onEndUpdateDNSStatusDelegate, this.onUpdateDNSStatusCompletedDelegate, userState);
        }
        
        public string UpdateCustomerSpace(string zoneCode, string accessKey) {
            return base.Channel.UpdateCustomerSpace(zoneCode, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateCustomerSpace(string zoneCode, string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateCustomerSpace(zoneCode, accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndUpdateCustomerSpace(System.IAsyncResult result) {
            return base.Channel.EndUpdateCustomerSpace(result);
        }
        
        private System.IAsyncResult OnBeginUpdateCustomerSpace(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string zoneCode = ((string)(inValues[0]));
            string accessKey = ((string)(inValues[1]));
            return this.BeginUpdateCustomerSpace(zoneCode, accessKey, callback, asyncState);
        }
        
        private object[] OnEndUpdateCustomerSpace(System.IAsyncResult result) {
            string retVal = this.EndUpdateCustomerSpace(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdateCustomerSpaceCompleted(object state) {
            if ((this.UpdateCustomerSpaceCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateCustomerSpaceCompleted(this, new UpdateCustomerSpaceCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateCustomerSpaceAsync(string zoneCode, string accessKey) {
            this.UpdateCustomerSpaceAsync(zoneCode, accessKey, null);
        }
        
        public void UpdateCustomerSpaceAsync(string zoneCode, string accessKey, object userState) {
            if ((this.onBeginUpdateCustomerSpaceDelegate == null)) {
                this.onBeginUpdateCustomerSpaceDelegate = new BeginOperationDelegate(this.OnBeginUpdateCustomerSpace);
            }
            if ((this.onEndUpdateCustomerSpaceDelegate == null)) {
                this.onEndUpdateCustomerSpaceDelegate = new EndOperationDelegate(this.OnEndUpdateCustomerSpace);
            }
            if ((this.onUpdateCustomerSpaceCompletedDelegate == null)) {
                this.onUpdateCustomerSpaceCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateCustomerSpaceCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateCustomerSpaceDelegate, new object[] {
                        zoneCode,
                        accessKey}, this.onEndUpdateCustomerSpaceDelegate, this.onUpdateCustomerSpaceCompletedDelegate, userState);
        }
        
        public string ScheduleBackup(int numberOfDay, int AD_User_ID, string ipaddress, string accessKey) {
            return base.Channel.ScheduleBackup(numberOfDay, AD_User_ID, ipaddress, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginScheduleBackup(int numberOfDay, int AD_User_ID, string ipaddress, string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginScheduleBackup(numberOfDay, AD_User_ID, ipaddress, accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndScheduleBackup(System.IAsyncResult result) {
            return base.Channel.EndScheduleBackup(result);
        }
        
        private System.IAsyncResult OnBeginScheduleBackup(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int numberOfDay = ((int)(inValues[0]));
            int AD_User_ID = ((int)(inValues[1]));
            string ipaddress = ((string)(inValues[2]));
            string accessKey = ((string)(inValues[3]));
            return this.BeginScheduleBackup(numberOfDay, AD_User_ID, ipaddress, accessKey, callback, asyncState);
        }
        
        private object[] OnEndScheduleBackup(System.IAsyncResult result) {
            string retVal = this.EndScheduleBackup(result);
            return new object[] {
                    retVal};
        }
        
        private void OnScheduleBackupCompleted(object state) {
            if ((this.ScheduleBackupCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ScheduleBackupCompleted(this, new ScheduleBackupCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ScheduleBackupAsync(int numberOfDay, int AD_User_ID, string ipaddress, string accessKey) {
            this.ScheduleBackupAsync(numberOfDay, AD_User_ID, ipaddress, accessKey, null);
        }
        
        public void ScheduleBackupAsync(int numberOfDay, int AD_User_ID, string ipaddress, string accessKey, object userState) {
            if ((this.onBeginScheduleBackupDelegate == null)) {
                this.onBeginScheduleBackupDelegate = new BeginOperationDelegate(this.OnBeginScheduleBackup);
            }
            if ((this.onEndScheduleBackupDelegate == null)) {
                this.onEndScheduleBackupDelegate = new EndOperationDelegate(this.OnEndScheduleBackup);
            }
            if ((this.onScheduleBackupCompletedDelegate == null)) {
                this.onScheduleBackupCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnScheduleBackupCompleted);
            }
            base.InvokeAsync(this.onBeginScheduleBackupDelegate, new object[] {
                        numberOfDay,
                        AD_User_ID,
                        ipaddress,
                        accessKey}, this.onEndScheduleBackupDelegate, this.onScheduleBackupCompletedDelegate, userState);
        }
        
        public string SetCustomerPersonalDetail(int AD_User_ID, string fullName, string userName, string email, string companyName, string mobile, string city, string accessKey) {
            return base.Channel.SetCustomerPersonalDetail(AD_User_ID, fullName, userName, email, companyName, mobile, city, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSetCustomerPersonalDetail(int AD_User_ID, string fullName, string userName, string email, string companyName, string mobile, string city, string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetCustomerPersonalDetail(AD_User_ID, fullName, userName, email, companyName, mobile, city, accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndSetCustomerPersonalDetail(System.IAsyncResult result) {
            return base.Channel.EndSetCustomerPersonalDetail(result);
        }
        
        private System.IAsyncResult OnBeginSetCustomerPersonalDetail(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int AD_User_ID = ((int)(inValues[0]));
            string fullName = ((string)(inValues[1]));
            string userName = ((string)(inValues[2]));
            string email = ((string)(inValues[3]));
            string companyName = ((string)(inValues[4]));
            string mobile = ((string)(inValues[5]));
            string city = ((string)(inValues[6]));
            string accessKey = ((string)(inValues[7]));
            return this.BeginSetCustomerPersonalDetail(AD_User_ID, fullName, userName, email, companyName, mobile, city, accessKey, callback, asyncState);
        }
        
        private object[] OnEndSetCustomerPersonalDetail(System.IAsyncResult result) {
            string retVal = this.EndSetCustomerPersonalDetail(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSetCustomerPersonalDetailCompleted(object state) {
            if ((this.SetCustomerPersonalDetailCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetCustomerPersonalDetailCompleted(this, new SetCustomerPersonalDetailCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetCustomerPersonalDetailAsync(int AD_User_ID, string fullName, string userName, string email, string companyName, string mobile, string city, string accessKey) {
            this.SetCustomerPersonalDetailAsync(AD_User_ID, fullName, userName, email, companyName, mobile, city, accessKey, null);
        }
        
        public void SetCustomerPersonalDetailAsync(int AD_User_ID, string fullName, string userName, string email, string companyName, string mobile, string city, string accessKey, object userState) {
            if ((this.onBeginSetCustomerPersonalDetailDelegate == null)) {
                this.onBeginSetCustomerPersonalDetailDelegate = new BeginOperationDelegate(this.OnBeginSetCustomerPersonalDetail);
            }
            if ((this.onEndSetCustomerPersonalDetailDelegate == null)) {
                this.onEndSetCustomerPersonalDetailDelegate = new EndOperationDelegate(this.OnEndSetCustomerPersonalDetail);
            }
            if ((this.onSetCustomerPersonalDetailCompletedDelegate == null)) {
                this.onSetCustomerPersonalDetailCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetCustomerPersonalDetailCompleted);
            }
            base.InvokeAsync(this.onBeginSetCustomerPersonalDetailDelegate, new object[] {
                        AD_User_ID,
                        fullName,
                        userName,
                        email,
                        companyName,
                        mobile,
                        city,
                        accessKey}, this.onEndSetCustomerPersonalDetailDelegate, this.onSetCustomerPersonalDetailCompletedDelegate, userState);
        }
        
        public string GetCustomerPersonalDetail(int AD_User_ID, string accessKey) {
            return base.Channel.GetCustomerPersonalDetail(AD_User_ID, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCustomerPersonalDetail(int AD_User_ID, string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCustomerPersonalDetail(AD_User_ID, accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGetCustomerPersonalDetail(System.IAsyncResult result) {
            return base.Channel.EndGetCustomerPersonalDetail(result);
        }
        
        private System.IAsyncResult OnBeginGetCustomerPersonalDetail(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int AD_User_ID = ((int)(inValues[0]));
            string accessKey = ((string)(inValues[1]));
            return this.BeginGetCustomerPersonalDetail(AD_User_ID, accessKey, callback, asyncState);
        }
        
        private object[] OnEndGetCustomerPersonalDetail(System.IAsyncResult result) {
            string retVal = this.EndGetCustomerPersonalDetail(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCustomerPersonalDetailCompleted(object state) {
            if ((this.GetCustomerPersonalDetailCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCustomerPersonalDetailCompleted(this, new GetCustomerPersonalDetailCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCustomerPersonalDetailAsync(int AD_User_ID, string accessKey) {
            this.GetCustomerPersonalDetailAsync(AD_User_ID, accessKey, null);
        }
        
        public void GetCustomerPersonalDetailAsync(int AD_User_ID, string accessKey, object userState) {
            if ((this.onBeginGetCustomerPersonalDetailDelegate == null)) {
                this.onBeginGetCustomerPersonalDetailDelegate = new BeginOperationDelegate(this.OnBeginGetCustomerPersonalDetail);
            }
            if ((this.onEndGetCustomerPersonalDetailDelegate == null)) {
                this.onEndGetCustomerPersonalDetailDelegate = new EndOperationDelegate(this.OnEndGetCustomerPersonalDetail);
            }
            if ((this.onGetCustomerPersonalDetailCompletedDelegate == null)) {
                this.onGetCustomerPersonalDetailCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCustomerPersonalDetailCompleted);
            }
            base.InvokeAsync(this.onBeginGetCustomerPersonalDetailDelegate, new object[] {
                        AD_User_ID,
                        accessKey}, this.onEndGetCustomerPersonalDetailDelegate, this.onGetCustomerPersonalDetailCompletedDelegate, userState);
        }
        
        public string GetCustomerBillingSummary(int AD_User_ID, string accessKey) {
            return base.Channel.GetCustomerBillingSummary(AD_User_ID, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCustomerBillingSummary(int AD_User_ID, string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCustomerBillingSummary(AD_User_ID, accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGetCustomerBillingSummary(System.IAsyncResult result) {
            return base.Channel.EndGetCustomerBillingSummary(result);
        }
        
        private System.IAsyncResult OnBeginGetCustomerBillingSummary(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int AD_User_ID = ((int)(inValues[0]));
            string accessKey = ((string)(inValues[1]));
            return this.BeginGetCustomerBillingSummary(AD_User_ID, accessKey, callback, asyncState);
        }
        
        private object[] OnEndGetCustomerBillingSummary(System.IAsyncResult result) {
            string retVal = this.EndGetCustomerBillingSummary(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCustomerBillingSummaryCompleted(object state) {
            if ((this.GetCustomerBillingSummaryCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCustomerBillingSummaryCompleted(this, new GetCustomerBillingSummaryCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCustomerBillingSummaryAsync(int AD_User_ID, string accessKey) {
            this.GetCustomerBillingSummaryAsync(AD_User_ID, accessKey, null);
        }
        
        public void GetCustomerBillingSummaryAsync(int AD_User_ID, string accessKey, object userState) {
            if ((this.onBeginGetCustomerBillingSummaryDelegate == null)) {
                this.onBeginGetCustomerBillingSummaryDelegate = new BeginOperationDelegate(this.OnBeginGetCustomerBillingSummary);
            }
            if ((this.onEndGetCustomerBillingSummaryDelegate == null)) {
                this.onEndGetCustomerBillingSummaryDelegate = new EndOperationDelegate(this.OnEndGetCustomerBillingSummary);
            }
            if ((this.onGetCustomerBillingSummaryCompletedDelegate == null)) {
                this.onGetCustomerBillingSummaryCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCustomerBillingSummaryCompleted);
            }
            base.InvokeAsync(this.onBeginGetCustomerBillingSummaryDelegate, new object[] {
                        AD_User_ID,
                        accessKey}, this.onEndGetCustomerBillingSummaryDelegate, this.onGetCustomerBillingSummaryCompletedDelegate, userState);
        }
        
        public string GetUserID(string username, string password, string accessKey) {
            return base.Channel.GetUserID(username, password, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetUserID(string username, string password, string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetUserID(username, password, accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGetUserID(System.IAsyncResult result) {
            return base.Channel.EndGetUserID(result);
        }
        
        private System.IAsyncResult OnBeginGetUserID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string username = ((string)(inValues[0]));
            string password = ((string)(inValues[1]));
            string accessKey = ((string)(inValues[2]));
            return this.BeginGetUserID(username, password, accessKey, callback, asyncState);
        }
        
        private object[] OnEndGetUserID(System.IAsyncResult result) {
            string retVal = this.EndGetUserID(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetUserIDCompleted(object state) {
            if ((this.GetUserIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetUserIDCompleted(this, new GetUserIDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetUserIDAsync(string username, string password, string accessKey) {
            this.GetUserIDAsync(username, password, accessKey, null);
        }
        
        public void GetUserIDAsync(string username, string password, string accessKey, object userState) {
            if ((this.onBeginGetUserIDDelegate == null)) {
                this.onBeginGetUserIDDelegate = new BeginOperationDelegate(this.OnBeginGetUserID);
            }
            if ((this.onEndGetUserIDDelegate == null)) {
                this.onEndGetUserIDDelegate = new EndOperationDelegate(this.OnEndGetUserID);
            }
            if ((this.onGetUserIDCompletedDelegate == null)) {
                this.onGetUserIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetUserIDCompleted);
            }
            base.InvokeAsync(this.onBeginGetUserIDDelegate, new object[] {
                        username,
                        password,
                        accessKey}, this.onEndGetUserIDDelegate, this.onGetUserIDCompletedDelegate, userState);
        }
        
        public string GetUserInfo(string userID, string accessKey) {
            return base.Channel.GetUserInfo(userID, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetUserInfo(string userID, string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetUserInfo(userID, accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGetUserInfo(System.IAsyncResult result) {
            return base.Channel.EndGetUserInfo(result);
        }
        
        private System.IAsyncResult OnBeginGetUserInfo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userID = ((string)(inValues[0]));
            string accessKey = ((string)(inValues[1]));
            return this.BeginGetUserInfo(userID, accessKey, callback, asyncState);
        }
        
        private object[] OnEndGetUserInfo(System.IAsyncResult result) {
            string retVal = this.EndGetUserInfo(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetUserInfoCompleted(object state) {
            if ((this.GetUserInfoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetUserInfoCompleted(this, new GetUserInfoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetUserInfoAsync(string userID, string accessKey) {
            this.GetUserInfoAsync(userID, accessKey, null);
        }
        
        public void GetUserInfoAsync(string userID, string accessKey, object userState) {
            if ((this.onBeginGetUserInfoDelegate == null)) {
                this.onBeginGetUserInfoDelegate = new BeginOperationDelegate(this.OnBeginGetUserInfo);
            }
            if ((this.onEndGetUserInfoDelegate == null)) {
                this.onEndGetUserInfoDelegate = new EndOperationDelegate(this.OnEndGetUserInfo);
            }
            if ((this.onGetUserInfoCompletedDelegate == null)) {
                this.onGetUserInfoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetUserInfoCompleted);
            }
            base.InvokeAsync(this.onBeginGetUserInfoDelegate, new object[] {
                        userID,
                        accessKey}, this.onEndGetUserInfoDelegate, this.onGetUserInfoCompletedDelegate, userState);
        }
        
        public string ForgotPortalPassword(string userName, string userEmail, string accessKey) {
            return base.Channel.ForgotPortalPassword(userName, userEmail, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginForgotPortalPassword(string userName, string userEmail, string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginForgotPortalPassword(userName, userEmail, accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndForgotPortalPassword(System.IAsyncResult result) {
            return base.Channel.EndForgotPortalPassword(result);
        }
        
        private System.IAsyncResult OnBeginForgotPortalPassword(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userName = ((string)(inValues[0]));
            string userEmail = ((string)(inValues[1]));
            string accessKey = ((string)(inValues[2]));
            return this.BeginForgotPortalPassword(userName, userEmail, accessKey, callback, asyncState);
        }
        
        private object[] OnEndForgotPortalPassword(System.IAsyncResult result) {
            string retVal = this.EndForgotPortalPassword(result);
            return new object[] {
                    retVal};
        }
        
        private void OnForgotPortalPasswordCompleted(object state) {
            if ((this.ForgotPortalPasswordCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ForgotPortalPasswordCompleted(this, new ForgotPortalPasswordCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ForgotPortalPasswordAsync(string userName, string userEmail, string accessKey) {
            this.ForgotPortalPasswordAsync(userName, userEmail, accessKey, null);
        }
        
        public void ForgotPortalPasswordAsync(string userName, string userEmail, string accessKey, object userState) {
            if ((this.onBeginForgotPortalPasswordDelegate == null)) {
                this.onBeginForgotPortalPasswordDelegate = new BeginOperationDelegate(this.OnBeginForgotPortalPassword);
            }
            if ((this.onEndForgotPortalPasswordDelegate == null)) {
                this.onEndForgotPortalPasswordDelegate = new EndOperationDelegate(this.OnEndForgotPortalPassword);
            }
            if ((this.onForgotPortalPasswordCompletedDelegate == null)) {
                this.onForgotPortalPasswordCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnForgotPortalPasswordCompleted);
            }
            base.InvokeAsync(this.onBeginForgotPortalPasswordDelegate, new object[] {
                        userName,
                        userEmail,
                        accessKey}, this.onEndForgotPortalPasswordDelegate, this.onForgotPortalPasswordCompletedDelegate, userState);
        }
        
        public string VForgotPortalPassword(string userName, string userEmail, string accessKey) {
            return base.Channel.VForgotPortalPassword(userName, userEmail, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginVForgotPortalPassword(string userName, string userEmail, string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginVForgotPortalPassword(userName, userEmail, accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndVForgotPortalPassword(System.IAsyncResult result) {
            return base.Channel.EndVForgotPortalPassword(result);
        }
        
        private System.IAsyncResult OnBeginVForgotPortalPassword(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userName = ((string)(inValues[0]));
            string userEmail = ((string)(inValues[1]));
            string accessKey = ((string)(inValues[2]));
            return this.BeginVForgotPortalPassword(userName, userEmail, accessKey, callback, asyncState);
        }
        
        private object[] OnEndVForgotPortalPassword(System.IAsyncResult result) {
            string retVal = this.EndVForgotPortalPassword(result);
            return new object[] {
                    retVal};
        }
        
        private void OnVForgotPortalPasswordCompleted(object state) {
            if ((this.VForgotPortalPasswordCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.VForgotPortalPasswordCompleted(this, new VForgotPortalPasswordCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void VForgotPortalPasswordAsync(string userName, string userEmail, string accessKey) {
            this.VForgotPortalPasswordAsync(userName, userEmail, accessKey, null);
        }
        
        public void VForgotPortalPasswordAsync(string userName, string userEmail, string accessKey, object userState) {
            if ((this.onBeginVForgotPortalPasswordDelegate == null)) {
                this.onBeginVForgotPortalPasswordDelegate = new BeginOperationDelegate(this.OnBeginVForgotPortalPassword);
            }
            if ((this.onEndVForgotPortalPasswordDelegate == null)) {
                this.onEndVForgotPortalPasswordDelegate = new EndOperationDelegate(this.OnEndVForgotPortalPassword);
            }
            if ((this.onVForgotPortalPasswordCompletedDelegate == null)) {
                this.onVForgotPortalPasswordCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnVForgotPortalPasswordCompleted);
            }
            base.InvokeAsync(this.onBeginVForgotPortalPasswordDelegate, new object[] {
                        userName,
                        userEmail,
                        accessKey}, this.onEndVForgotPortalPasswordDelegate, this.onVForgotPortalPasswordCompletedDelegate, userState);
        }
        
        public string PForgotPortalPassword(string userName, string userEmail, string accessKey) {
            return base.Channel.PForgotPortalPassword(userName, userEmail, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginPForgotPortalPassword(string userName, string userEmail, string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginPForgotPortalPassword(userName, userEmail, accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndPForgotPortalPassword(System.IAsyncResult result) {
            return base.Channel.EndPForgotPortalPassword(result);
        }
        
        private System.IAsyncResult OnBeginPForgotPortalPassword(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userName = ((string)(inValues[0]));
            string userEmail = ((string)(inValues[1]));
            string accessKey = ((string)(inValues[2]));
            return this.BeginPForgotPortalPassword(userName, userEmail, accessKey, callback, asyncState);
        }
        
        private object[] OnEndPForgotPortalPassword(System.IAsyncResult result) {
            string retVal = this.EndPForgotPortalPassword(result);
            return new object[] {
                    retVal};
        }
        
        private void OnPForgotPortalPasswordCompleted(object state) {
            if ((this.PForgotPortalPasswordCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.PForgotPortalPasswordCompleted(this, new PForgotPortalPasswordCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void PForgotPortalPasswordAsync(string userName, string userEmail, string accessKey) {
            this.PForgotPortalPasswordAsync(userName, userEmail, accessKey, null);
        }
        
        public void PForgotPortalPasswordAsync(string userName, string userEmail, string accessKey, object userState) {
            if ((this.onBeginPForgotPortalPasswordDelegate == null)) {
                this.onBeginPForgotPortalPasswordDelegate = new BeginOperationDelegate(this.OnBeginPForgotPortalPassword);
            }
            if ((this.onEndPForgotPortalPasswordDelegate == null)) {
                this.onEndPForgotPortalPasswordDelegate = new EndOperationDelegate(this.OnEndPForgotPortalPassword);
            }
            if ((this.onPForgotPortalPasswordCompletedDelegate == null)) {
                this.onPForgotPortalPasswordCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnPForgotPortalPasswordCompleted);
            }
            base.InvokeAsync(this.onBeginPForgotPortalPasswordDelegate, new object[] {
                        userName,
                        userEmail,
                        accessKey}, this.onEndPForgotPortalPasswordDelegate, this.onPForgotPortalPasswordCompletedDelegate, userState);
        }
        
        public string NotifyServerCreated(int A_Asset_ID, int client_ID, string accessKey) {
            return base.Channel.NotifyServerCreated(A_Asset_ID, client_ID, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginNotifyServerCreated(int A_Asset_ID, int client_ID, string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginNotifyServerCreated(A_Asset_ID, client_ID, accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndNotifyServerCreated(System.IAsyncResult result) {
            return base.Channel.EndNotifyServerCreated(result);
        }
        
        private System.IAsyncResult OnBeginNotifyServerCreated(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int A_Asset_ID = ((int)(inValues[0]));
            int client_ID = ((int)(inValues[1]));
            string accessKey = ((string)(inValues[2]));
            return this.BeginNotifyServerCreated(A_Asset_ID, client_ID, accessKey, callback, asyncState);
        }
        
        private object[] OnEndNotifyServerCreated(System.IAsyncResult result) {
            string retVal = this.EndNotifyServerCreated(result);
            return new object[] {
                    retVal};
        }
        
        private void OnNotifyServerCreatedCompleted(object state) {
            if ((this.NotifyServerCreatedCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.NotifyServerCreatedCompleted(this, new NotifyServerCreatedCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void NotifyServerCreatedAsync(int A_Asset_ID, int client_ID, string accessKey) {
            this.NotifyServerCreatedAsync(A_Asset_ID, client_ID, accessKey, null);
        }
        
        public void NotifyServerCreatedAsync(int A_Asset_ID, int client_ID, string accessKey, object userState) {
            if ((this.onBeginNotifyServerCreatedDelegate == null)) {
                this.onBeginNotifyServerCreatedDelegate = new BeginOperationDelegate(this.OnBeginNotifyServerCreated);
            }
            if ((this.onEndNotifyServerCreatedDelegate == null)) {
                this.onEndNotifyServerCreatedDelegate = new EndOperationDelegate(this.OnEndNotifyServerCreated);
            }
            if ((this.onNotifyServerCreatedCompletedDelegate == null)) {
                this.onNotifyServerCreatedCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnNotifyServerCreatedCompleted);
            }
            base.InvokeAsync(this.onBeginNotifyServerCreatedDelegate, new object[] {
                        A_Asset_ID,
                        client_ID,
                        accessKey}, this.onEndNotifyServerCreatedDelegate, this.onNotifyServerCreatedCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BaseLibrary.CloudService.SaveErrorLogResponse BaseLibrary.CloudService.ServiceSoap.SaveErrorLog(BaseLibrary.CloudService.SaveErrorLogRequest request) {
            return base.Channel.SaveErrorLog(request);
        }
        
        public string SaveErrorLog(int AD_User_ID, int A_Asset_ID, System.Nullable<int> CS_CustomerTenantInfo_ID, int errorNo, System.Nullable<int> R_Request_ID, string InnerError, string accessKey) {
            BaseLibrary.CloudService.SaveErrorLogRequest inValue = new BaseLibrary.CloudService.SaveErrorLogRequest();
            inValue.AD_User_ID = AD_User_ID;
            inValue.A_Asset_ID = A_Asset_ID;
            inValue.CS_CustomerTenantInfo_ID = CS_CustomerTenantInfo_ID;
            inValue.errorNo = errorNo;
            inValue.R_Request_ID = R_Request_ID;
            inValue.InnerError = InnerError;
            inValue.accessKey = accessKey;
            BaseLibrary.CloudService.SaveErrorLogResponse retVal = ((BaseLibrary.CloudService.ServiceSoap)(this)).SaveErrorLog(inValue);
            return retVal.SaveErrorLogResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult BaseLibrary.CloudService.ServiceSoap.BeginSaveErrorLog(BaseLibrary.CloudService.SaveErrorLogRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSaveErrorLog(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSaveErrorLog(int AD_User_ID, int A_Asset_ID, System.Nullable<int> CS_CustomerTenantInfo_ID, int errorNo, System.Nullable<int> R_Request_ID, string InnerError, string accessKey, System.AsyncCallback callback, object asyncState) {
            BaseLibrary.CloudService.SaveErrorLogRequest inValue = new BaseLibrary.CloudService.SaveErrorLogRequest();
            inValue.AD_User_ID = AD_User_ID;
            inValue.A_Asset_ID = A_Asset_ID;
            inValue.CS_CustomerTenantInfo_ID = CS_CustomerTenantInfo_ID;
            inValue.errorNo = errorNo;
            inValue.R_Request_ID = R_Request_ID;
            inValue.InnerError = InnerError;
            inValue.accessKey = accessKey;
            return ((BaseLibrary.CloudService.ServiceSoap)(this)).BeginSaveErrorLog(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BaseLibrary.CloudService.SaveErrorLogResponse BaseLibrary.CloudService.ServiceSoap.EndSaveErrorLog(System.IAsyncResult result) {
            return base.Channel.EndSaveErrorLog(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndSaveErrorLog(System.IAsyncResult result) {
            BaseLibrary.CloudService.SaveErrorLogResponse retVal = ((BaseLibrary.CloudService.ServiceSoap)(this)).EndSaveErrorLog(result);
            return retVal.SaveErrorLogResult;
        }
        
        private System.IAsyncResult OnBeginSaveErrorLog(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int AD_User_ID = ((int)(inValues[0]));
            int A_Asset_ID = ((int)(inValues[1]));
            System.Nullable<int> CS_CustomerTenantInfo_ID = ((System.Nullable<int>)(inValues[2]));
            int errorNo = ((int)(inValues[3]));
            System.Nullable<int> R_Request_ID = ((System.Nullable<int>)(inValues[4]));
            string InnerError = ((string)(inValues[5]));
            string accessKey = ((string)(inValues[6]));
            return this.BeginSaveErrorLog(AD_User_ID, A_Asset_ID, CS_CustomerTenantInfo_ID, errorNo, R_Request_ID, InnerError, accessKey, callback, asyncState);
        }
        
        private object[] OnEndSaveErrorLog(System.IAsyncResult result) {
            string retVal = this.EndSaveErrorLog(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSaveErrorLogCompleted(object state) {
            if ((this.SaveErrorLogCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaveErrorLogCompleted(this, new SaveErrorLogCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SaveErrorLogAsync(int AD_User_ID, int A_Asset_ID, System.Nullable<int> CS_CustomerTenantInfo_ID, int errorNo, System.Nullable<int> R_Request_ID, string InnerError, string accessKey) {
            this.SaveErrorLogAsync(AD_User_ID, A_Asset_ID, CS_CustomerTenantInfo_ID, errorNo, R_Request_ID, InnerError, accessKey, null);
        }
        
        public void SaveErrorLogAsync(int AD_User_ID, int A_Asset_ID, System.Nullable<int> CS_CustomerTenantInfo_ID, int errorNo, System.Nullable<int> R_Request_ID, string InnerError, string accessKey, object userState) {
            if ((this.onBeginSaveErrorLogDelegate == null)) {
                this.onBeginSaveErrorLogDelegate = new BeginOperationDelegate(this.OnBeginSaveErrorLog);
            }
            if ((this.onEndSaveErrorLogDelegate == null)) {
                this.onEndSaveErrorLogDelegate = new EndOperationDelegate(this.OnEndSaveErrorLog);
            }
            if ((this.onSaveErrorLogCompletedDelegate == null)) {
                this.onSaveErrorLogCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveErrorLogCompleted);
            }
            base.InvokeAsync(this.onBeginSaveErrorLogDelegate, new object[] {
                        AD_User_ID,
                        A_Asset_ID,
                        CS_CustomerTenantInfo_ID,
                        errorNo,
                        R_Request_ID,
                        InnerError,
                        accessKey}, this.onEndSaveErrorLogDelegate, this.onSaveErrorLogCompletedDelegate, userState);
        }
        
        public string SaveErrorInLog(string customerValue, int errorNumber, string accessKey) {
            return base.Channel.SaveErrorInLog(customerValue, errorNumber, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSaveErrorInLog(string customerValue, int errorNumber, string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSaveErrorInLog(customerValue, errorNumber, accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndSaveErrorInLog(System.IAsyncResult result) {
            return base.Channel.EndSaveErrorInLog(result);
        }
        
        private System.IAsyncResult OnBeginSaveErrorInLog(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string customerValue = ((string)(inValues[0]));
            int errorNumber = ((int)(inValues[1]));
            string accessKey = ((string)(inValues[2]));
            return this.BeginSaveErrorInLog(customerValue, errorNumber, accessKey, callback, asyncState);
        }
        
        private object[] OnEndSaveErrorInLog(System.IAsyncResult result) {
            string retVal = this.EndSaveErrorInLog(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSaveErrorInLogCompleted(object state) {
            if ((this.SaveErrorInLogCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaveErrorInLogCompleted(this, new SaveErrorInLogCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SaveErrorInLogAsync(string customerValue, int errorNumber, string accessKey) {
            this.SaveErrorInLogAsync(customerValue, errorNumber, accessKey, null);
        }
        
        public void SaveErrorInLogAsync(string customerValue, int errorNumber, string accessKey, object userState) {
            if ((this.onBeginSaveErrorInLogDelegate == null)) {
                this.onBeginSaveErrorInLogDelegate = new BeginOperationDelegate(this.OnBeginSaveErrorInLog);
            }
            if ((this.onEndSaveErrorInLogDelegate == null)) {
                this.onEndSaveErrorInLogDelegate = new EndOperationDelegate(this.OnEndSaveErrorInLog);
            }
            if ((this.onSaveErrorInLogCompletedDelegate == null)) {
                this.onSaveErrorInLogCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveErrorInLogCompleted);
            }
            base.InvokeAsync(this.onBeginSaveErrorInLogDelegate, new object[] {
                        customerValue,
                        errorNumber,
                        accessKey}, this.onEndSaveErrorInLogDelegate, this.onSaveErrorInLogCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BaseLibrary.CloudService.SaveErrorInLogM1Response BaseLibrary.CloudService.ServiceSoap.SaveErrorInLogM1(BaseLibrary.CloudService.SaveErrorInLogM1Request request) {
            return base.Channel.SaveErrorInLogM1(request);
        }
        
        public string SaveErrorInLogM1(string customerValue, int errorNumber, System.Nullable<int> R_Request_ID, string accessKey) {
            BaseLibrary.CloudService.SaveErrorInLogM1Request inValue = new BaseLibrary.CloudService.SaveErrorInLogM1Request();
            inValue.customerValue = customerValue;
            inValue.errorNumber = errorNumber;
            inValue.R_Request_ID = R_Request_ID;
            inValue.accessKey = accessKey;
            BaseLibrary.CloudService.SaveErrorInLogM1Response retVal = ((BaseLibrary.CloudService.ServiceSoap)(this)).SaveErrorInLogM1(inValue);
            return retVal.SaveErrorInLogM1Result;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult BaseLibrary.CloudService.ServiceSoap.BeginSaveErrorInLogM1(BaseLibrary.CloudService.SaveErrorInLogM1Request request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSaveErrorInLogM1(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSaveErrorInLogM1(string customerValue, int errorNumber, System.Nullable<int> R_Request_ID, string accessKey, System.AsyncCallback callback, object asyncState) {
            BaseLibrary.CloudService.SaveErrorInLogM1Request inValue = new BaseLibrary.CloudService.SaveErrorInLogM1Request();
            inValue.customerValue = customerValue;
            inValue.errorNumber = errorNumber;
            inValue.R_Request_ID = R_Request_ID;
            inValue.accessKey = accessKey;
            return ((BaseLibrary.CloudService.ServiceSoap)(this)).BeginSaveErrorInLogM1(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BaseLibrary.CloudService.SaveErrorInLogM1Response BaseLibrary.CloudService.ServiceSoap.EndSaveErrorInLogM1(System.IAsyncResult result) {
            return base.Channel.EndSaveErrorInLogM1(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndSaveErrorInLogM1(System.IAsyncResult result) {
            BaseLibrary.CloudService.SaveErrorInLogM1Response retVal = ((BaseLibrary.CloudService.ServiceSoap)(this)).EndSaveErrorInLogM1(result);
            return retVal.SaveErrorInLogM1Result;
        }
        
        private System.IAsyncResult OnBeginSaveErrorInLogM1(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string customerValue = ((string)(inValues[0]));
            int errorNumber = ((int)(inValues[1]));
            System.Nullable<int> R_Request_ID = ((System.Nullable<int>)(inValues[2]));
            string accessKey = ((string)(inValues[3]));
            return this.BeginSaveErrorInLogM1(customerValue, errorNumber, R_Request_ID, accessKey, callback, asyncState);
        }
        
        private object[] OnEndSaveErrorInLogM1(System.IAsyncResult result) {
            string retVal = this.EndSaveErrorInLogM1(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSaveErrorInLogM1Completed(object state) {
            if ((this.SaveErrorInLogM1Completed != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaveErrorInLogM1Completed(this, new SaveErrorInLogM1CompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SaveErrorInLogM1Async(string customerValue, int errorNumber, System.Nullable<int> R_Request_ID, string accessKey) {
            this.SaveErrorInLogM1Async(customerValue, errorNumber, R_Request_ID, accessKey, null);
        }
        
        public void SaveErrorInLogM1Async(string customerValue, int errorNumber, System.Nullable<int> R_Request_ID, string accessKey, object userState) {
            if ((this.onBeginSaveErrorInLogM1Delegate == null)) {
                this.onBeginSaveErrorInLogM1Delegate = new BeginOperationDelegate(this.OnBeginSaveErrorInLogM1);
            }
            if ((this.onEndSaveErrorInLogM1Delegate == null)) {
                this.onEndSaveErrorInLogM1Delegate = new EndOperationDelegate(this.OnEndSaveErrorInLogM1);
            }
            if ((this.onSaveErrorInLogM1CompletedDelegate == null)) {
                this.onSaveErrorInLogM1CompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveErrorInLogM1Completed);
            }
            base.InvokeAsync(this.onBeginSaveErrorInLogM1Delegate, new object[] {
                        customerValue,
                        errorNumber,
                        R_Request_ID,
                        accessKey}, this.onEndSaveErrorInLogM1Delegate, this.onSaveErrorInLogM1CompletedDelegate, userState);
        }
        
        public string TestProccesorConnection(string zoneCode, string accessKey) {
            return base.Channel.TestProccesorConnection(zoneCode, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginTestProccesorConnection(string zoneCode, string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginTestProccesorConnection(zoneCode, accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndTestProccesorConnection(System.IAsyncResult result) {
            return base.Channel.EndTestProccesorConnection(result);
        }
        
        private System.IAsyncResult OnBeginTestProccesorConnection(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string zoneCode = ((string)(inValues[0]));
            string accessKey = ((string)(inValues[1]));
            return this.BeginTestProccesorConnection(zoneCode, accessKey, callback, asyncState);
        }
        
        private object[] OnEndTestProccesorConnection(System.IAsyncResult result) {
            string retVal = this.EndTestProccesorConnection(result);
            return new object[] {
                    retVal};
        }
        
        private void OnTestProccesorConnectionCompleted(object state) {
            if ((this.TestProccesorConnectionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.TestProccesorConnectionCompleted(this, new TestProccesorConnectionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void TestProccesorConnectionAsync(string zoneCode, string accessKey) {
            this.TestProccesorConnectionAsync(zoneCode, accessKey, null);
        }
        
        public void TestProccesorConnectionAsync(string zoneCode, string accessKey, object userState) {
            if ((this.onBeginTestProccesorConnectionDelegate == null)) {
                this.onBeginTestProccesorConnectionDelegate = new BeginOperationDelegate(this.OnBeginTestProccesorConnection);
            }
            if ((this.onEndTestProccesorConnectionDelegate == null)) {
                this.onEndTestProccesorConnectionDelegate = new EndOperationDelegate(this.OnEndTestProccesorConnection);
            }
            if ((this.onTestProccesorConnectionCompletedDelegate == null)) {
                this.onTestProccesorConnectionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnTestProccesorConnectionCompleted);
            }
            base.InvokeAsync(this.onBeginTestProccesorConnectionDelegate, new object[] {
                        zoneCode,
                        accessKey}, this.onEndTestProccesorConnectionDelegate, this.onTestProccesorConnectionCompletedDelegate, userState);
        }
        
        public string CreateProcessServer(int AssetID, string zoneCode, string accessKey) {
            return base.Channel.CreateProcessServer(AssetID, zoneCode, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCreateProcessServer(int AssetID, string zoneCode, string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCreateProcessServer(AssetID, zoneCode, accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndCreateProcessServer(System.IAsyncResult result) {
            return base.Channel.EndCreateProcessServer(result);
        }
        
        private System.IAsyncResult OnBeginCreateProcessServer(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int AssetID = ((int)(inValues[0]));
            string zoneCode = ((string)(inValues[1]));
            string accessKey = ((string)(inValues[2]));
            return this.BeginCreateProcessServer(AssetID, zoneCode, accessKey, callback, asyncState);
        }
        
        private object[] OnEndCreateProcessServer(System.IAsyncResult result) {
            string retVal = this.EndCreateProcessServer(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCreateProcessServerCompleted(object state) {
            if ((this.CreateProcessServerCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CreateProcessServerCompleted(this, new CreateProcessServerCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CreateProcessServerAsync(int AssetID, string zoneCode, string accessKey) {
            this.CreateProcessServerAsync(AssetID, zoneCode, accessKey, null);
        }
        
        public void CreateProcessServerAsync(int AssetID, string zoneCode, string accessKey, object userState) {
            if ((this.onBeginCreateProcessServerDelegate == null)) {
                this.onBeginCreateProcessServerDelegate = new BeginOperationDelegate(this.OnBeginCreateProcessServer);
            }
            if ((this.onEndCreateProcessServerDelegate == null)) {
                this.onEndCreateProcessServerDelegate = new EndOperationDelegate(this.OnEndCreateProcessServer);
            }
            if ((this.onCreateProcessServerCompletedDelegate == null)) {
                this.onCreateProcessServerCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCreateProcessServerCompleted);
            }
            base.InvokeAsync(this.onBeginCreateProcessServerDelegate, new object[] {
                        AssetID,
                        zoneCode,
                        accessKey}, this.onEndCreateProcessServerDelegate, this.onCreateProcessServerCompletedDelegate, userState);
        }
        
        public string DeleteProcessServer(int AssetID, string zoneCode, string accessKey) {
            return base.Channel.DeleteProcessServer(AssetID, zoneCode, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteProcessServer(int AssetID, string zoneCode, string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteProcessServer(AssetID, zoneCode, accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndDeleteProcessServer(System.IAsyncResult result) {
            return base.Channel.EndDeleteProcessServer(result);
        }
        
        private System.IAsyncResult OnBeginDeleteProcessServer(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int AssetID = ((int)(inValues[0]));
            string zoneCode = ((string)(inValues[1]));
            string accessKey = ((string)(inValues[2]));
            return this.BeginDeleteProcessServer(AssetID, zoneCode, accessKey, callback, asyncState);
        }
        
        private object[] OnEndDeleteProcessServer(System.IAsyncResult result) {
            string retVal = this.EndDeleteProcessServer(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeleteProcessServerCompleted(object state) {
            if ((this.DeleteProcessServerCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteProcessServerCompleted(this, new DeleteProcessServerCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteProcessServerAsync(int AssetID, string zoneCode, string accessKey) {
            this.DeleteProcessServerAsync(AssetID, zoneCode, accessKey, null);
        }
        
        public void DeleteProcessServerAsync(int AssetID, string zoneCode, string accessKey, object userState) {
            if ((this.onBeginDeleteProcessServerDelegate == null)) {
                this.onBeginDeleteProcessServerDelegate = new BeginOperationDelegate(this.OnBeginDeleteProcessServer);
            }
            if ((this.onEndDeleteProcessServerDelegate == null)) {
                this.onEndDeleteProcessServerDelegate = new EndOperationDelegate(this.OnEndDeleteProcessServer);
            }
            if ((this.onDeleteProcessServerCompletedDelegate == null)) {
                this.onDeleteProcessServerCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteProcessServerCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteProcessServerDelegate, new object[] {
                        AssetID,
                        zoneCode,
                        accessKey}, this.onEndDeleteProcessServerDelegate, this.onDeleteProcessServerCompletedDelegate, userState);
        }
        
        public string CardVerifyPayment(int AD_User_ID, string accessKey) {
            return base.Channel.CardVerifyPayment(AD_User_ID, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCardVerifyPayment(int AD_User_ID, string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCardVerifyPayment(AD_User_ID, accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndCardVerifyPayment(System.IAsyncResult result) {
            return base.Channel.EndCardVerifyPayment(result);
        }
        
        private System.IAsyncResult OnBeginCardVerifyPayment(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int AD_User_ID = ((int)(inValues[0]));
            string accessKey = ((string)(inValues[1]));
            return this.BeginCardVerifyPayment(AD_User_ID, accessKey, callback, asyncState);
        }
        
        private object[] OnEndCardVerifyPayment(System.IAsyncResult result) {
            string retVal = this.EndCardVerifyPayment(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCardVerifyPaymentCompleted(object state) {
            if ((this.CardVerifyPaymentCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CardVerifyPaymentCompleted(this, new CardVerifyPaymentCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CardVerifyPaymentAsync(int AD_User_ID, string accessKey) {
            this.CardVerifyPaymentAsync(AD_User_ID, accessKey, null);
        }
        
        public void CardVerifyPaymentAsync(int AD_User_ID, string accessKey, object userState) {
            if ((this.onBeginCardVerifyPaymentDelegate == null)) {
                this.onBeginCardVerifyPaymentDelegate = new BeginOperationDelegate(this.OnBeginCardVerifyPayment);
            }
            if ((this.onEndCardVerifyPaymentDelegate == null)) {
                this.onEndCardVerifyPaymentDelegate = new EndOperationDelegate(this.OnEndCardVerifyPayment);
            }
            if ((this.onCardVerifyPaymentCompletedDelegate == null)) {
                this.onCardVerifyPaymentCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCardVerifyPaymentCompleted);
            }
            base.InvokeAsync(this.onBeginCardVerifyPaymentDelegate, new object[] {
                        AD_User_ID,
                        accessKey}, this.onEndCardVerifyPaymentDelegate, this.onCardVerifyPaymentCompletedDelegate, userState);
        }
        
        public string IsCustomerAddMoreCompany(int AD_User_ID, string accessKey) {
            return base.Channel.IsCustomerAddMoreCompany(AD_User_ID, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginIsCustomerAddMoreCompany(int AD_User_ID, string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginIsCustomerAddMoreCompany(AD_User_ID, accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndIsCustomerAddMoreCompany(System.IAsyncResult result) {
            return base.Channel.EndIsCustomerAddMoreCompany(result);
        }
        
        private System.IAsyncResult OnBeginIsCustomerAddMoreCompany(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int AD_User_ID = ((int)(inValues[0]));
            string accessKey = ((string)(inValues[1]));
            return this.BeginIsCustomerAddMoreCompany(AD_User_ID, accessKey, callback, asyncState);
        }
        
        private object[] OnEndIsCustomerAddMoreCompany(System.IAsyncResult result) {
            string retVal = this.EndIsCustomerAddMoreCompany(result);
            return new object[] {
                    retVal};
        }
        
        private void OnIsCustomerAddMoreCompanyCompleted(object state) {
            if ((this.IsCustomerAddMoreCompanyCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.IsCustomerAddMoreCompanyCompleted(this, new IsCustomerAddMoreCompanyCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void IsCustomerAddMoreCompanyAsync(int AD_User_ID, string accessKey) {
            this.IsCustomerAddMoreCompanyAsync(AD_User_ID, accessKey, null);
        }
        
        public void IsCustomerAddMoreCompanyAsync(int AD_User_ID, string accessKey, object userState) {
            if ((this.onBeginIsCustomerAddMoreCompanyDelegate == null)) {
                this.onBeginIsCustomerAddMoreCompanyDelegate = new BeginOperationDelegate(this.OnBeginIsCustomerAddMoreCompany);
            }
            if ((this.onEndIsCustomerAddMoreCompanyDelegate == null)) {
                this.onEndIsCustomerAddMoreCompanyDelegate = new EndOperationDelegate(this.OnEndIsCustomerAddMoreCompany);
            }
            if ((this.onIsCustomerAddMoreCompanyCompletedDelegate == null)) {
                this.onIsCustomerAddMoreCompanyCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnIsCustomerAddMoreCompanyCompleted);
            }
            base.InvokeAsync(this.onBeginIsCustomerAddMoreCompanyDelegate, new object[] {
                        AD_User_ID,
                        accessKey}, this.onEndIsCustomerAddMoreCompanyDelegate, this.onIsCustomerAddMoreCompanyCompletedDelegate, userState);
        }
        
        public string GetCustomerDomainName(int AD_User_ID, string accessKey) {
            return base.Channel.GetCustomerDomainName(AD_User_ID, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCustomerDomainName(int AD_User_ID, string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCustomerDomainName(AD_User_ID, accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGetCustomerDomainName(System.IAsyncResult result) {
            return base.Channel.EndGetCustomerDomainName(result);
        }
        
        private System.IAsyncResult OnBeginGetCustomerDomainName(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int AD_User_ID = ((int)(inValues[0]));
            string accessKey = ((string)(inValues[1]));
            return this.BeginGetCustomerDomainName(AD_User_ID, accessKey, callback, asyncState);
        }
        
        private object[] OnEndGetCustomerDomainName(System.IAsyncResult result) {
            string retVal = this.EndGetCustomerDomainName(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCustomerDomainNameCompleted(object state) {
            if ((this.GetCustomerDomainNameCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCustomerDomainNameCompleted(this, new GetCustomerDomainNameCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCustomerDomainNameAsync(int AD_User_ID, string accessKey) {
            this.GetCustomerDomainNameAsync(AD_User_ID, accessKey, null);
        }
        
        public void GetCustomerDomainNameAsync(int AD_User_ID, string accessKey, object userState) {
            if ((this.onBeginGetCustomerDomainNameDelegate == null)) {
                this.onBeginGetCustomerDomainNameDelegate = new BeginOperationDelegate(this.OnBeginGetCustomerDomainName);
            }
            if ((this.onEndGetCustomerDomainNameDelegate == null)) {
                this.onEndGetCustomerDomainNameDelegate = new EndOperationDelegate(this.OnEndGetCustomerDomainName);
            }
            if ((this.onGetCustomerDomainNameCompletedDelegate == null)) {
                this.onGetCustomerDomainNameCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCustomerDomainNameCompleted);
            }
            base.InvokeAsync(this.onBeginGetCustomerDomainNameDelegate, new object[] {
                        AD_User_ID,
                        accessKey}, this.onEndGetCustomerDomainNameDelegate, this.onGetCustomerDomainNameCompletedDelegate, userState);
        }
        
        public string StartAndStopProcessor(int A_Asset_ID, bool startServer, string accessKey) {
            return base.Channel.StartAndStopProcessor(A_Asset_ID, startServer, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginStartAndStopProcessor(int A_Asset_ID, bool startServer, string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginStartAndStopProcessor(A_Asset_ID, startServer, accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndStartAndStopProcessor(System.IAsyncResult result) {
            return base.Channel.EndStartAndStopProcessor(result);
        }
        
        private System.IAsyncResult OnBeginStartAndStopProcessor(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int A_Asset_ID = ((int)(inValues[0]));
            bool startServer = ((bool)(inValues[1]));
            string accessKey = ((string)(inValues[2]));
            return this.BeginStartAndStopProcessor(A_Asset_ID, startServer, accessKey, callback, asyncState);
        }
        
        private object[] OnEndStartAndStopProcessor(System.IAsyncResult result) {
            string retVal = this.EndStartAndStopProcessor(result);
            return new object[] {
                    retVal};
        }
        
        private void OnStartAndStopProcessorCompleted(object state) {
            if ((this.StartAndStopProcessorCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.StartAndStopProcessorCompleted(this, new StartAndStopProcessorCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void StartAndStopProcessorAsync(int A_Asset_ID, bool startServer, string accessKey) {
            this.StartAndStopProcessorAsync(A_Asset_ID, startServer, accessKey, null);
        }
        
        public void StartAndStopProcessorAsync(int A_Asset_ID, bool startServer, string accessKey, object userState) {
            if ((this.onBeginStartAndStopProcessorDelegate == null)) {
                this.onBeginStartAndStopProcessorDelegate = new BeginOperationDelegate(this.OnBeginStartAndStopProcessor);
            }
            if ((this.onEndStartAndStopProcessorDelegate == null)) {
                this.onEndStartAndStopProcessorDelegate = new EndOperationDelegate(this.OnEndStartAndStopProcessor);
            }
            if ((this.onStartAndStopProcessorCompletedDelegate == null)) {
                this.onStartAndStopProcessorCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnStartAndStopProcessorCompleted);
            }
            base.InvokeAsync(this.onBeginStartAndStopProcessorDelegate, new object[] {
                        A_Asset_ID,
                        startServer,
                        accessKey}, this.onEndStartAndStopProcessorDelegate, this.onStartAndStopProcessorCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BaseLibrary.CloudService.DownloadDumpResponse BaseLibrary.CloudService.ServiceSoap.DownloadDump(BaseLibrary.CloudService.DownloadDumpRequest request) {
            return base.Channel.DownloadDump(request);
        }
        
        public byte[] DownloadDump(int Ad_user_ID, string fileName, string accessKey) {
            BaseLibrary.CloudService.DownloadDumpRequest inValue = new BaseLibrary.CloudService.DownloadDumpRequest();
            inValue.Ad_user_ID = Ad_user_ID;
            inValue.fileName = fileName;
            inValue.accessKey = accessKey;
            BaseLibrary.CloudService.DownloadDumpResponse retVal = ((BaseLibrary.CloudService.ServiceSoap)(this)).DownloadDump(inValue);
            return retVal.DownloadDumpResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult BaseLibrary.CloudService.ServiceSoap.BeginDownloadDump(BaseLibrary.CloudService.DownloadDumpRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDownloadDump(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDownloadDump(int Ad_user_ID, string fileName, string accessKey, System.AsyncCallback callback, object asyncState) {
            BaseLibrary.CloudService.DownloadDumpRequest inValue = new BaseLibrary.CloudService.DownloadDumpRequest();
            inValue.Ad_user_ID = Ad_user_ID;
            inValue.fileName = fileName;
            inValue.accessKey = accessKey;
            return ((BaseLibrary.CloudService.ServiceSoap)(this)).BeginDownloadDump(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BaseLibrary.CloudService.DownloadDumpResponse BaseLibrary.CloudService.ServiceSoap.EndDownloadDump(System.IAsyncResult result) {
            return base.Channel.EndDownloadDump(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public byte[] EndDownloadDump(System.IAsyncResult result) {
            BaseLibrary.CloudService.DownloadDumpResponse retVal = ((BaseLibrary.CloudService.ServiceSoap)(this)).EndDownloadDump(result);
            return retVal.DownloadDumpResult;
        }
        
        private System.IAsyncResult OnBeginDownloadDump(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int Ad_user_ID = ((int)(inValues[0]));
            string fileName = ((string)(inValues[1]));
            string accessKey = ((string)(inValues[2]));
            return this.BeginDownloadDump(Ad_user_ID, fileName, accessKey, callback, asyncState);
        }
        
        private object[] OnEndDownloadDump(System.IAsyncResult result) {
            byte[] retVal = this.EndDownloadDump(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDownloadDumpCompleted(object state) {
            if ((this.DownloadDumpCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DownloadDumpCompleted(this, new DownloadDumpCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DownloadDumpAsync(int Ad_user_ID, string fileName, string accessKey) {
            this.DownloadDumpAsync(Ad_user_ID, fileName, accessKey, null);
        }
        
        public void DownloadDumpAsync(int Ad_user_ID, string fileName, string accessKey, object userState) {
            if ((this.onBeginDownloadDumpDelegate == null)) {
                this.onBeginDownloadDumpDelegate = new BeginOperationDelegate(this.OnBeginDownloadDump);
            }
            if ((this.onEndDownloadDumpDelegate == null)) {
                this.onEndDownloadDumpDelegate = new EndOperationDelegate(this.OnEndDownloadDump);
            }
            if ((this.onDownloadDumpCompletedDelegate == null)) {
                this.onDownloadDumpCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDownloadDumpCompleted);
            }
            base.InvokeAsync(this.onBeginDownloadDumpDelegate, new object[] {
                        Ad_user_ID,
                        fileName,
                        accessKey}, this.onEndDownloadDumpDelegate, this.onDownloadDumpCompletedDelegate, userState);
        }
        
        public string ChangeLoginUserPassword(int AD_User_ID, string oldPassword, string newPassword, string accessKey) {
            return base.Channel.ChangeLoginUserPassword(AD_User_ID, oldPassword, newPassword, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginChangeLoginUserPassword(int AD_User_ID, string oldPassword, string newPassword, string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginChangeLoginUserPassword(AD_User_ID, oldPassword, newPassword, accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndChangeLoginUserPassword(System.IAsyncResult result) {
            return base.Channel.EndChangeLoginUserPassword(result);
        }
        
        private System.IAsyncResult OnBeginChangeLoginUserPassword(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int AD_User_ID = ((int)(inValues[0]));
            string oldPassword = ((string)(inValues[1]));
            string newPassword = ((string)(inValues[2]));
            string accessKey = ((string)(inValues[3]));
            return this.BeginChangeLoginUserPassword(AD_User_ID, oldPassword, newPassword, accessKey, callback, asyncState);
        }
        
        private object[] OnEndChangeLoginUserPassword(System.IAsyncResult result) {
            string retVal = this.EndChangeLoginUserPassword(result);
            return new object[] {
                    retVal};
        }
        
        private void OnChangeLoginUserPasswordCompleted(object state) {
            if ((this.ChangeLoginUserPasswordCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ChangeLoginUserPasswordCompleted(this, new ChangeLoginUserPasswordCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ChangeLoginUserPasswordAsync(int AD_User_ID, string oldPassword, string newPassword, string accessKey) {
            this.ChangeLoginUserPasswordAsync(AD_User_ID, oldPassword, newPassword, accessKey, null);
        }
        
        public void ChangeLoginUserPasswordAsync(int AD_User_ID, string oldPassword, string newPassword, string accessKey, object userState) {
            if ((this.onBeginChangeLoginUserPasswordDelegate == null)) {
                this.onBeginChangeLoginUserPasswordDelegate = new BeginOperationDelegate(this.OnBeginChangeLoginUserPassword);
            }
            if ((this.onEndChangeLoginUserPasswordDelegate == null)) {
                this.onEndChangeLoginUserPasswordDelegate = new EndOperationDelegate(this.OnEndChangeLoginUserPassword);
            }
            if ((this.onChangeLoginUserPasswordCompletedDelegate == null)) {
                this.onChangeLoginUserPasswordCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnChangeLoginUserPasswordCompleted);
            }
            base.InvokeAsync(this.onBeginChangeLoginUserPasswordDelegate, new object[] {
                        AD_User_ID,
                        oldPassword,
                        newPassword,
                        accessKey}, this.onEndChangeLoginUserPasswordDelegate, this.onChangeLoginUserPasswordCompletedDelegate, userState);
        }
        
        public string SetApplicationStatusM1(int AD_User_ID, char value, string accessKey) {
            return base.Channel.SetApplicationStatusM1(AD_User_ID, value, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSetApplicationStatusM1(int AD_User_ID, char value, string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetApplicationStatusM1(AD_User_ID, value, accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndSetApplicationStatusM1(System.IAsyncResult result) {
            return base.Channel.EndSetApplicationStatusM1(result);
        }
        
        private System.IAsyncResult OnBeginSetApplicationStatusM1(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int AD_User_ID = ((int)(inValues[0]));
            char value = ((char)(inValues[1]));
            string accessKey = ((string)(inValues[2]));
            return this.BeginSetApplicationStatusM1(AD_User_ID, value, accessKey, callback, asyncState);
        }
        
        private object[] OnEndSetApplicationStatusM1(System.IAsyncResult result) {
            string retVal = this.EndSetApplicationStatusM1(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSetApplicationStatusM1Completed(object state) {
            if ((this.SetApplicationStatusM1Completed != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetApplicationStatusM1Completed(this, new SetApplicationStatusM1CompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetApplicationStatusM1Async(int AD_User_ID, char value, string accessKey) {
            this.SetApplicationStatusM1Async(AD_User_ID, value, accessKey, null);
        }
        
        public void SetApplicationStatusM1Async(int AD_User_ID, char value, string accessKey, object userState) {
            if ((this.onBeginSetApplicationStatusM1Delegate == null)) {
                this.onBeginSetApplicationStatusM1Delegate = new BeginOperationDelegate(this.OnBeginSetApplicationStatusM1);
            }
            if ((this.onEndSetApplicationStatusM1Delegate == null)) {
                this.onEndSetApplicationStatusM1Delegate = new EndOperationDelegate(this.OnEndSetApplicationStatusM1);
            }
            if ((this.onSetApplicationStatusM1CompletedDelegate == null)) {
                this.onSetApplicationStatusM1CompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetApplicationStatusM1Completed);
            }
            base.InvokeAsync(this.onBeginSetApplicationStatusM1Delegate, new object[] {
                        AD_User_ID,
                        value,
                        accessKey}, this.onEndSetApplicationStatusM1Delegate, this.onSetApplicationStatusM1CompletedDelegate, userState);
        }
        
        public string SetApplicationStatusM2(int AD_User_ID, char value, int createdBy, string accessKey) {
            return base.Channel.SetApplicationStatusM2(AD_User_ID, value, createdBy, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSetApplicationStatusM2(int AD_User_ID, char value, int createdBy, string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetApplicationStatusM2(AD_User_ID, value, createdBy, accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndSetApplicationStatusM2(System.IAsyncResult result) {
            return base.Channel.EndSetApplicationStatusM2(result);
        }
        
        private System.IAsyncResult OnBeginSetApplicationStatusM2(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int AD_User_ID = ((int)(inValues[0]));
            char value = ((char)(inValues[1]));
            int createdBy = ((int)(inValues[2]));
            string accessKey = ((string)(inValues[3]));
            return this.BeginSetApplicationStatusM2(AD_User_ID, value, createdBy, accessKey, callback, asyncState);
        }
        
        private object[] OnEndSetApplicationStatusM2(System.IAsyncResult result) {
            string retVal = this.EndSetApplicationStatusM2(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSetApplicationStatusM2Completed(object state) {
            if ((this.SetApplicationStatusM2Completed != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetApplicationStatusM2Completed(this, new SetApplicationStatusM2CompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetApplicationStatusM2Async(int AD_User_ID, char value, int createdBy, string accessKey) {
            this.SetApplicationStatusM2Async(AD_User_ID, value, createdBy, accessKey, null);
        }
        
        public void SetApplicationStatusM2Async(int AD_User_ID, char value, int createdBy, string accessKey, object userState) {
            if ((this.onBeginSetApplicationStatusM2Delegate == null)) {
                this.onBeginSetApplicationStatusM2Delegate = new BeginOperationDelegate(this.OnBeginSetApplicationStatusM2);
            }
            if ((this.onEndSetApplicationStatusM2Delegate == null)) {
                this.onEndSetApplicationStatusM2Delegate = new EndOperationDelegate(this.OnEndSetApplicationStatusM2);
            }
            if ((this.onSetApplicationStatusM2CompletedDelegate == null)) {
                this.onSetApplicationStatusM2CompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetApplicationStatusM2Completed);
            }
            base.InvokeAsync(this.onBeginSetApplicationStatusM2Delegate, new object[] {
                        AD_User_ID,
                        value,
                        createdBy,
                        accessKey}, this.onEndSetApplicationStatusM2Delegate, this.onSetApplicationStatusM2CompletedDelegate, userState);
        }
        
        public BaseLibrary.CloudService.BackupInfo GetAllAppDeleteRequest(string zoneCode, string accessKey) {
            return base.Channel.GetAllAppDeleteRequest(zoneCode, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllAppDeleteRequest(string zoneCode, string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllAppDeleteRequest(zoneCode, accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public BaseLibrary.CloudService.BackupInfo EndGetAllAppDeleteRequest(System.IAsyncResult result) {
            return base.Channel.EndGetAllAppDeleteRequest(result);
        }
        
        private System.IAsyncResult OnBeginGetAllAppDeleteRequest(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string zoneCode = ((string)(inValues[0]));
            string accessKey = ((string)(inValues[1]));
            return this.BeginGetAllAppDeleteRequest(zoneCode, accessKey, callback, asyncState);
        }
        
        private object[] OnEndGetAllAppDeleteRequest(System.IAsyncResult result) {
            BaseLibrary.CloudService.BackupInfo retVal = this.EndGetAllAppDeleteRequest(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllAppDeleteRequestCompleted(object state) {
            if ((this.GetAllAppDeleteRequestCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllAppDeleteRequestCompleted(this, new GetAllAppDeleteRequestCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllAppDeleteRequestAsync(string zoneCode, string accessKey) {
            this.GetAllAppDeleteRequestAsync(zoneCode, accessKey, null);
        }
        
        public void GetAllAppDeleteRequestAsync(string zoneCode, string accessKey, object userState) {
            if ((this.onBeginGetAllAppDeleteRequestDelegate == null)) {
                this.onBeginGetAllAppDeleteRequestDelegate = new BeginOperationDelegate(this.OnBeginGetAllAppDeleteRequest);
            }
            if ((this.onEndGetAllAppDeleteRequestDelegate == null)) {
                this.onEndGetAllAppDeleteRequestDelegate = new EndOperationDelegate(this.OnEndGetAllAppDeleteRequest);
            }
            if ((this.onGetAllAppDeleteRequestCompletedDelegate == null)) {
                this.onGetAllAppDeleteRequestCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllAppDeleteRequestCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllAppDeleteRequestDelegate, new object[] {
                        zoneCode,
                        accessKey}, this.onEndGetAllAppDeleteRequestDelegate, this.onGetAllAppDeleteRequestCompletedDelegate, userState);
        }
        
        public string AssignServerIPToCustomerTenant(int CS_CustomerTenentInfo_ID, string value, int CS_ZoneMasterServer_ID, int M_Product_ID, int A_Asset_ID, int AD_User_ID, string accessKey) {
            return base.Channel.AssignServerIPToCustomerTenant(CS_CustomerTenentInfo_ID, value, CS_ZoneMasterServer_ID, M_Product_ID, A_Asset_ID, AD_User_ID, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAssignServerIPToCustomerTenant(int CS_CustomerTenentInfo_ID, string value, int CS_ZoneMasterServer_ID, int M_Product_ID, int A_Asset_ID, int AD_User_ID, string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAssignServerIPToCustomerTenant(CS_CustomerTenentInfo_ID, value, CS_ZoneMasterServer_ID, M_Product_ID, A_Asset_ID, AD_User_ID, accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndAssignServerIPToCustomerTenant(System.IAsyncResult result) {
            return base.Channel.EndAssignServerIPToCustomerTenant(result);
        }
        
        private System.IAsyncResult OnBeginAssignServerIPToCustomerTenant(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int CS_CustomerTenentInfo_ID = ((int)(inValues[0]));
            string value = ((string)(inValues[1]));
            int CS_ZoneMasterServer_ID = ((int)(inValues[2]));
            int M_Product_ID = ((int)(inValues[3]));
            int A_Asset_ID = ((int)(inValues[4]));
            int AD_User_ID = ((int)(inValues[5]));
            string accessKey = ((string)(inValues[6]));
            return this.BeginAssignServerIPToCustomerTenant(CS_CustomerTenentInfo_ID, value, CS_ZoneMasterServer_ID, M_Product_ID, A_Asset_ID, AD_User_ID, accessKey, callback, asyncState);
        }
        
        private object[] OnEndAssignServerIPToCustomerTenant(System.IAsyncResult result) {
            string retVal = this.EndAssignServerIPToCustomerTenant(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAssignServerIPToCustomerTenantCompleted(object state) {
            if ((this.AssignServerIPToCustomerTenantCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AssignServerIPToCustomerTenantCompleted(this, new AssignServerIPToCustomerTenantCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AssignServerIPToCustomerTenantAsync(int CS_CustomerTenentInfo_ID, string value, int CS_ZoneMasterServer_ID, int M_Product_ID, int A_Asset_ID, int AD_User_ID, string accessKey) {
            this.AssignServerIPToCustomerTenantAsync(CS_CustomerTenentInfo_ID, value, CS_ZoneMasterServer_ID, M_Product_ID, A_Asset_ID, AD_User_ID, accessKey, null);
        }
        
        public void AssignServerIPToCustomerTenantAsync(int CS_CustomerTenentInfo_ID, string value, int CS_ZoneMasterServer_ID, int M_Product_ID, int A_Asset_ID, int AD_User_ID, string accessKey, object userState) {
            if ((this.onBeginAssignServerIPToCustomerTenantDelegate == null)) {
                this.onBeginAssignServerIPToCustomerTenantDelegate = new BeginOperationDelegate(this.OnBeginAssignServerIPToCustomerTenant);
            }
            if ((this.onEndAssignServerIPToCustomerTenantDelegate == null)) {
                this.onEndAssignServerIPToCustomerTenantDelegate = new EndOperationDelegate(this.OnEndAssignServerIPToCustomerTenant);
            }
            if ((this.onAssignServerIPToCustomerTenantCompletedDelegate == null)) {
                this.onAssignServerIPToCustomerTenantCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAssignServerIPToCustomerTenantCompleted);
            }
            base.InvokeAsync(this.onBeginAssignServerIPToCustomerTenantDelegate, new object[] {
                        CS_CustomerTenentInfo_ID,
                        value,
                        CS_ZoneMasterServer_ID,
                        M_Product_ID,
                        A_Asset_ID,
                        AD_User_ID,
                        accessKey}, this.onEndAssignServerIPToCustomerTenantDelegate, this.onAssignServerIPToCustomerTenantCompletedDelegate, userState);
        }
        
        public BaseLibrary.CloudService.GetUnassignedIp GetIpAssignRequest(string zoneCode, string accessKey) {
            return base.Channel.GetIpAssignRequest(zoneCode, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetIpAssignRequest(string zoneCode, string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetIpAssignRequest(zoneCode, accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public BaseLibrary.CloudService.GetUnassignedIp EndGetIpAssignRequest(System.IAsyncResult result) {
            return base.Channel.EndGetIpAssignRequest(result);
        }
        
        private System.IAsyncResult OnBeginGetIpAssignRequest(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string zoneCode = ((string)(inValues[0]));
            string accessKey = ((string)(inValues[1]));
            return this.BeginGetIpAssignRequest(zoneCode, accessKey, callback, asyncState);
        }
        
        private object[] OnEndGetIpAssignRequest(System.IAsyncResult result) {
            BaseLibrary.CloudService.GetUnassignedIp retVal = this.EndGetIpAssignRequest(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetIpAssignRequestCompleted(object state) {
            if ((this.GetIpAssignRequestCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetIpAssignRequestCompleted(this, new GetIpAssignRequestCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetIpAssignRequestAsync(string zoneCode, string accessKey) {
            this.GetIpAssignRequestAsync(zoneCode, accessKey, null);
        }
        
        public void GetIpAssignRequestAsync(string zoneCode, string accessKey, object userState) {
            if ((this.onBeginGetIpAssignRequestDelegate == null)) {
                this.onBeginGetIpAssignRequestDelegate = new BeginOperationDelegate(this.OnBeginGetIpAssignRequest);
            }
            if ((this.onEndGetIpAssignRequestDelegate == null)) {
                this.onEndGetIpAssignRequestDelegate = new EndOperationDelegate(this.OnEndGetIpAssignRequest);
            }
            if ((this.onGetIpAssignRequestCompletedDelegate == null)) {
                this.onGetIpAssignRequestCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetIpAssignRequestCompleted);
            }
            base.InvokeAsync(this.onBeginGetIpAssignRequestDelegate, new object[] {
                        zoneCode,
                        accessKey}, this.onEndGetIpAssignRequestDelegate, this.onGetIpAssignRequestCompletedDelegate, userState);
        }
        
        public string StartAndStopZoneServers(string zoneCode, bool isStart, string accessKey) {
            return base.Channel.StartAndStopZoneServers(zoneCode, isStart, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginStartAndStopZoneServers(string zoneCode, bool isStart, string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginStartAndStopZoneServers(zoneCode, isStart, accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndStartAndStopZoneServers(System.IAsyncResult result) {
            return base.Channel.EndStartAndStopZoneServers(result);
        }
        
        private System.IAsyncResult OnBeginStartAndStopZoneServers(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string zoneCode = ((string)(inValues[0]));
            bool isStart = ((bool)(inValues[1]));
            string accessKey = ((string)(inValues[2]));
            return this.BeginStartAndStopZoneServers(zoneCode, isStart, accessKey, callback, asyncState);
        }
        
        private object[] OnEndStartAndStopZoneServers(System.IAsyncResult result) {
            string retVal = this.EndStartAndStopZoneServers(result);
            return new object[] {
                    retVal};
        }
        
        private void OnStartAndStopZoneServersCompleted(object state) {
            if ((this.StartAndStopZoneServersCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.StartAndStopZoneServersCompleted(this, new StartAndStopZoneServersCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void StartAndStopZoneServersAsync(string zoneCode, bool isStart, string accessKey) {
            this.StartAndStopZoneServersAsync(zoneCode, isStart, accessKey, null);
        }
        
        public void StartAndStopZoneServersAsync(string zoneCode, bool isStart, string accessKey, object userState) {
            if ((this.onBeginStartAndStopZoneServersDelegate == null)) {
                this.onBeginStartAndStopZoneServersDelegate = new BeginOperationDelegate(this.OnBeginStartAndStopZoneServers);
            }
            if ((this.onEndStartAndStopZoneServersDelegate == null)) {
                this.onEndStartAndStopZoneServersDelegate = new EndOperationDelegate(this.OnEndStartAndStopZoneServers);
            }
            if ((this.onStartAndStopZoneServersCompletedDelegate == null)) {
                this.onStartAndStopZoneServersCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnStartAndStopZoneServersCompleted);
            }
            base.InvokeAsync(this.onBeginStartAndStopZoneServersDelegate, new object[] {
                        zoneCode,
                        isStart,
                        accessKey}, this.onEndStartAndStopZoneServersDelegate, this.onStartAndStopZoneServersCompletedDelegate, userState);
        }
        
        public string SetAssetDeleted(int A_Asset_ID, string accessKey) {
            return base.Channel.SetAssetDeleted(A_Asset_ID, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSetAssetDeleted(int A_Asset_ID, string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetAssetDeleted(A_Asset_ID, accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndSetAssetDeleted(System.IAsyncResult result) {
            return base.Channel.EndSetAssetDeleted(result);
        }
        
        private System.IAsyncResult OnBeginSetAssetDeleted(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int A_Asset_ID = ((int)(inValues[0]));
            string accessKey = ((string)(inValues[1]));
            return this.BeginSetAssetDeleted(A_Asset_ID, accessKey, callback, asyncState);
        }
        
        private object[] OnEndSetAssetDeleted(System.IAsyncResult result) {
            string retVal = this.EndSetAssetDeleted(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSetAssetDeletedCompleted(object state) {
            if ((this.SetAssetDeletedCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetAssetDeletedCompleted(this, new SetAssetDeletedCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetAssetDeletedAsync(int A_Asset_ID, string accessKey) {
            this.SetAssetDeletedAsync(A_Asset_ID, accessKey, null);
        }
        
        public void SetAssetDeletedAsync(int A_Asset_ID, string accessKey, object userState) {
            if ((this.onBeginSetAssetDeletedDelegate == null)) {
                this.onBeginSetAssetDeletedDelegate = new BeginOperationDelegate(this.OnBeginSetAssetDeleted);
            }
            if ((this.onEndSetAssetDeletedDelegate == null)) {
                this.onEndSetAssetDeletedDelegate = new EndOperationDelegate(this.OnEndSetAssetDeleted);
            }
            if ((this.onSetAssetDeletedCompletedDelegate == null)) {
                this.onSetAssetDeletedCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetAssetDeletedCompleted);
            }
            base.InvokeAsync(this.onBeginSetAssetDeletedDelegate, new object[] {
                        A_Asset_ID,
                        accessKey}, this.onEndSetAssetDeletedDelegate, this.onSetAssetDeletedCompletedDelegate, userState);
        }
        
        public string GetUserUrl(int AD_User_ID, string accessKey) {
            return base.Channel.GetUserUrl(AD_User_ID, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetUserUrl(int AD_User_ID, string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetUserUrl(AD_User_ID, accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGetUserUrl(System.IAsyncResult result) {
            return base.Channel.EndGetUserUrl(result);
        }
        
        private System.IAsyncResult OnBeginGetUserUrl(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int AD_User_ID = ((int)(inValues[0]));
            string accessKey = ((string)(inValues[1]));
            return this.BeginGetUserUrl(AD_User_ID, accessKey, callback, asyncState);
        }
        
        private object[] OnEndGetUserUrl(System.IAsyncResult result) {
            string retVal = this.EndGetUserUrl(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetUserUrlCompleted(object state) {
            if ((this.GetUserUrlCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetUserUrlCompleted(this, new GetUserUrlCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetUserUrlAsync(int AD_User_ID, string accessKey) {
            this.GetUserUrlAsync(AD_User_ID, accessKey, null);
        }
        
        public void GetUserUrlAsync(int AD_User_ID, string accessKey, object userState) {
            if ((this.onBeginGetUserUrlDelegate == null)) {
                this.onBeginGetUserUrlDelegate = new BeginOperationDelegate(this.OnBeginGetUserUrl);
            }
            if ((this.onEndGetUserUrlDelegate == null)) {
                this.onEndGetUserUrlDelegate = new EndOperationDelegate(this.OnEndGetUserUrl);
            }
            if ((this.onGetUserUrlCompletedDelegate == null)) {
                this.onGetUserUrlCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetUserUrlCompleted);
            }
            base.InvokeAsync(this.onBeginGetUserUrlDelegate, new object[] {
                        AD_User_ID,
                        accessKey}, this.onEndGetUserUrlDelegate, this.onGetUserUrlCompletedDelegate, userState);
        }
        
        public string GetUserProduct(int AD_user_ID, string accessKey) {
            return base.Channel.GetUserProduct(AD_user_ID, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetUserProduct(int AD_user_ID, string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetUserProduct(AD_user_ID, accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGetUserProduct(System.IAsyncResult result) {
            return base.Channel.EndGetUserProduct(result);
        }
        
        private System.IAsyncResult OnBeginGetUserProduct(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int AD_user_ID = ((int)(inValues[0]));
            string accessKey = ((string)(inValues[1]));
            return this.BeginGetUserProduct(AD_user_ID, accessKey, callback, asyncState);
        }
        
        private object[] OnEndGetUserProduct(System.IAsyncResult result) {
            string retVal = this.EndGetUserProduct(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetUserProductCompleted(object state) {
            if ((this.GetUserProductCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetUserProductCompleted(this, new GetUserProductCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetUserProductAsync(int AD_user_ID, string accessKey) {
            this.GetUserProductAsync(AD_user_ID, accessKey, null);
        }
        
        public void GetUserProductAsync(int AD_user_ID, string accessKey, object userState) {
            if ((this.onBeginGetUserProductDelegate == null)) {
                this.onBeginGetUserProductDelegate = new BeginOperationDelegate(this.OnBeginGetUserProduct);
            }
            if ((this.onEndGetUserProductDelegate == null)) {
                this.onEndGetUserProductDelegate = new EndOperationDelegate(this.OnEndGetUserProduct);
            }
            if ((this.onGetUserProductCompletedDelegate == null)) {
                this.onGetUserProductCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetUserProductCompleted);
            }
            base.InvokeAsync(this.onBeginGetUserProductDelegate, new object[] {
                        AD_user_ID,
                        accessKey}, this.onEndGetUserProductDelegate, this.onGetUserProductCompletedDelegate, userState);
        }
        
        public string ResendEmail(string type, int Ad_User_ID, string accessKey) {
            return base.Channel.ResendEmail(type, Ad_User_ID, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginResendEmail(string type, int Ad_User_ID, string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginResendEmail(type, Ad_User_ID, accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndResendEmail(System.IAsyncResult result) {
            return base.Channel.EndResendEmail(result);
        }
        
        private System.IAsyncResult OnBeginResendEmail(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string type = ((string)(inValues[0]));
            int Ad_User_ID = ((int)(inValues[1]));
            string accessKey = ((string)(inValues[2]));
            return this.BeginResendEmail(type, Ad_User_ID, accessKey, callback, asyncState);
        }
        
        private object[] OnEndResendEmail(System.IAsyncResult result) {
            string retVal = this.EndResendEmail(result);
            return new object[] {
                    retVal};
        }
        
        private void OnResendEmailCompleted(object state) {
            if ((this.ResendEmailCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ResendEmailCompleted(this, new ResendEmailCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ResendEmailAsync(string type, int Ad_User_ID, string accessKey) {
            this.ResendEmailAsync(type, Ad_User_ID, accessKey, null);
        }
        
        public void ResendEmailAsync(string type, int Ad_User_ID, string accessKey, object userState) {
            if ((this.onBeginResendEmailDelegate == null)) {
                this.onBeginResendEmailDelegate = new BeginOperationDelegate(this.OnBeginResendEmail);
            }
            if ((this.onEndResendEmailDelegate == null)) {
                this.onEndResendEmailDelegate = new EndOperationDelegate(this.OnEndResendEmail);
            }
            if ((this.onResendEmailCompletedDelegate == null)) {
                this.onResendEmailCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnResendEmailCompleted);
            }
            base.InvokeAsync(this.onBeginResendEmailDelegate, new object[] {
                        type,
                        Ad_User_ID,
                        accessKey}, this.onEndResendEmailDelegate, this.onResendEmailCompletedDelegate, userState);
        }
        
        public string CreateAdditionalDataBase(string zoneCode, string accessKey) {
            return base.Channel.CreateAdditionalDataBase(zoneCode, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCreateAdditionalDataBase(string zoneCode, string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCreateAdditionalDataBase(zoneCode, accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndCreateAdditionalDataBase(System.IAsyncResult result) {
            return base.Channel.EndCreateAdditionalDataBase(result);
        }
        
        private System.IAsyncResult OnBeginCreateAdditionalDataBase(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string zoneCode = ((string)(inValues[0]));
            string accessKey = ((string)(inValues[1]));
            return this.BeginCreateAdditionalDataBase(zoneCode, accessKey, callback, asyncState);
        }
        
        private object[] OnEndCreateAdditionalDataBase(System.IAsyncResult result) {
            string retVal = this.EndCreateAdditionalDataBase(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCreateAdditionalDataBaseCompleted(object state) {
            if ((this.CreateAdditionalDataBaseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CreateAdditionalDataBaseCompleted(this, new CreateAdditionalDataBaseCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CreateAdditionalDataBaseAsync(string zoneCode, string accessKey) {
            this.CreateAdditionalDataBaseAsync(zoneCode, accessKey, null);
        }
        
        public void CreateAdditionalDataBaseAsync(string zoneCode, string accessKey, object userState) {
            if ((this.onBeginCreateAdditionalDataBaseDelegate == null)) {
                this.onBeginCreateAdditionalDataBaseDelegate = new BeginOperationDelegate(this.OnBeginCreateAdditionalDataBase);
            }
            if ((this.onEndCreateAdditionalDataBaseDelegate == null)) {
                this.onEndCreateAdditionalDataBaseDelegate = new EndOperationDelegate(this.OnEndCreateAdditionalDataBase);
            }
            if ((this.onCreateAdditionalDataBaseCompletedDelegate == null)) {
                this.onCreateAdditionalDataBaseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCreateAdditionalDataBaseCompleted);
            }
            base.InvokeAsync(this.onBeginCreateAdditionalDataBaseDelegate, new object[] {
                        zoneCode,
                        accessKey}, this.onEndCreateAdditionalDataBaseDelegate, this.onCreateAdditionalDataBaseCompletedDelegate, userState);
        }
        
        public BaseLibrary.CloudService.DummyDBMigrationInfo GetDummyDataBaseInfo(int zoneClientServerID, string zoneCode, int product_ID, string accessKey) {
            return base.Channel.GetDummyDataBaseInfo(zoneClientServerID, zoneCode, product_ID, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetDummyDataBaseInfo(int zoneClientServerID, string zoneCode, int product_ID, string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDummyDataBaseInfo(zoneClientServerID, zoneCode, product_ID, accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public BaseLibrary.CloudService.DummyDBMigrationInfo EndGetDummyDataBaseInfo(System.IAsyncResult result) {
            return base.Channel.EndGetDummyDataBaseInfo(result);
        }
        
        private System.IAsyncResult OnBeginGetDummyDataBaseInfo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int zoneClientServerID = ((int)(inValues[0]));
            string zoneCode = ((string)(inValues[1]));
            int product_ID = ((int)(inValues[2]));
            string accessKey = ((string)(inValues[3]));
            return this.BeginGetDummyDataBaseInfo(zoneClientServerID, zoneCode, product_ID, accessKey, callback, asyncState);
        }
        
        private object[] OnEndGetDummyDataBaseInfo(System.IAsyncResult result) {
            BaseLibrary.CloudService.DummyDBMigrationInfo retVal = this.EndGetDummyDataBaseInfo(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDummyDataBaseInfoCompleted(object state) {
            if ((this.GetDummyDataBaseInfoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDummyDataBaseInfoCompleted(this, new GetDummyDataBaseInfoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDummyDataBaseInfoAsync(int zoneClientServerID, string zoneCode, int product_ID, string accessKey) {
            this.GetDummyDataBaseInfoAsync(zoneClientServerID, zoneCode, product_ID, accessKey, null);
        }
        
        public void GetDummyDataBaseInfoAsync(int zoneClientServerID, string zoneCode, int product_ID, string accessKey, object userState) {
            if ((this.onBeginGetDummyDataBaseInfoDelegate == null)) {
                this.onBeginGetDummyDataBaseInfoDelegate = new BeginOperationDelegate(this.OnBeginGetDummyDataBaseInfo);
            }
            if ((this.onEndGetDummyDataBaseInfoDelegate == null)) {
                this.onEndGetDummyDataBaseInfoDelegate = new EndOperationDelegate(this.OnEndGetDummyDataBaseInfo);
            }
            if ((this.onGetDummyDataBaseInfoCompletedDelegate == null)) {
                this.onGetDummyDataBaseInfoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDummyDataBaseInfoCompleted);
            }
            base.InvokeAsync(this.onBeginGetDummyDataBaseInfoDelegate, new object[] {
                        zoneClientServerID,
                        zoneCode,
                        product_ID,
                        accessKey}, this.onEndGetDummyDataBaseInfoDelegate, this.onGetDummyDataBaseInfoCompletedDelegate, userState);
        }
        
        public string UpdateDataBaseEntry(int CS_DataBase_ID, bool isDatabaseImported, bool istenantCreated, bool isMigrationDone, string accessKey) {
            return base.Channel.UpdateDataBaseEntry(CS_DataBase_ID, isDatabaseImported, istenantCreated, isMigrationDone, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateDataBaseEntry(int CS_DataBase_ID, bool isDatabaseImported, bool istenantCreated, bool isMigrationDone, string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateDataBaseEntry(CS_DataBase_ID, isDatabaseImported, istenantCreated, isMigrationDone, accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndUpdateDataBaseEntry(System.IAsyncResult result) {
            return base.Channel.EndUpdateDataBaseEntry(result);
        }
        
        private System.IAsyncResult OnBeginUpdateDataBaseEntry(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int CS_DataBase_ID = ((int)(inValues[0]));
            bool isDatabaseImported = ((bool)(inValues[1]));
            bool istenantCreated = ((bool)(inValues[2]));
            bool isMigrationDone = ((bool)(inValues[3]));
            string accessKey = ((string)(inValues[4]));
            return this.BeginUpdateDataBaseEntry(CS_DataBase_ID, isDatabaseImported, istenantCreated, isMigrationDone, accessKey, callback, asyncState);
        }
        
        private object[] OnEndUpdateDataBaseEntry(System.IAsyncResult result) {
            string retVal = this.EndUpdateDataBaseEntry(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdateDataBaseEntryCompleted(object state) {
            if ((this.UpdateDataBaseEntryCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateDataBaseEntryCompleted(this, new UpdateDataBaseEntryCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateDataBaseEntryAsync(int CS_DataBase_ID, bool isDatabaseImported, bool istenantCreated, bool isMigrationDone, string accessKey) {
            this.UpdateDataBaseEntryAsync(CS_DataBase_ID, isDatabaseImported, istenantCreated, isMigrationDone, accessKey, null);
        }
        
        public void UpdateDataBaseEntryAsync(int CS_DataBase_ID, bool isDatabaseImported, bool istenantCreated, bool isMigrationDone, string accessKey, object userState) {
            if ((this.onBeginUpdateDataBaseEntryDelegate == null)) {
                this.onBeginUpdateDataBaseEntryDelegate = new BeginOperationDelegate(this.OnBeginUpdateDataBaseEntry);
            }
            if ((this.onEndUpdateDataBaseEntryDelegate == null)) {
                this.onEndUpdateDataBaseEntryDelegate = new EndOperationDelegate(this.OnEndUpdateDataBaseEntry);
            }
            if ((this.onUpdateDataBaseEntryCompletedDelegate == null)) {
                this.onUpdateDataBaseEntryCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateDataBaseEntryCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateDataBaseEntryDelegate, new object[] {
                        CS_DataBase_ID,
                        isDatabaseImported,
                        istenantCreated,
                        isMigrationDone,
                        accessKey}, this.onEndUpdateDataBaseEntryDelegate, this.onUpdateDataBaseEntryCompletedDelegate, userState);
        }
        
        public BaseLibrary.CloudService.DBMigrationInfo GetAdminIDForMigraration(int CS_DataBase_ID, string accessKey) {
            return base.Channel.GetAdminIDForMigraration(CS_DataBase_ID, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAdminIDForMigraration(int CS_DataBase_ID, string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAdminIDForMigraration(CS_DataBase_ID, accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public BaseLibrary.CloudService.DBMigrationInfo EndGetAdminIDForMigraration(System.IAsyncResult result) {
            return base.Channel.EndGetAdminIDForMigraration(result);
        }
        
        private System.IAsyncResult OnBeginGetAdminIDForMigraration(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int CS_DataBase_ID = ((int)(inValues[0]));
            string accessKey = ((string)(inValues[1]));
            return this.BeginGetAdminIDForMigraration(CS_DataBase_ID, accessKey, callback, asyncState);
        }
        
        private object[] OnEndGetAdminIDForMigraration(System.IAsyncResult result) {
            BaseLibrary.CloudService.DBMigrationInfo retVal = this.EndGetAdminIDForMigraration(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAdminIDForMigrarationCompleted(object state) {
            if ((this.GetAdminIDForMigrarationCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAdminIDForMigrarationCompleted(this, new GetAdminIDForMigrarationCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAdminIDForMigrarationAsync(int CS_DataBase_ID, string accessKey) {
            this.GetAdminIDForMigrarationAsync(CS_DataBase_ID, accessKey, null);
        }
        
        public void GetAdminIDForMigrarationAsync(int CS_DataBase_ID, string accessKey, object userState) {
            if ((this.onBeginGetAdminIDForMigrarationDelegate == null)) {
                this.onBeginGetAdminIDForMigrarationDelegate = new BeginOperationDelegate(this.OnBeginGetAdminIDForMigraration);
            }
            if ((this.onEndGetAdminIDForMigrarationDelegate == null)) {
                this.onEndGetAdminIDForMigrarationDelegate = new EndOperationDelegate(this.OnEndGetAdminIDForMigraration);
            }
            if ((this.onGetAdminIDForMigrarationCompletedDelegate == null)) {
                this.onGetAdminIDForMigrarationCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAdminIDForMigrarationCompleted);
            }
            base.InvokeAsync(this.onBeginGetAdminIDForMigrarationDelegate, new object[] {
                        CS_DataBase_ID,
                        accessKey}, this.onEndGetAdminIDForMigrarationDelegate, this.onGetAdminIDForMigrarationCompletedDelegate, userState);
        }
        
        public string CreateDummyTenant(
                    string clientName, 
                    string orgName, 
                    string adminUser, 
                    string city, 
                    int countryID, 
                    string countryCode, 
                    int regionID, 
                    int currencyID, 
                    string currencyName, 
                    int zoneMasterServerID, 
                    string globalIP, 
                    string dbUserName, 
                    string dbPwd, 
                    string dbPort, 
                    string dbService, 
                    int CS_DataBase_ID, 
                    string accessKey) {
            return base.Channel.CreateDummyTenant(clientName, orgName, adminUser, city, countryID, countryCode, regionID, currencyID, currencyName, zoneMasterServerID, globalIP, dbUserName, dbPwd, dbPort, dbService, CS_DataBase_ID, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCreateDummyTenant(
                    string clientName, 
                    string orgName, 
                    string adminUser, 
                    string city, 
                    int countryID, 
                    string countryCode, 
                    int regionID, 
                    int currencyID, 
                    string currencyName, 
                    int zoneMasterServerID, 
                    string globalIP, 
                    string dbUserName, 
                    string dbPwd, 
                    string dbPort, 
                    string dbService, 
                    int CS_DataBase_ID, 
                    string accessKey, 
                    System.AsyncCallback callback, 
                    object asyncState) {
            return base.Channel.BeginCreateDummyTenant(clientName, orgName, adminUser, city, countryID, countryCode, regionID, currencyID, currencyName, zoneMasterServerID, globalIP, dbUserName, dbPwd, dbPort, dbService, CS_DataBase_ID, accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndCreateDummyTenant(System.IAsyncResult result) {
            return base.Channel.EndCreateDummyTenant(result);
        }
        
        private System.IAsyncResult OnBeginCreateDummyTenant(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string clientName = ((string)(inValues[0]));
            string orgName = ((string)(inValues[1]));
            string adminUser = ((string)(inValues[2]));
            string city = ((string)(inValues[3]));
            int countryID = ((int)(inValues[4]));
            string countryCode = ((string)(inValues[5]));
            int regionID = ((int)(inValues[6]));
            int currencyID = ((int)(inValues[7]));
            string currencyName = ((string)(inValues[8]));
            int zoneMasterServerID = ((int)(inValues[9]));
            string globalIP = ((string)(inValues[10]));
            string dbUserName = ((string)(inValues[11]));
            string dbPwd = ((string)(inValues[12]));
            string dbPort = ((string)(inValues[13]));
            string dbService = ((string)(inValues[14]));
            int CS_DataBase_ID = ((int)(inValues[15]));
            string accessKey = ((string)(inValues[16]));
            return this.BeginCreateDummyTenant(clientName, orgName, adminUser, city, countryID, countryCode, regionID, currencyID, currencyName, zoneMasterServerID, globalIP, dbUserName, dbPwd, dbPort, dbService, CS_DataBase_ID, accessKey, callback, asyncState);
        }
        
        private object[] OnEndCreateDummyTenant(System.IAsyncResult result) {
            string retVal = this.EndCreateDummyTenant(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCreateDummyTenantCompleted(object state) {
            if ((this.CreateDummyTenantCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CreateDummyTenantCompleted(this, new CreateDummyTenantCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CreateDummyTenantAsync(
                    string clientName, 
                    string orgName, 
                    string adminUser, 
                    string city, 
                    int countryID, 
                    string countryCode, 
                    int regionID, 
                    int currencyID, 
                    string currencyName, 
                    int zoneMasterServerID, 
                    string globalIP, 
                    string dbUserName, 
                    string dbPwd, 
                    string dbPort, 
                    string dbService, 
                    int CS_DataBase_ID, 
                    string accessKey) {
            this.CreateDummyTenantAsync(clientName, orgName, adminUser, city, countryID, countryCode, regionID, currencyID, currencyName, zoneMasterServerID, globalIP, dbUserName, dbPwd, dbPort, dbService, CS_DataBase_ID, accessKey, null);
        }
        
        public void CreateDummyTenantAsync(
                    string clientName, 
                    string orgName, 
                    string adminUser, 
                    string city, 
                    int countryID, 
                    string countryCode, 
                    int regionID, 
                    int currencyID, 
                    string currencyName, 
                    int zoneMasterServerID, 
                    string globalIP, 
                    string dbUserName, 
                    string dbPwd, 
                    string dbPort, 
                    string dbService, 
                    int CS_DataBase_ID, 
                    string accessKey, 
                    object userState) {
            if ((this.onBeginCreateDummyTenantDelegate == null)) {
                this.onBeginCreateDummyTenantDelegate = new BeginOperationDelegate(this.OnBeginCreateDummyTenant);
            }
            if ((this.onEndCreateDummyTenantDelegate == null)) {
                this.onEndCreateDummyTenantDelegate = new EndOperationDelegate(this.OnEndCreateDummyTenant);
            }
            if ((this.onCreateDummyTenantCompletedDelegate == null)) {
                this.onCreateDummyTenantCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCreateDummyTenantCompleted);
            }
            base.InvokeAsync(this.onBeginCreateDummyTenantDelegate, new object[] {
                        clientName,
                        orgName,
                        adminUser,
                        city,
                        countryID,
                        countryCode,
                        regionID,
                        currencyID,
                        currencyName,
                        zoneMasterServerID,
                        globalIP,
                        dbUserName,
                        dbPwd,
                        dbPort,
                        dbService,
                        CS_DataBase_ID,
                        accessKey}, this.onEndCreateDummyTenantDelegate, this.onCreateDummyTenantCompletedDelegate, userState);
        }
        
        public BaseLibrary.CloudService.DBInfo GetRequestsToCreateDB(string zoneCode, string accessKey) {
            return base.Channel.GetRequestsToCreateDB(zoneCode, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetRequestsToCreateDB(string zoneCode, string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetRequestsToCreateDB(zoneCode, accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public BaseLibrary.CloudService.DBInfo EndGetRequestsToCreateDB(System.IAsyncResult result) {
            return base.Channel.EndGetRequestsToCreateDB(result);
        }
        
        private System.IAsyncResult OnBeginGetRequestsToCreateDB(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string zoneCode = ((string)(inValues[0]));
            string accessKey = ((string)(inValues[1]));
            return this.BeginGetRequestsToCreateDB(zoneCode, accessKey, callback, asyncState);
        }
        
        private object[] OnEndGetRequestsToCreateDB(System.IAsyncResult result) {
            BaseLibrary.CloudService.DBInfo retVal = this.EndGetRequestsToCreateDB(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetRequestsToCreateDBCompleted(object state) {
            if ((this.GetRequestsToCreateDBCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetRequestsToCreateDBCompleted(this, new GetRequestsToCreateDBCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetRequestsToCreateDBAsync(string zoneCode, string accessKey) {
            this.GetRequestsToCreateDBAsync(zoneCode, accessKey, null);
        }
        
        public void GetRequestsToCreateDBAsync(string zoneCode, string accessKey, object userState) {
            if ((this.onBeginGetRequestsToCreateDBDelegate == null)) {
                this.onBeginGetRequestsToCreateDBDelegate = new BeginOperationDelegate(this.OnBeginGetRequestsToCreateDB);
            }
            if ((this.onEndGetRequestsToCreateDBDelegate == null)) {
                this.onEndGetRequestsToCreateDBDelegate = new EndOperationDelegate(this.OnEndGetRequestsToCreateDB);
            }
            if ((this.onGetRequestsToCreateDBCompletedDelegate == null)) {
                this.onGetRequestsToCreateDBCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetRequestsToCreateDBCompleted);
            }
            base.InvokeAsync(this.onBeginGetRequestsToCreateDBDelegate, new object[] {
                        zoneCode,
                        accessKey}, this.onEndGetRequestsToCreateDBDelegate, this.onGetRequestsToCreateDBCompletedDelegate, userState);
        }
        
        public BaseLibrary.CloudService.DummyDBWithFTpInfo GetRequestsToCreateDBWithFtpInfo(string zoneCode, string accessKey) {
            return base.Channel.GetRequestsToCreateDBWithFtpInfo(zoneCode, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetRequestsToCreateDBWithFtpInfo(string zoneCode, string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetRequestsToCreateDBWithFtpInfo(zoneCode, accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public BaseLibrary.CloudService.DummyDBWithFTpInfo EndGetRequestsToCreateDBWithFtpInfo(System.IAsyncResult result) {
            return base.Channel.EndGetRequestsToCreateDBWithFtpInfo(result);
        }
        
        private System.IAsyncResult OnBeginGetRequestsToCreateDBWithFtpInfo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string zoneCode = ((string)(inValues[0]));
            string accessKey = ((string)(inValues[1]));
            return this.BeginGetRequestsToCreateDBWithFtpInfo(zoneCode, accessKey, callback, asyncState);
        }
        
        private object[] OnEndGetRequestsToCreateDBWithFtpInfo(System.IAsyncResult result) {
            BaseLibrary.CloudService.DummyDBWithFTpInfo retVal = this.EndGetRequestsToCreateDBWithFtpInfo(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetRequestsToCreateDBWithFtpInfoCompleted(object state) {
            if ((this.GetRequestsToCreateDBWithFtpInfoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetRequestsToCreateDBWithFtpInfoCompleted(this, new GetRequestsToCreateDBWithFtpInfoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetRequestsToCreateDBWithFtpInfoAsync(string zoneCode, string accessKey) {
            this.GetRequestsToCreateDBWithFtpInfoAsync(zoneCode, accessKey, null);
        }
        
        public void GetRequestsToCreateDBWithFtpInfoAsync(string zoneCode, string accessKey, object userState) {
            if ((this.onBeginGetRequestsToCreateDBWithFtpInfoDelegate == null)) {
                this.onBeginGetRequestsToCreateDBWithFtpInfoDelegate = new BeginOperationDelegate(this.OnBeginGetRequestsToCreateDBWithFtpInfo);
            }
            if ((this.onEndGetRequestsToCreateDBWithFtpInfoDelegate == null)) {
                this.onEndGetRequestsToCreateDBWithFtpInfoDelegate = new EndOperationDelegate(this.OnEndGetRequestsToCreateDBWithFtpInfo);
            }
            if ((this.onGetRequestsToCreateDBWithFtpInfoCompletedDelegate == null)) {
                this.onGetRequestsToCreateDBWithFtpInfoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetRequestsToCreateDBWithFtpInfoCompleted);
            }
            base.InvokeAsync(this.onBeginGetRequestsToCreateDBWithFtpInfoDelegate, new object[] {
                        zoneCode,
                        accessKey}, this.onEndGetRequestsToCreateDBWithFtpInfoDelegate, this.onGetRequestsToCreateDBWithFtpInfoCompletedDelegate, userState);
        }
        
        public string MarkMailServerCreated(int A_Asset_ID, bool isMailServerCreated, string accessKey) {
            return base.Channel.MarkMailServerCreated(A_Asset_ID, isMailServerCreated, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginMarkMailServerCreated(int A_Asset_ID, bool isMailServerCreated, string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginMarkMailServerCreated(A_Asset_ID, isMailServerCreated, accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndMarkMailServerCreated(System.IAsyncResult result) {
            return base.Channel.EndMarkMailServerCreated(result);
        }
        
        private System.IAsyncResult OnBeginMarkMailServerCreated(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int A_Asset_ID = ((int)(inValues[0]));
            bool isMailServerCreated = ((bool)(inValues[1]));
            string accessKey = ((string)(inValues[2]));
            return this.BeginMarkMailServerCreated(A_Asset_ID, isMailServerCreated, accessKey, callback, asyncState);
        }
        
        private object[] OnEndMarkMailServerCreated(System.IAsyncResult result) {
            string retVal = this.EndMarkMailServerCreated(result);
            return new object[] {
                    retVal};
        }
        
        private void OnMarkMailServerCreatedCompleted(object state) {
            if ((this.MarkMailServerCreatedCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.MarkMailServerCreatedCompleted(this, new MarkMailServerCreatedCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void MarkMailServerCreatedAsync(int A_Asset_ID, bool isMailServerCreated, string accessKey) {
            this.MarkMailServerCreatedAsync(A_Asset_ID, isMailServerCreated, accessKey, null);
        }
        
        public void MarkMailServerCreatedAsync(int A_Asset_ID, bool isMailServerCreated, string accessKey, object userState) {
            if ((this.onBeginMarkMailServerCreatedDelegate == null)) {
                this.onBeginMarkMailServerCreatedDelegate = new BeginOperationDelegate(this.OnBeginMarkMailServerCreated);
            }
            if ((this.onEndMarkMailServerCreatedDelegate == null)) {
                this.onEndMarkMailServerCreatedDelegate = new EndOperationDelegate(this.OnEndMarkMailServerCreated);
            }
            if ((this.onMarkMailServerCreatedCompletedDelegate == null)) {
                this.onMarkMailServerCreatedCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnMarkMailServerCreatedCompleted);
            }
            base.InvokeAsync(this.onBeginMarkMailServerCreatedDelegate, new object[] {
                        A_Asset_ID,
                        isMailServerCreated,
                        accessKey}, this.onEndMarkMailServerCreatedDelegate, this.onMarkMailServerCreatedCompletedDelegate, userState);
        }
        
        public string GetUserInfoOfTokenKey(string tokenKey, string msg, string accessKey) {
            return base.Channel.GetUserInfoOfTokenKey(tokenKey, msg, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetUserInfoOfTokenKey(string tokenKey, string msg, string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetUserInfoOfTokenKey(tokenKey, msg, accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGetUserInfoOfTokenKey(System.IAsyncResult result) {
            return base.Channel.EndGetUserInfoOfTokenKey(result);
        }
        
        private System.IAsyncResult OnBeginGetUserInfoOfTokenKey(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string tokenKey = ((string)(inValues[0]));
            string msg = ((string)(inValues[1]));
            string accessKey = ((string)(inValues[2]));
            return this.BeginGetUserInfoOfTokenKey(tokenKey, msg, accessKey, callback, asyncState);
        }
        
        private object[] OnEndGetUserInfoOfTokenKey(System.IAsyncResult result) {
            string retVal = this.EndGetUserInfoOfTokenKey(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetUserInfoOfTokenKeyCompleted(object state) {
            if ((this.GetUserInfoOfTokenKeyCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetUserInfoOfTokenKeyCompleted(this, new GetUserInfoOfTokenKeyCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetUserInfoOfTokenKeyAsync(string tokenKey, string msg, string accessKey) {
            this.GetUserInfoOfTokenKeyAsync(tokenKey, msg, accessKey, null);
        }
        
        public void GetUserInfoOfTokenKeyAsync(string tokenKey, string msg, string accessKey, object userState) {
            if ((this.onBeginGetUserInfoOfTokenKeyDelegate == null)) {
                this.onBeginGetUserInfoOfTokenKeyDelegate = new BeginOperationDelegate(this.OnBeginGetUserInfoOfTokenKey);
            }
            if ((this.onEndGetUserInfoOfTokenKeyDelegate == null)) {
                this.onEndGetUserInfoOfTokenKeyDelegate = new EndOperationDelegate(this.OnEndGetUserInfoOfTokenKey);
            }
            if ((this.onGetUserInfoOfTokenKeyCompletedDelegate == null)) {
                this.onGetUserInfoOfTokenKeyCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetUserInfoOfTokenKeyCompleted);
            }
            base.InvokeAsync(this.onBeginGetUserInfoOfTokenKeyDelegate, new object[] {
                        tokenKey,
                        msg,
                        accessKey}, this.onEndGetUserInfoOfTokenKeyDelegate, this.onGetUserInfoOfTokenKeyCompletedDelegate, userState);
        }
        
        public BaseLibrary.CloudService.CustomerBISetting GetBIUserCredential(string Url, int AD_Client_ID, string accessKey) {
            return base.Channel.GetBIUserCredential(Url, AD_Client_ID, accessKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetBIUserCredential(string Url, int AD_Client_ID, string accessKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetBIUserCredential(Url, AD_Client_ID, accessKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public BaseLibrary.CloudService.CustomerBISetting EndGetBIUserCredential(System.IAsyncResult result) {
            return base.Channel.EndGetBIUserCredential(result);
        }
        
        private System.IAsyncResult OnBeginGetBIUserCredential(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string Url = ((string)(inValues[0]));
            int AD_Client_ID = ((int)(inValues[1]));
            string accessKey = ((string)(inValues[2]));
            return this.BeginGetBIUserCredential(Url, AD_Client_ID, accessKey, callback, asyncState);
        }
        
        private object[] OnEndGetBIUserCredential(System.IAsyncResult result) {
            BaseLibrary.CloudService.CustomerBISetting retVal = this.EndGetBIUserCredential(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetBIUserCredentialCompleted(object state) {
            if ((this.GetBIUserCredentialCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetBIUserCredentialCompleted(this, new GetBIUserCredentialCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetBIUserCredentialAsync(string Url, int AD_Client_ID, string accessKey) {
            this.GetBIUserCredentialAsync(Url, AD_Client_ID, accessKey, null);
        }
        
        public void GetBIUserCredentialAsync(string Url, int AD_Client_ID, string accessKey, object userState) {
            if ((this.onBeginGetBIUserCredentialDelegate == null)) {
                this.onBeginGetBIUserCredentialDelegate = new BeginOperationDelegate(this.OnBeginGetBIUserCredential);
            }
            if ((this.onEndGetBIUserCredentialDelegate == null)) {
                this.onEndGetBIUserCredentialDelegate = new EndOperationDelegate(this.OnEndGetBIUserCredential);
            }
            if ((this.onGetBIUserCredentialCompletedDelegate == null)) {
                this.onGetBIUserCredentialCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetBIUserCredentialCompleted);
            }
            base.InvokeAsync(this.onBeginGetBIUserCredentialDelegate, new object[] {
                        Url,
                        AD_Client_ID,
                        accessKey}, this.onEndGetBIUserCredentialDelegate, this.onGetBIUserCredentialCompletedDelegate, userState);
        }
    }
}
